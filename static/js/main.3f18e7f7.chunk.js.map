{"version":3,"sources":["util/apiUtil.js","util/generalUtil.js","model/user/item/base/User.js","model/user/item/command/base/Dict.js","model/user/item/command/base/DictUtil.js","model/user/item/base/UserUtil.js","model/user/dict/User_Dict.js","model/user/admin/base/Admin.js","model/user/admin/adminuser/item/Item.js","model/user/admin/adminuser/item/ItemUtil.js","model/user/admin/adminuser/dict/Dict.js","model/user/admin/adminuser/dict/DictUtil.js","model/user/admin/base/AdminUtil.js","model/user/item/command/render/item/Item.js","model/user/item/command/render/item/ItemUtil.js","model/user/item/command/render/dict/Dict.js","model/user/dict/User_DictUtil.js","model/user/item/command/render/dict/DictUtil.js","model/main/entity/user/command/dict/_target/Target.js","model/main/entity/user/command/dict/_target/TargetType.js","model/main/entity/user/command/dict/_target/TargetUtil.js","model/main/entity/user/command/dict/base/Dict.js","model/main/entity/user/command/dict/base/DictUtil.js","model/main/entity/user/role/item/Item_Url.js","model/main/entity/user/role/item/Item.js","model/main/entity/user/command/base/CommandLevel.js","model/main/entity/user/command/base/Command.js","model/main/entity/user/command/base/CommandUtil.js","model/main/entity/user/command/base/CommandType.js","model/main/entity/user/role/item/ItemUtil.js","model/main/entity/user/role/dict/Dict.js","model/main/entity/user/role/dict/DictUtil.js","model/main/entity/project/base/Base_Url.js","model/main/entity/project/base/Base.js","model/main/entity/task/base/base/Base_Url.js","model/main/entity/task/base/base/Base.js","model/main/entity/task/base/status/StatusState.js","model/main/entity/task/base/status/Status.js","model/main/entity/task/base/base/BaseUtil.js","model/main/entity/task/base/status/StatusUtil.js","model/main/entity/task/base/dict/Dict.js","model/main/entity/task/base/dict/DictUtil.js","model/main/entity/project/base/BaseUtil.js","model/main/entity/project/dict/Dict.js","model/main/entity/project/dict/DictUtil.js","model/main/single/model/PMDataUtil.js","model/main/entity/view/ViewMode.js","model/main/single/model/PMData.js","model/main/entity/layout/layout/Layout.js","model/image/Image.js","model/image/ImageUtil.js","model/image/ImageView.js","model/main/entity/layout/header/Header.js","model/main/entity/layout/body/Body.js","util/commandUtil.js","model/main/entity/view/ViewType.js","model/main/entity/layout/body/BodyUtil.js","model/main/entity/layout/footer/Footer.js","model/main/entity/layout/layout/LayoutUtil.js","model/main/entity/layout/header/HeaderUtil.js","model/main/entity/layout/footer/FooterUtil.js","model/text/TextRenderState.js","model/text/TextState.js","model/text/TextVM.js","model/text/TextVMUtil.js","model/input/NewInputView.js","model/input/InputView.js","model/text/TextRenderItem.js","util/htmlUtil.js","model/svg/AlignLeftView.js","model/svg/AlignMiddleView.js","model/svg/AlignRightView.js","model/editor/tool/QuillToolType.js","model/float/FloatItemVM.js","model/float/FloatItemVMUtil.js","model/float/FloatItemView.js","model/select/SelectView.js","model/select/SelectVM.js","model/select/SelectVMUtil.js","model/color/ColorPicker.js","model/color/ColorPickerView.js","model/delete/EntDelete_ToggleType.js","model/delete/EntDelete_UseType.js","model/delete/EntDeleteView.js","model/delete/EntDelete_VisibleType.js","model/delete/EntDelete.js","model/delete/EntDeleteUtil.js","model/editor/tool/QuillToolUtil.js","model/color/ColorPickerUtil.js","model/editor/tool/QuillTool.js","model/editor/tool/QuillToolView.js","model/editor/QuillEditor.js","model/editor/QuillEditorUtil.js","model/editor/QuillEditorView.js","model/text/TextRenderItemUtil.js","model/text/TextRender_Dict.js","model/text/EditableTextView.js","model/text/EditableTextVM.js","model/text/EditableTextVMUtil.js","model/user/item/base/UserVM.js","model/user/item/base/UserVMUtil.js","model/user/dict/User_DictVM.js","model/user/login/Login.js","model/user/login/LoginUtil.js","model/user/newpassword/NewPassword.js","model/user/newpassword/NewPasswordUtil.js","model/user/dict/User_Dict_ViewType.js","model/user/admin/base/AdminVM.js","util/inputUtil.js","model/user/admin/usermanager/item/ItemVM.js","model/user/admin/usermanager/item/ItemVMUtil.js","model/user/admin/usermanager/table/TableView.js","model/user/admin/usermanager/dict/DictVM.js","model/user/admin/usermanager/dict/DictVMUtil.js","model/user/admin/adminuser/item/ItemVM.js","model/user/admin/adminuser/item/ItemVMUtil.js","model/user/admin/adminuser/table/TableView.js","model/user/admin/adminuser/dict/DictVM.js","model/user/admin/adminuser/dict/DictVMUtil.js","model/user/admin/base/AdminVMUtil.js","model/user/dict/User_DictVMUtil.js","model/main/entity/user/role/table/TableView.js","model/main/entity/user/role/item/ItemVM.js","model/main/entity/user/command/base/CommandVM.js","model/main/entity/user/command/base/CommandVMUtil.js","model/main/entity/user/role/item/ItemVMUtil.js","model/main/entity/user/role/dict/DictVM.js","model/main/entity/user/role/dict/DictVMUtil.js","model/main/entity/project/base/BaseVM.js","model/main/entity/project/field/Field.js","model/ref/RefDict.js","model/ref/RefDictUtil.js","util/refUtil.js","model/field/FieldView.js","model/field/Field.js","model/field/FieldUtil.js","model/main/entity/task/base/base/BaseVM.js","model/main/entity/task/base/base/BaseView.js","model/main/entity/task/base/field/Field.js","model/main/entity/task/base/status/StatusVM.js","model/main/entity/task/base/status/StatusVMUtil.js","model/main/entity/task/base/base/BaseVMUtil.js","model/main/entity/task/base/dict/DictView.js","model/main/entity/task/base/dict/DictVM.js","model/main/entity/task/base/dict/DictVMUtil.js","model/main/entity/project/base/BaseVMUtil.js","model/main/entity/project/dict/DictVM.js","model/main/entity/project/dict/DictVMUtil.js","model/main/single/form/PMDataVMUtil.js","model/main/entity/layout/header/HeaderView.js","model/main/entity/layout/body/BodyView.js","model/main/entity/layout/footer/FooterView.js","model/main/entity/layout/layout/LayoutView.js","model/main/single/form/PMDataView.js","model/main/single/form/PMDataVM.js","App.js","reportWebVitals.js","index.js"],"names":["http","timeout","axios","create","baseURL","Accept","handleNetworkError","err","showMessage","message","error","data","undefined","handleResponse","response","success","status","statusText","callApi","action","a","console","log","timeout_default","put","url","payload","config","result","post","randomId","Intl","DateTimeFormat","Math","random","toString","substr","newGUID","replace","c","crypto","getRandomValues","Uint8Array","Remove","dict","key","index","findIndex","x","Key","splice","Add","func","isDelete","newfunc","push","Value","Add_2","IsDelete","Handle","newDict_Handle","forEach","filter","SaveDatabase","q","handle","apiData","ApiData","isNew","_id","api","then","DeleteDatabase","SingleFilter","list","nullHandle","obj","User","OnSet_id_Func_Dict","Save","Password","genUtil","Url","Delete","CurrentList","Index","this","__id","v","tempId","TempId","userName","username","Username","name","Name","password","Dict","Users","indexOf","commandDict","util","Targets","GetTarget","target","Clear","item","IsEqual","GetFromDb","qI","get","userToken","Token","GetCommandDict","commandDictUtil","GetData","User_Dict","OnSet_LoginUser_Func","OnSet_Users_Func","AddUser","userUtil","token","localStorage","getItem","setItem","removeItem","loginUser","OnSet_LoginUser","users","admin","commandRender_Dict","headers","Admin","adminUser_Dict","Item","userId","role","Items","OnSet_Items_Func","AddItem","itemUtil","items","Handle_Items","IsGet_Items","setObj","map","iUtil","GetAdminUser_Dict","auDictUtil","GetItem","type","Type","Handle_LoginUser","IsGet_LoginUser","LoginUser","Config","Handle_Users","IsGet_Users","GetAdmin","adminUtil","GetCommandRender_Dict","commandRender_DictUtil","Target","other","OnSet_Role_Func","Refresh_Role","Validate","commandData","makeObservable","observable","roleUrl","Role","Commands","general","GetQueryData","GetRoleUrl","tt","Handle_Role","IsGet_Role","QueryData","rolename_func","rolename","PMData","Instance","RoleDict","RoleUrl","q1","q2","commands","isValid","pmData","GetUser","UserDict","targetUtil","GetCommand","Level","none","view","edit","GetOrder","Command","cl","level","commandLevel","content","answer","List","GetName","GetCommands","commandType","commandUtil","getObj","Base","OnSave","taskDict","order","subDict","state","Status","State","isShowSub","Is_ShowSub","host","Project","projectId","supId","draft","done","ss","GetSubDict","subDictUtil","GetStatus","statusUtil","Task","IsInDict","getApi","GetTaskDict","taskDictUtil","GetUserDict","baseUrl","userDictUtil","CommandRender_Dict","Render","res","length","AdminUser_Dict","GetRoleDict","roleDictUtil","GetProjectDict","IsPublish","ViewMode","vm","userDict","roleDict","projectDict","instance","Layout","header","body","footer","Image","Source","Alt","Width","Height","source","alt","width","height","ImageView","props","store","style","Style","className","ClassName","onClick","onDoubleClick","onMouseEnter","onMouseLeave","src","Component","observer","Header","PMDataVM","MainMenu","img","imgUtil","Body","targetData","CommandDict","Current","home","meta","type2","RouteData","GetContentView","vt","ProjectDict","View","CheckListDict","GetMainView","Footer","GetHeader","headerUtil","GetBody","bodyUtil","GetFooter","footerUtil","_default","text","TextVM","placeholder","ts","onSetContent","OnSetContent","inputStyle","wrapper","position","NewInputView","handleChange","e","Content","value","OnPaste","preventDefault","pasteEvent","originalEvent","clipboardData","getData","OnKeyDown","ctrlKey","which","keyCode","contentEditable","React","createRef","textVMUtil","Ref","onFocus","OnFocus","ref","innerRef","Placeholder","onChange","InputView","InputRegex","test","onKeyDown","TextRenderItem","render","createMarkup","__html","AlignLeftView","viewBox","xmlns","d","AlignMiddleView","AlignRightView","align_left","align_middle","align_right","font_family","font_size","font_color","_delete","FloatItemVM","getClassName","location","loc","FloatItemView","getWrapperContent","floatItemVMUtil","Option","Select","SelectView","onValueChange","SelectedIndex","onDropdownVisibleChange","Open","SelectVM","InitialIndex","elems","displayContent","TitleRender","id","IdRender","isNaN","floatElem","CanClear","floatItemStore","size","DivStyle","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","open","CanOpen","disabled","Disabled","IsDisabled","initialItem","GetInitialIndex","InitialItem","selectedIndex","selectedItem","SetValue","SelectedItem","GetSelectedItem","canOpen","isDisabled","IsSet_InitialItem","initialIndex","OnSelectedItemChanged","padding","titleRender","OnSetOpen","GetDisabled_Func","GetTitleRender","DisplayContent","ColorPicker","color","PickColor","Color","hex","OnSetColor","ColorPickerView","MainView","title","trigger","placement","backgroundColor","manual","mobx","EntDeleteView","EntDelete","UseType","ut","Is_Visible","WrapperStyle","WrapperView","AdditionElement","VisibleType","BlankStyle","is_Visible","ToggleType","is_Hover_Visible","Show_Hover","stopPropagation","OnPre_ShowHover","Is_Hover_Visible","Toggle_Hover","PreRun","IsRun_Cancel","OnPreRun","Run","PreCancel","Cancel","Show","Hide","OnPreHide","Title","OnSet_Is_Hover_Visible","run","OnRun","cancel","OnCancel","showHover_Button","Retrieve_ShowHover_Button","retrieve_ShowHover_Button","Retrieve_WrapperView","retrieve_WrapperView","Modal_ContentView","visible","onVisibleChange","ShowHover_Button","modal_ButtonView","modal_InfoView","modal_ContentView","Modal_InfoView","Modal_ButtonView","display","QuillTool","Get_DefaultData","selUtil","colorPickerUtil","toolView","toolClass","ToolClass","defaultValue","persist","Data","ContentView","contentView","QuillToolView","ToolView","QuillEditor","Focus","current","focus","IsFocusInit","IsHaveTool","tools","subTools","GetTool","FullTools","toolUtil","Tools","concat","SubTools","QuillEditorView","OnChange","LastContent","IsCancel","altKey","OnAltEnter","charCode","OnEmptyBackspace","OnTab","modules","syntax","toolbar","container","handlers","Handles","clipboard","matchVisual","Tool_Container","formats","PlaceHolder","GetRender","rs","context","OnDoubleClick","OnClick","storageType_css","StorageType","dangerouslySetInnerHTML","htmlUtil","Is_Tool_Visible","Is_Edit_Visible","Edit","r_onFocus","Editor","Is_OK_Visible","EditOK","TextRender_Dict","renderUtil","EditableTextView","EditableTextVM","IsEditing","OnSet_RenderState_Func_Dict","renderState","CanChange_RenderState","Ready","RenderState","NotReady","Render_Dict","OnSet_Ref_Func_Dict","setFocus","Ref_Element","editor","titleFunc","render_Dict","Old_RenderState","ref_Element","getEl","canEdit","isToolVisible","GetEditor","InitialContent","editorUtil","UserVM","Hide_Tool","IsSaveDatabase","ModelItem","UsernameVM","OnSet_RenderState","usernameVM","editTextUtil","CanEdit","User_DictVM","Logout","viewType","user","ViewType","IsSet_Model","login","newPassword","loginRender","userRender","mainViewRender","MainViewRender","modalViewRender","ModalViewRender","viewRender","ViewRender","Login","Is_Modal_Visible","ModalOK","pw","warn","Initial","PasswordVM","passwordVM","GetUsernameVM","GetPasswordVM","GetButtonView","GetModalView","hideVisible","onCancel","dictVM","uUtil","uVMUtil","NewPassword","opw","OldPassword","npw","rnpw","ReNewPassword","OpenModal","OldPasswordVM","NewPasswordVM","ReNewPasswordVM","oldPasswordVM","newPasswordVM","reNewPasswordVM","oldpassword","newpassword","GetOldPasswordVM","GetNewPasswordVM","GetReNewPasswordVM","AdminVM","userManager_Dict","alt_enter","enter","preFunc","postFunc","GetInput","field","postOkFunc","set_default","Get_Shortcut","IsEscape","okfunc","ItemVM","tempUsername","IsPasswordChanged","OK","TempUsername","inputUtil","TempPassword","IsUsernameChanged","deleteVM","GetRowView","UsernameView","PasswordView","DeleteVM","GetDeleteVM","TableView","DictVM","RowView","OnSet_User_Func","user_Select","Handle_User","IsGet_User","GetUser_Select","setObj2","User_Select","GetDefault_ViewRender","UserManager_Dict","GetUserManager_Dict","um_dUtil","GetLogin","loginUtil","GetNewPassword","newpasswordUtil","Handle_ViewType","IsGet_ViewType","GetViewType","GetDefault_LoginRender","ButtonView","GetDefault_UserRender","GetDefault_MainViewRender","LoginRender","UserRender","GetDefault_ModalViewRender","ModalView","nameVM","NameVM","CommandVM","UpLevel","GetView","n_index","NameView","BaseVM","GetField","Fields","SetCurrent","CurrentItem","fields","RefDict","GetRef","ClickOutsite","refName","Target_RefData","GetRefItem","Events","contains","CheckOutside","Export_RefData","loadType","document","addEventListener","removeEventListener","FieldView","Field","refUtil","RefData","ValueVM","PreReady","PreNotReady","PreEdit","PreEditOK","refData","valueGet","valueSet","ValueGet","RefineValue","IsRefinedValue","ValueSet","OnSetValue","valueVM","ValueSet_OK","ValueVM_Render","valueSet_OK","storageType","GetRefData","GetDefault_ValueGet","GetDefault_ValueSet","Key_id","Get_WrapperView","is_ShowSub","SubDict","StatusVM","AddSub","task","ToggleSub","DoneTask","FullState","DoneTask_Message","Can_ShowSub_Css","Is_ShowSub_Css","IsValid_DoneTask","PlusCircleOutlined","ShowSub_Css","SolutionOutlined","DoneTask_Css","CheckCircleOutlined","GetFields","inputs","i","fName","param","r_name","f","fieldUtil","CloseCircleOutlined","GetRank","supRank","Rank","GetIndent_View","Indent_View","IsSub","SubView","IsInDiscipline","ItemsView","pmDataVM","TaskDict","GetTitleView","Css","OnEdit","TitleView","GetLayout","projectDictUtil","HeaderView","checkedChildren","unCheckedChildren","checked","BodyView","FooterView","LayoutView","match","params","withRouter","PMDataView","path","exact","component","routeData","OnSet_IsAdmin_Func_Dict","isAdmin","viewMode","UnAuthorized_View","layout","IsDeploy","basename","process","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3f18e7f7.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\nexport const API_URL = 'https://api.bimdev.vn/api';\r\n\r\n// const http = axios.create({\r\n//   baseURL: API_URL,\r\n//   Accept: 'application/json',\r\n//   'Content-Type': 'application/json',\r\n//   //timeout: 20000\r\n//   timeout: 20000000\r\n// });\r\n\r\nconst http = (timeout) => axios.create({\r\n  baseURL: API_URL,\r\n  Accept: 'application/json',\r\n  'Content-Type': 'application/json',\r\n  timeout,\r\n});\r\n\r\nconst handleNetworkError = (err, showMessage) => {\r\n  if (showMessage) {\r\n    message.error(`Error sending request: ${err}`);\r\n  }\r\n  return {\r\n    data: undefined\r\n  };\r\n}\r\n\r\nconst handleResponse = (response) => {\r\n  // Parse the axios response\r\n  const success = response.status >= 200 && response.status < 300;\r\n  const data = response.data;\r\n  let message = response.statusText;\r\n  return {\r\n    success,\r\n    data,\r\n    message\r\n  };\r\n}\r\n\r\nexport const callApi = async (action, showMessage) => {\r\n  try {\r\n    const response = await action;\r\n    return handleResponse(response);\r\n  } catch (err) {\r\n    console.log(err)\r\n    return handleNetworkError(err, showMessage);\r\n  } finally { }\r\n}\r\n\r\nexport const timeout_default = 20000\r\n\r\nexport const get = async (url, config, timeout, showMessage = true) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  return callApi(http(timeout).get(url, config));\r\n}\r\n\r\nexport const put = async (url, payload, config, timeout, showMessage = true) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).put(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const post = async (url, payload, config, timeout, showMessage = true) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).post(url, payload, config));\r\n  return result;\r\n}\r\n\r\nexport const del = async (url, payload, timeout, showMessage = true) => {\r\n  timeout = timeout ? timeout : timeout_default\r\n  var result = await callApi(http(timeout).delete(url, payload));\r\n  return result;\r\n}","import { PMData } from '../model/main/single/model/PMData';\r\nimport { PMDataVM } from '../model/main/single/form/PMDataVM';\r\nimport * as api from './apiUtil'\r\n\r\nexport let dtFormat = new Intl.DateTimeFormat('en-GB');\r\n\r\nexport const deepClone = (q) => {\r\n  return JSON.parse(JSON.stringify(q));\r\n}\r\n\r\n// random\r\nexport const randomId = () => {\r\n  // Math.random should be unique because of its seeding algorithm.\r\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n  // after the decimal.\r\n  return Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nexport const newGUID = () => {\r\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n  );\r\n}\r\n\r\nexport const randomInt = (digitLength = 4) => {\r\n  return Math.floor(Math.random() * Math.pow(10, digitLength))\r\n}\r\n\r\n// model\r\nexport const UpdateFromModel = (obj, action) => {\r\n  obj.M2VM = true;\r\n  action();\r\n  obj.M2VM = false;\r\n}\r\n\r\nexport const MoveItem = (list, oldIndex, newIndex) => {\r\n  if (oldIndex === -1 || newIndex === -1 ||\r\n    oldIndex === newIndex) return;\r\n  var temp = list[oldIndex];\r\n  list[oldIndex] = list[newIndex];\r\n  list[newIndex] = temp;\r\n}\r\n\r\nexport const IsEqual = (list1, list2) => {\r\n  if (list1.length !== list2.length) return false;\r\n  var isValidCheck = true;\r\n  var isEqual = true;\r\n\r\n  list1.forEach((x, i) => {\r\n    if (isValidCheck && x !== list2[i]) {\r\n      isValidCheck = false; isEqual = false;\r\n    }\r\n  })\r\n\r\n  return isEqual;\r\n}\r\n\r\nexport const IsSameValues = (list1, list2) => {\r\n  var isValidCheck = true;\r\n  var isSame = true;\r\n\r\n  list1.forEach((x, i) => {\r\n    if (isValidCheck && !list2.includes(x)) {\r\n      isValidCheck = false; isSame = false;\r\n    }\r\n  })\r\n\r\n  return isSame;\r\n}\r\n\r\nexport const GroupBy = function (xs, key, gr_Prop) {\r\n  var groups = [];\r\n\r\n  xs.forEach(x => {\r\n    var val = x[key];\r\n    var group = undefined;\r\n    var index = groups.findIndex(y => val === y.Key);\r\n    if (index === -1) {\r\n      group = {\r\n        Key: val,\r\n        Items: []\r\n      };\r\n\r\n      if (gr_Prop){\r\n        group[gr_Prop] = val;\r\n      }\r\n\r\n      groups.push(group);\r\n    } else {\r\n      group = groups[index];\r\n    }\r\n    group.Items.push(x);\r\n  })\r\n\r\n  return groups;\r\n};\r\n\r\nexport const Remove = (dict, key) => {\r\n  var index = dict.findIndex(x => x.Key === key);\r\n  if (index !== 0) {\r\n    return dict.splice(index, 1);\r\n  }\r\n}\r\n\r\nexport const Add = (dict, func, isDelete = true) => {\r\n  var key = newGUID();\r\n\r\n  var newfunc = () => {\r\n    func();\r\n    if (isDelete) {\r\n      Remove(dict, key);\r\n    }\r\n  }\r\n\r\n  dict.push({\r\n    Key: key,\r\n    Value: newfunc\r\n  });\r\n}\r\n\r\nexport const Add_2 = (dict, func, isDelete = true) => {\r\n  dict.push({\r\n    Key: newGUID(),\r\n    Value: func,\r\n    IsDelete : isDelete\r\n  });\r\n}\r\n\r\nexport const Handle = (dict, newDict_Handle) => {\r\n  dict.forEach(x => x.Value());\r\n\r\n  dict = dict.filter(x => !x.IsDelete);\r\n  newDict_Handle(dict);\r\n}\r\n\r\n// Truy xuất thông tin Excel\r\nexport const ExcelColumnName = (n) => {\r\n  var ordA = 'A'.charCodeAt(0);\r\n  var ordZ = 'Z'.charCodeAt(0);\r\n  var len = ordZ - ordA + 1;\r\n\r\n  var s = \"\";\r\n  while(n >= 0) {\r\n      s = String.fromCharCode(n % len + ordA) + s;\r\n      n = Math.floor(n / len) - 1;\r\n  }\r\n  return s;\r\n}\r\n\r\nexport const ExcelCellName = (row, col) => {\r\n  return `${ExcelColumnName(col)}${row+1}`;\r\n}\r\n\r\nexport const ExcelRangeName = (row1, col1, row2, col2) => {\r\n  return `${ExcelCellName(row1, col1)}:${ExcelCellName(row2, col2)}`\r\n}\r\n\r\n// Max min\r\nexport const MinMax = (arr) => {\r\n  return arr.reduce(({min, max}, v) => ({\r\n    min: min < v ? min : v,\r\n    max: max > v ? max : v,\r\n  }), { min: arr[0], max: arr[0] });\r\n}\r\n\r\n// Save Database\r\nexport const SaveDatabase = (q, url, handle) => {\r\n  var apiData = q.ApiData\r\n  var _id = apiData._id;\r\n\r\n  var isNew = _id ? false : true\r\n  const apiFunc = () => isNew ?\r\n    api.post(`${url}/add`, apiData) :\r\n    api.put(`${url}/edit`, apiData) \r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (isNew){ \r\n        q._id = data._id\r\n      }\r\n      handle(data, isNew);\r\n    })\r\n}\r\n\r\nexport const DeleteDatabase = (q, url, handle) => {\r\n  var apiData = {\r\n    _id: q._id\r\n  }\r\n\r\n  const apiFunc = () => api.put(`${url}/delete`, apiData)\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      handle(data);\r\n    })\r\n}\r\n\r\n// Get plain text from paste\r\nexport const GetPlainText = (pasteEvent) => {\r\n  var text = (pasteEvent.originalEvent || pasteEvent).clipboardData.getData('text/plain');\r\n  return text;\r\n}\r\n\r\n// Remove new line\r\nexport const RemoveNewLine = (text) => {\r\n  return text.replace(/\\r?\\n|\\r/g, \"\");\r\n}\r\n\r\n// First - Last Item\r\nexport const GetFirst = (list) => {\r\n  return list.length !== 0 ? list[0] : undefined;\r\n}\r\n\r\nexport const GetLast = (list) => {\r\n  return list.length !== 0 ? list[list.length -1] : undefined;\r\n}\r\n\r\n// Image\r\nexport const IsImage = (fileName) => {\r\n  var isValid = false;\r\n  var list = [ '.jpg', '.png', '.jpeg' ]\r\n\r\n  list.forEach(x => {\r\n    if (!isValid && fileName.includes(x)){\r\n      isValid = true;\r\n    }\r\n  })\r\n\r\n  return isValid;\r\n}\r\n\r\nexport const SingleFilter = (list, filter, nullHandle) => {\r\n  var index = list.findIndex(filter);\r\n  var obj = index !== -1 ? list[index] : undefined\r\n\r\n  if (obj === undefined && nullHandle) {\r\n    var obj = nullHandle();\r\n    list.push(obj);\r\n  }\r\n\r\n  return obj;\r\n}","import { message } from 'antd';\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as util from './UserUtil'\r\n\r\nexport class User {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  userName\r\n  get Username(){\r\n    if (!this.userName){\r\n      this.userName = 'username'\r\n    } return this.userName\r\n  } set Username(v){\r\n    this.userName = v\r\n  }\r\n\r\n  Password\r\n\r\n  Name\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      _id: this._id,\r\n      username : this.Username,\r\n      name : this.Name,\r\n      password : this.Password\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n\r\n  get Url() {\r\n    return this.Dict.Url\r\n  }\r\n\r\n  Save = (handle) => {\r\n    this.SaveDatabase(false, handle);\r\n    this.Password = undefined\r\n  } \r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, this.Url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Users\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n\r\n    if (this._id) {\r\n      this.DeleteDatabase(false)\r\n    }\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, this.Url, () => {\r\n      if (showMessage) {\r\n        message.success('delete successflly!');\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n\r\n  // command\r\n  commandDict\r\n  get CommandDict(){\r\n    if (!this.commandDict){\r\n      this.commandDict = util.GetCommandDict(this)\r\n    } return this.commandDict;\r\n  }\r\n}","import * as util from './DictUtil'\r\n\r\nexport class Dict {\r\n  // constructor() {\r\n  //   makeObservable(this, {\r\n\r\n  //   })\r\n  // }\r\n\r\n  Dict\r\n\r\n  get userId(){\r\n    return this.Dict._id\r\n  }\r\n\r\n  Targets = []\r\n\r\n  GetTarget = (target) => {\r\n    return util.GetTarget(this, target)\r\n  }\r\n\r\n  Clear = () => {\r\n    this.Targets = [];\r\n  }\r\n}","import { Dict } from \"./Dict\";\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n// import * as targetUtil from '../target/TargetUtil'\r\n\r\n// instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Method\r\nexport const GetTarget = (q, target) => {\r\n  var list = q.Targets;\r\n  var item = genUtil.SingleFilter(list, x => x.IsEqual(target));\r\n  if (item == null) {\r\n    // item = targetUtil.GetFromData(target, q);\r\n    list.push(item);\r\n  }\r\n  return item;\r\n}","import { User } from \"./User\"\r\nimport * as api from '../../../../util/apiUtil'\r\nimport * as commandDictUtil from '../command/base/DictUtil'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = get(dict);\r\n  qI._id = data._id\r\n  qI.Username = data.username;\r\n  qI.Name = data.name;\r\n\r\n  if (data.userToken){\r\n    dict.Token = data.userToken\r\n  }\r\n  \r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new User();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// property\r\nexport const GetCommandDict = (q) => {\r\n  return commandDictUtil.get(q);\r\n}\r\n\r\n// Api\r\nexport const GetData = (url, apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import * as util from './User_DictUtil'\r\nimport * as genUtil from '../../../util/generalUtil'\r\nimport * as userUtil from '../item/base/UserUtil'\r\n\r\nconst userToken = 'userToken'\r\n\r\nexport class User_Dict {\r\n  Url\r\n\r\n  token\r\n  get Token(){\r\n    if (!this.token){\r\n      this.token = localStorage.getItem(userToken);\r\n    } return this.token\r\n  } set Token(v){\r\n    this.token = v\r\n    if (!v){\r\n      localStorage.removeItem(userToken)\r\n    } else {\r\n      localStorage.setItem(userToken,v)\r\n    }\r\n  }\r\n  \r\n  // LoginUser\r\n  OnSet_LoginUser_Func =[]\r\n\r\n  loginUser\r\n  get LoginUser(){\r\n    if (!this.loginUser){\r\n      util.Handle_LoginUser(this)\r\n    } return this.loginUser;\r\n  } set LoginUser(v){\r\n    this.loginUser = v;\r\n\r\n    if (!v){\r\n      this.Token = v;\r\n    }\r\n\r\n    if (this.OnSet_LoginUser){\r\n      this.OnSet_LoginUser(v);\r\n    }\r\n\r\n    genUtil.Handle(this.OnSet_LoginUser_Func,\r\n      (v) => this.OnSet_LoginUser_Func = v)\r\n  }\r\n\r\n  // Users\r\n  OnSet_Users_Func = []\r\n\r\n  users\r\n  get Users(){\r\n    if (!this.users){\r\n      util.Handle_Users(this)\r\n    } return this.users\r\n  } set Users(v){\r\n    this.users = v;\r\n\r\n    genUtil.Handle(this.OnSet_Users_Func,\r\n      (v) => this.OnSet_Users_Func = v)\r\n  }\r\n\r\n  AddUser = () => {\r\n    var qI = userUtil.get(this);\r\n\r\n    this.Users.push(qI);\r\n    return qI;\r\n  }\r\n\r\n  // Admin\r\n  admin\r\n  get Admin(){\r\n    if(!this.admin){\r\n      this.admin = util.GetAdmin(this)\r\n    } return this.admin;\r\n  }\r\n\r\n  // Command Render\r\n  commandRender_Dict\r\n  get CommandRender_Dict(){\r\n    if (!this.commandRender_Dict){\r\n      this.commandRender_Dict = util.GetCommandRender_Dict(this)\r\n    } return this.commandRender_Dict;\r\n  }\r\n\r\n  get Config(){\r\n    return {\r\n      headers : {\r\n        'Authorization': 'Bearer ' + this.Token\r\n      }\r\n    }\r\n  }\r\n}","import * as util from './AdminUtil'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport class Admin {\r\n  // Users\r\n  OnSet_Users_Func = []\r\n\r\n  get Users(){\r\n    return this.Dict.Users\r\n  }\r\n\r\n  // Dict\r\n  Dict\r\n\r\n  adminUser_Dict\r\n  get AdminUser_Dict(){\r\n    if (!this.adminUser_Dict){\r\n      this.adminUser_Dict = \r\n        util.GetAdminUser_Dict(this)\r\n    } return this.adminUser_Dict\r\n  }\r\n\r\n  get Url(){\r\n    return this.Dict.Url\r\n  }\r\n}","import { message } from 'antd';\r\nimport * as util from './ItemUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class Item {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  get Url() {\r\n    return this.Dict.Url\r\n  }\r\n\r\n  // User\r\n  userId\r\n\r\n  get ApiData() {\r\n    var obj = {\r\n      _id: this._id,\r\n      userId: this.userId,\r\n      role: \"Admin\"\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  Save = (handle) => {\r\n    const save = () => this.SaveDatabase(false, handle);\r\n    save();\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, this.Url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.DeleteDatabase(false)\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, this.Url, () => {\r\n      if (showMessage) {\r\n        message.success('delete successflly!');\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n}","import { Item } from './Item'\r\nimport { message } from 'antd'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as api from '../../../../../util/apiUtil'\r\n\r\n// Instance\r\nexport const GetFromDb = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = data._id\r\n  qI.userId = data.userId\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Item();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n\r\n\r\n// Method\r\n\r\n\r\n// Api\r\nexport const GetData = (url, apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import * as util from './DictUtil'\r\nimport * as itemUtil from '../item/ItemUtil'\r\nimport { message } from 'antd'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class Dict {\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n    \r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = () => {\r\n    var qI = itemUtil.get(this);\r\n\r\n    this.Items.push(qI)\r\n    return qI;\r\n  }\r\n}","import { Dict, ExportSet_Dict } from \"./Dict\"\r\nimport * as iUtil from '../item/ItemUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => iUtil.GetFromDb(x, q))\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  const getApi = () => {\r\n    var apiData = {\r\n    }\r\n\r\n    iUtil.GetData(q.Url, apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  getApi()\r\n}\r\n\r\n\r\n// Method\r\n","import { Admin } from \"./Admin\";\r\nimport * as userUtil from '../../item/base/UserUtil'\r\nimport * as auDictUtil from '../adminuser/dict/DictUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Admin();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Users = (q) => {\r\n  if (q.IsGet_Users) return undefined\r\n  q.IsGet_Users = true;\r\n\r\n  var url = q.Url\r\n\r\n  const setObj = (data) => {\r\n    q.Users = data.map(x => {\r\n      return q.GetUser_Func(x)\r\n    });\r\n    q.IsGet_Users = false;\r\n  }\r\n\r\n  var apiData = {}\r\n\r\n  userUtil.GetData(\r\n    url,\r\n    apiData, (data) => setObj(data)\r\n  )\r\n}\r\n\r\n// dict\r\nexport const GetAdminUser_Dict = (q) => {\r\n  return auDictUtil.get(q)\r\n}\r\n\r\n// Method\r\n","import * as util from './ItemUtil'\r\n\r\nexport class Item {\r\n  Type\r\n\r\n  Render\r\n}","import { Item } from \"./Item\";\r\n\r\n// instance\r\nexport const GetFromData = (type, dict) => {\r\n  var qI = get(dict);\r\n  qI.Type = type\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Item();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Method\r\n","import * as util from './DictUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as itemUtil from '../item/ItemUtil'\r\n\r\nexport class Dict {\r\n  Items = []\r\n\r\n  GetItem = (type) => {\r\n    var list = this.Items;\r\n    var item = genUtil.SingleFilter(list, x => x.Type === type);\r\n    if (!item){\r\n      item = itemUtil.GetFromData(type, this);\r\n      list.push(item)\r\n    } \r\n    return item;\r\n  }\r\n}","import { User_Dict } from \"./User_Dict\"\r\nimport * as api from '../../../util/apiUtil'\r\nimport * as userUtil from '../item/base/UserUtil'\r\nimport * as adminUtil from '../admin/base/AdminUtil'\r\n\r\nimport * as commandRender_DictUtil from '../item/command/render/dict/DictUtil'\r\n\r\n// Instance\r\nexport const get = (url, dict) => {\r\n  var qI = new User_Dict();\r\n  qI.Url = url\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_LoginUser = (q) => {\r\n  if (q.IsGet_LoginUser) return undefined;\r\n  q.IsGet_LoginUser = true;\r\n\r\n  const setObj = (data) => {\r\n    q.LoginUser = data ? userUtil.GetFromDb(data, q) : undefined;\r\n    q.IsGet_LoginUser = true;\r\n  }\r\n\r\n  if (q.Token) {\r\n    const apiFunc = () => api.post(`${q.Url}/token`, {}, q.Config);\r\n    apiFunc().then(response => response.data)\r\n      .then(data => {\r\n        setObj(data)\r\n      })\r\n  } else {\r\n    setObj();\r\n  }\r\n}\r\n\r\nexport const Handle_Users = (q) => {\r\n  if (q.IsGet_Users) return undefined\r\n  q.IsGet_Users = true;\r\n\r\n  var url = q.Url\r\n\r\n  const setObj = (data) => {\r\n    q.Users = data.map(x => userUtil.GetFromDb(x, q));\r\n    q.IsGet_Users = false;\r\n  }\r\n\r\n  var apiData = {}\r\n\r\n  userUtil.GetData(\r\n    url,\r\n    apiData, (data) => setObj(data)\r\n  )\r\n}\r\n\r\nexport const GetAdmin = (q) => {\r\n  return adminUtil.get(q);\r\n}\r\n\r\n// Command Render\r\nexport const GetCommandRender_Dict = (q) => {\r\n  return commandRender_DictUtil.get(q);\r\n}","import { Dict } from \"./Dict\";\r\n\r\n// instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Method\r\n","import { makeObservable, observable, action } from 'mobx';\r\n\r\nimport * as util from './TargetUtil'\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\n\r\nexport class Target {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      role: observable,\r\n    })\r\n  }\r\n\r\n  Dict\r\n\r\n  Value\r\n\r\n  Type\r\n\r\n  IsEqual = (other) => {\r\n    return util.IsEqual(this, other)\r\n  }\r\n\r\n  get QueryData() {\r\n    return util.GetQueryData(this)\r\n  }\r\n\r\n  roleUrl\r\n  get RoleUrl() {\r\n    if (!this.roleUrl) {\r\n      this.roleUrl = util.GetRoleUrl(this)\r\n    } return this.roleUrl\r\n  }\r\n\r\n  // role\r\n  OnSet_Role_Func = []\r\n\r\n  role = undefined\r\n  get Role() {\r\n    if (this.role === undefined) {\r\n      util.Handle_Role(this)\r\n    } return this.role\r\n  } set Role(v) {\r\n    this.role = v;\r\n\r\n    genUtil.Handle(this.OnSet_Role_Func,\r\n      (v) => this.OnSet_Role_Func = v)\r\n  }\r\n\r\n  Refresh_Role = () => {\r\n    util.Handle_Role(this)\r\n  }\r\n\r\n  get Commands() {\r\n    return this.Role?.Commands;\r\n  }\r\n\r\n  Validate = (commandData) => {\r\n    return util.Validate(this, commandData)\r\n  }\r\n}","export const general = 'general'","import { Target } from \"./Target\"\r\nimport * as tt from './TargetType'\r\n\r\nimport * as api from '../../../../../../../util/apiUtil'\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\n\r\nimport { PMData } from \"../../../../../single/model/PMData\"\r\n\r\nconst pmData = () => PMData.Instance;\r\n\r\n// instance\r\nexport const GetFromData = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  if (!data) {\r\n    qI.Type = tt.general\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Target();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// property\r\nexport const GetQueryData = (q) => {\r\n  var qI = {}\r\n  var dict = q.Dict;\r\n\r\n  // user\r\n  switch (q.Type) {\r\n    default:\r\n      qI.userId = dict.User?._id\r\n      break;\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetRoleUrl = (q) => {\r\n  switch (q.Type) {\r\n    case tt.general:\r\n      return \"https://api.bimdev.vn/api/btr_userrole\"\r\n  }\r\n}\r\n\r\nexport const Handle_Role = (q) => {\r\n  if (q.IsGet_Role) return undefined\r\n  q.IsGet_Role = true\r\n\r\n  const setObj = (data) => {\r\n    q.Role = data\r\n    q.IsGet_Role = false\r\n  }\r\n\r\n  if (!q.QueryData.userId){\r\n    setObj(undefined)\r\n    return\r\n  }\r\n\r\n  const rolename_func = (rolename) => {\r\n    rolename = rolename ? rolename : 'User'\r\n    pmData().RoleDict.GetItem(rolename, (item) => setObj(item));\r\n  }\r\n\r\n  var url = q.RoleUrl\r\n  var apiData = q.QueryData\r\n\r\n  const apiFunc = () => api.post(`${url}/get`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      rolename_func(data?.role)\r\n    })\r\n}\r\n\r\n// method\r\nexport const IsEqual = (q1, q2) => {\r\n  return q1.Type === q2.Type && q1.Value === q2.Value\r\n}\r\n\r\nexport const Validate = (q, commandData) => {\r\n  if (!q.Commands) return false;\r\n  \r\n  var commands = q.Commands;\r\n\r\n  var isValid = false;\r\n  commands.forEach(x => {\r\n    if (!isValid) {\r\n      isValid = x.Validate(commandData)\r\n    }\r\n  })\r\n\r\n  return isValid;\r\n}","import * as util from './DictUtil'\r\nimport * as genUtil from '../../../../../../../util/generalUtil'\r\n\r\nexport class Dict {\r\n  Dict\r\n\r\n  get Current() {\r\n    return this\r\n  }\r\n\r\n  get User() {\r\n    return util.GetUser(this)\r\n  }\r\n\r\n  Targets = []\r\n\r\n  GetTarget = (data) => {\r\n    return util.GetTarget(this, data)\r\n  }\r\n}","import * as genUtil from '../../../../../../../util/generalUtil'\r\nimport { PMData } from '../../../../../single/model/PMData'\r\nimport * as targetUtil from '../_target/TargetUtil'\r\n\r\nimport {Dict} from './Dict'\r\n\r\nconst pmData = () => PMData.Instance;\r\n\r\n// instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  genUtil.Add_2(pmData().UserDict.OnSet_LoginUser_Func,\r\n    () => qI.Targets.forEach(x => {\r\n      x.Refresh_Role();\r\n      // x.Role = undefined\r\n    }), false)\r\n\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// property\r\nexport const GetUser = (q) => {\r\n  return pmData().UserDict.LoginUser\r\n}\r\n\r\n// method\r\nexport const GetTarget = (q, data) => {\r\n  var target = targetUtil.GetFromData(data, q);\r\n  var list = q.Targets\r\n\r\n  var item = genUtil.SingleFilter(list, x => x.IsEqual(target));\r\n  if (!item){\r\n    list.push(target);\r\n    return target;\r\n  }\r\n  return item;\r\n}","export const url = \"https://api.bimdev.vn/api/btr_role\"","import * as util from './ItemUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport {url} from './Item_Url'\r\nimport { message } from 'antd'\r\n\r\nexport class Item {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Name = 'tên vai trò'\r\n\r\n  // command\r\n  commands\r\n  get Commands(){\r\n    if (!this.commands){\r\n      this.commands = util.GetCommands(this)\r\n    } return this.commands;\r\n  }\r\n\r\n  GetCommand = (type) => {\r\n    return genUtil.SingleFilter(this.Commands, x => x.Type === type);\r\n  }\r\n\r\n  // apidata\r\n  get ApiData(){\r\n    return {\r\n      _id : this._id,\r\n      name : this.Name,\r\n      commands : this.Commands.filter(x => x.Level !== 'none')\r\n        .map(x => x.ApiData)\r\n    }\r\n  }\r\n\r\n  // Save\r\n  Save = (handle) => {\r\n    this.SaveDatabase(false, handle)\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  // index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.DeleteDatabase(false)\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, url, () => {\r\n      if (showMessage){\r\n        message.success('delete successfully!');\r\n      }\r\n      if (handle){\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n}","export const none = 'none'\r\nexport const view = 'view'\r\nexport const edit = 'edit'\r\n\r\nexport const List = () => {\r\n  return [\r\n    none, view, edit\r\n  ]\r\n}\r\n\r\nexport const GetOrder = (q) => {\r\n  switch (q) {\r\n    case none:\r\n      return 0;\r\n    case view:\r\n      return 1;\r\n    case edit:\r\n      return 2\r\n  }\r\n}","import * as cl from './CommandLevel'\r\nimport * as util from './CommandUtil'\r\n\r\nexport class Command {\r\n  get id() {\r\n    return this.Type\r\n  }\r\n\r\n  Type\r\n\r\n  Level = cl.none\r\n\r\n  // apidata\r\n  get ApiData(){\r\n    return {\r\n      type : this.Type,\r\n      level : this.Level\r\n    }\r\n  }\r\n\r\n  // validate\r\n  Validate = (data) => {\r\n    return util.Validate(this, data)\r\n  }\r\n}","import {Command} from './Command'\r\nimport * as commandLevel from './CommandLevel'\r\n\r\n// instance\r\nexport const GetFromData = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI.Type = data.type\r\n  qI.Level = data.level\r\n\r\n  return qI;  \r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Command();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// method\r\nexport const Validate = (q, data) => {\r\n  return q.Type === data.type && \r\n    commandLevel.GetOrder(q.Level) >= commandLevel.GetOrder(data.level);\r\n}","export const content = 'content'\r\nexport const answer = 'answer'\r\n\r\nexport const List = () => {\r\n  return [\r\n    content,\r\n    answer\r\n  ]\r\n}\r\n\r\nexport const GetName = (key) => {\r\n  var name\r\n\r\n  switch (key) {\r\n    case content:\r\n      name = 'Nội dung'\r\n      break\r\n    case answer:\r\n      name = 'Trả lời';\r\n      break;\r\n  }\r\n\r\n  return name;\r\n}","import {Item} from './Item'\r\nimport * as commandUtil from '../../command/base/CommandUtil'\r\nimport * as commandType from '../../command/base/CommandType'\r\nimport {url} from './Item_Url'\r\n\r\nimport * as api from '../../../../../../util/apiUtil'\r\n\r\n// instance\r\nexport const GetFromData = (data, dict) => {\r\n  var qI = get(dict)\r\n\r\n  qI._id = data._id\r\n  qI.Name = data.name\r\n  \r\n  // map command\r\n  data.commands.forEach(x => {\r\n    qI.GetCommand(x.type).Level = x.level\r\n  })\r\n\r\n  return qI;  \r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Item();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}\r\n\r\n// property\r\nexport const GetCommands = (q) => {\r\n  return commandType.List().map(x => {\r\n    var qI = commandUtil.get(q);\r\n    qI.Type = x;\r\n    return qI;\r\n  })\r\n}","import * as util from './DictUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as itemUtil from '../item/ItemUtil'\r\n\r\nexport class Dict {\r\n  // item\r\n  OnSet_Items_Func = []\r\n\r\n  items\r\n  get Items(){\r\n    if (!this.items){\r\n      util.Handle_Items(this)\r\n    } return this.items; \r\n  } set Items(v){\r\n    this.items = v;\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func, \r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = () => {\r\n    var qI = itemUtil.get(this);\r\n\r\n    this.Items.push(qI)\r\n    return qI;\r\n  }\r\n\r\n  GetItem = (name, handle) => {\r\n    util.GetItem(this, name, handle)\r\n  }\r\n}","import * as itemUtil from '../item/ItemUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { Dict } from './Dict'\r\n\r\n// instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => itemUtil.GetFromData(x, q))\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  // setObj([]);\r\n\r\n  const getApi = () => {\r\n    var apiData = {\r\n    }\r\n\r\n    itemUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  getApi()\r\n}\r\n\r\n// method\r\nexport const GetItem = (q, name, handle) => {\r\n  if (!name){\r\n    handle(name)\r\n  }\r\n\r\n  const getObj = () => {\r\n    var list = q.Items;\r\n    var item = genUtil.SingleFilter(list, x => x.Name === name);\r\n\r\n    handle(item);\r\n  }\r\n\r\n  if (q.Items) {\r\n    getObj();\r\n  } else {\r\n    genUtil.Add_2(q.OnSet_Items_Func,\r\n      getObj);\r\n  }\r\n}","export const url = \"https://api.bimdev.vn/api/bpm_project\"","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport { url } from './Base_Url'\r\nimport * as util from './BaseUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class Base {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Name : observable\r\n    })\r\n  }\r\n\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Name = 'dự án'\r\n\r\n  // task\r\n  taskDict\r\n  get TaskDict(){\r\n    if (!this.taskDict){\r\n      this.taskDict = util.GetTaskDict(this)\r\n    } return this.taskDict\r\n  }\r\n\r\n  // apidata\r\n  get ApiData() {\r\n    var obj = {   \r\n      _id: this._id,\r\n      order : this.Index,\r\n      name: this.Name,\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  // Save\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  Save = (handle) => {\r\n    const func = () => {\r\n      if (handle){\r\n        handle();\r\n      }\r\n    }\r\n\r\n    const finish = () => {\r\n      this.OnSave = false;\r\n      func();\r\n    }\r\n\r\n    if (this.OnSave){\r\n      func();\r\n      return;\r\n    } else {\r\n      this.OnSave = true;\r\n    }\r\n\r\n    this.SaveDatabase(false, finish)\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.DeleteDatabase(false)\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, url, () => {\r\n      if (showMessage) {\r\n        message.success('delete successfully!');\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n}","export const url = \"https://api.bimdev.vn/api/bpm_task\"","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport { url } from './Base_Url'\r\nimport { Base as Project } from '../../../project/base/Base'\r\nimport * as util from './BaseUtil'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport class Base {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Name : observable\r\n    })\r\n  }\r\n\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Name = 'tên checklist'\r\n\r\n  // sub\r\n  subDict\r\n  get SubDict(){\r\n    if (!this.subDict){\r\n      this.subDict = util.GetSubDict(this)\r\n    } return this.subDict\r\n  }\r\n\r\n  // status\r\n  status\r\n  get Status(){\r\n    if (!this.status){\r\n      this.status = util.GetStatus(this)\r\n    } return this.status\r\n  }\r\n\r\n  // apidata\r\n  get ApiData() {\r\n    var obj = {   \r\n      _id: this._id,\r\n      order : this.Index,\r\n      name: this.Name,\r\n      state : this.Status.State,\r\n      isShowSub : this.Is_ShowSub\r\n    }\r\n\r\n    var host = this.Dict.Dict;\r\n    if (host instanceof Project){\r\n      obj.projectId = host._id\r\n    }\r\n    else if(host instanceof Base) {\r\n      obj.supId = host._id\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  // Save\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    genUtil.SaveDatabase(this, url,\r\n      () => {\r\n        if (showMessage) {\r\n          message.success('save successfully!')\r\n        }\r\n        if (handle) {\r\n          handle();\r\n        }\r\n      });\r\n  }\r\n\r\n  Save = (handle) => {\r\n    const func = () => {\r\n      if (handle){\r\n        handle();\r\n      }\r\n    }\r\n\r\n    const finish = () => {\r\n      this.OnSave = false;\r\n      func();\r\n    }\r\n\r\n    if (this.OnSave){\r\n      func();\r\n      return;\r\n    } else {\r\n      this.OnSave = true;\r\n    }\r\n\r\n    this.SaveDatabase(false, finish)\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.DeleteDatabase(false)\r\n  }\r\n\r\n  DeleteDatabase = (showMessage = true, handle) => {\r\n    genUtil.DeleteDatabase(this, url, () => {\r\n      if (showMessage) {\r\n        message.success('delete successfully!');\r\n      }\r\n      if (handle) {\r\n        handle()\r\n      }\r\n    });\r\n  }\r\n}","export const draft = 'draft'\r\nexport const process = 'process'\r\nexport const done = 'done'","import * as ss from './StatusState'\r\n\r\nexport class Status {\r\n  State = ss.draft\r\n}","import { url } from './Base_Url'\r\nimport { Base } from './Base'\r\nimport * as subDictUtil from '../dict/DictUtil'\r\nimport * as statusUtil from '../status/StatusUtil'\r\n\r\nimport * as api from '../../../../../../util/apiUtil'\r\n\r\n// Instance\r\nexport const GetFromData = (data, dict) => {\r\n  var qI = get(dict);\r\n\r\n  qI._id = data._id\r\n  qI.Name = data.name\r\n  qI.Is_ShowSub = data.isShowSub\r\n  qI.Status.State = data.state\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Base();\r\n\r\n  qI.Dict = dict;\r\n  \r\n  return qI;\r\n}\r\n\r\n// Property\r\n// sub\r\nexport const GetSubDict = (q) => {\r\n  return subDictUtil.get(q);\r\n}\r\n\r\n// status\r\nexport const GetStatus = (q) => {\r\n  return statusUtil.get(q)\r\n}\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import { Status } from \"./Status\"\r\n\r\n// instance\r\nexport const get = (dict) => {\r\n  var qI = new Status();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// property\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DictUtil'\r\nimport * as itemUtil from '../base/BaseUtil'\r\n\r\nimport { Base as Task } from '../base/Base'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport { PMData } from '../../../../single/model/PMData';\r\n\r\nexport class Dict {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n    })\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = () => {\r\n    var q = itemUtil.get(this)\r\n    this.Items.push(q);\r\n\r\n    return q\r\n  }\r\n\r\n  // \r\n  get IsInDict() {\r\n    return this.Dict && !(this.Dict instanceof PMData)\r\n  }\r\n\r\n  get IsSub() {\r\n    return this.Dict && this.Dict instanceof Task\r\n  }\r\n}","import { Dict } from \"./Dict\"\r\nimport { Base as Project } from '../../../project/base/Base'\r\nimport { Base as Task } from '../base/Base'\r\nimport * as itemUtil from '../base/BaseUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = () => {\r\n  return [\r\n    // { _id: genUtil.newGUID(), name: '10 phẩm chất lãnh đạo' },\r\n    // { _id: genUtil.newGUID(), name: '10 nguyên nhân thất bại lãnh đạo' }\r\n  ]\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => itemUtil.GetFromData(x, q))\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  // setObj(\r\n  //   GetTest()\r\n  // );\r\n\r\n  var host = q.Dict\r\n\r\n  const getApi = () => {\r\n    var apiData = {\r\n      // disciplineId : host._id\r\n    }\r\n\r\n    if (q.IsInDict) {\r\n      if (host instanceof Project) {\r\n        apiData.projectId = host._id\r\n      } else if (host instanceof Task) {\r\n        apiData.supId = host._id\r\n      }\r\n    }\r\n\r\n    itemUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  if (!q.IsInDict || host._id) {\r\n    getApi()\r\n  } else {\r\n    host.Save(() => setObj([]));\r\n  }\r\n}\r\n\r\n// Method\r\n","import { url } from './Base_Url'\r\nimport { Base } from './Base'\r\nimport * as taskDictUtil from '../../task/base/dict/DictUtil'\r\n\r\nimport * as api from '../../../../../util/apiUtil'\r\n\r\n// Instance\r\nexport const GetFromData = (data, dict) => {\r\n  var qI = get(dict);\r\n\r\n  qI._id = data._id\r\n  qI.Name = data.name\r\n\r\n  return qI;\r\n}\r\n\r\nexport const get = (dict) => {\r\n  var qI = new Base();\r\n\r\n  qI.Dict = dict;\r\n  \r\n  return qI;\r\n}\r\n\r\n// Property\r\n// task\r\nexport const GetTaskDict = (q) => {\r\n  return taskDictUtil.get(q)\r\n}\r\n\r\n// api\r\nexport const GetData = (apiData, handle) => {\r\n  var apiData = apiData ? apiData : {}\r\n  const apiFunc = () => api.post(`${url}/list`, apiData);\r\n\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      if (handle) {\r\n        handle(data)\r\n      }\r\n    })\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DictUtil'\r\nimport * as itemUtil from '../base/BaseUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class Dict {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n    })\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n    \r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = () => {\r\n    var q = itemUtil.get(this)\r\n    this.Items.push(q);\r\n\r\n    return q\r\n  }\r\n}","import { Dict } from \"./Dict\"\r\nimport * as itemUtil from '../base/BaseUtil'\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Dict();\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = () => {\r\n  return [\r\n    // { _id: genUtil.newGUID(), name: 'Mong muốn' },\r\n    // { _id: genUtil.newGUID(), name: 'Niềm tin' }\r\n  ]\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => itemUtil.GetFromData(x, q))\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  // setObj(\r\n  //   GetTest()\r\n  // );\r\n\r\n  const getApi = () => {\r\n    var apiData = {\r\n\r\n    }\r\n\r\n    itemUtil.GetData(apiData, (data) => {\r\n      setObj(data)\r\n    })\r\n  }\r\n\r\n  getApi()\r\n}\r\n\r\n// Method\r\n","import { PMData } from './PMData';\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as api from '../../../../util/apiUtil'\r\n\r\n// user\r\nimport * as userDictUtil from '../../../user/dict/User_DictUtil'\r\n\r\n// command\r\nimport * as commandDictUtil from '../../entity/user/command/dict/base/DictUtil'\r\n\r\n// role\r\nimport * as roleDictUtil from '../../entity/user/role/dict/DictUtil'\r\n\r\n// project\r\nimport * as projectDictUtil from '../../entity/project/dict/DictUtil'\r\n\r\n// task\r\nimport * as taskDictUtil from '../../entity/task/base/dict/DictUtil'\r\n\r\n\r\n// Instance\r\nexport const get = () => {\r\n  var qI = new PMData();\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n// user\r\nexport const GetUserDict = (data) => {\r\n  var baseUrl = 'https://api.bimdev.vn/api'\r\n  \r\n  var qI = userDictUtil.get(\r\n    `${baseUrl}/bu_user`,\r\n    data);\r\n\r\n  // command render\r\n  var cr_d = qI.CommandRender_Dict;\r\n  cr_d.GetItem('admin').Render = (q, handle) => {\r\n    var url = `${baseUrl}/bu_usercommand`\r\n\r\n    var apiData = {\r\n      userId : q.userId\r\n    }\r\n\r\n    api.post(`${url}/list`, apiData).then(res => res.data)\r\n      .then(data => {\r\n        if (data.length === 1){\r\n          if (handle){\r\n            handle(data[0].commands);\r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n  // admin\r\n  qI.Admin.AdminUser_Dict.Url = 'https://api.bimdev.vn/api/btr_userrole'\r\n\r\n  return qI;\r\n}\r\n\r\n// role\r\nexport const GetRoleDict = (data) => {\r\n  return roleDictUtil.get(data);\r\n}\r\n\r\n// Command\r\nexport const GetCommandDict = (q) => {\r\n  var qI = commandDictUtil.get(q);\r\n  return qI;\r\n}\r\n\r\n// project\r\nexport const GetProjectDict = (q) => {\r\n  return projectDictUtil.get(q);\r\n}\r\n\r\n// task\r\nexport const GetTaskDict = (q) => {\r\n  return taskDictUtil.get(q);\r\n}","export const view = 'view'\r\nexport const edit = 'edit'","import * as util from './PMDataUtil'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as vm from '../../entity/view/ViewMode'\r\n\r\nexport class PMData {\r\n  constructor() {\r\n\r\n  }\r\n\r\n  static instance\r\n  static get Instance() {\r\n    if (!this.instance) {\r\n      this.instance = util.get();\r\n    }\r\n    return this.instance;\r\n  } static set Instance(v) {\r\n    this.instance = v;\r\n  }\r\n\r\n  // \r\n  IsPublish = false\r\n\r\n  // view\r\n  ViewMode = vm.view\r\n\r\n  // Data\r\n  // user\r\n  userDict\r\n  get UserDict(){\r\n    if (!this.userDict){\r\n      this.userDict = util.GetUserDict(this)\r\n    } return this.userDict\r\n  }\r\n\r\n  // role\r\n  roleDict\r\n  get RoleDict(){\r\n    if (!this.roleDict){\r\n      this.roleDict = util.GetRoleDict(this)\r\n    } return this.roleDict\r\n  }\r\n\r\n  // Command\r\n  commandDict\r\n  get CommandDict(){\r\n    if (!this.commandDict){\r\n      this.commandDict = util.GetCommandDict(this)\r\n    } return this.commandDict\r\n  }\r\n\r\n  // discipline\r\n  projectDict\r\n  get ProjectDict(){\r\n    if (!this.projectDict){\r\n      this.projectDict = util.GetProjectDict(this)\r\n    } return this.projectDict\r\n  }\r\n\r\n  // task\r\n  taskDict\r\n  get TaskDict(){\r\n    if (!this.taskDict){\r\n      this.taskDict = util.GetTaskDict(this)\r\n    } return this.taskDict\r\n  }\r\n}\r\n","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as util from './LayoutUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as vs from '../../view/ViewState'\r\n\r\nexport class Layout {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  header\r\n  get Header() {\r\n    if (!this.header) {\r\n      this.header = util.GetHeader(this);\r\n    }\r\n    return this.header;\r\n  }\r\n\r\n  body\r\n  get Body() {\r\n    if (!this.body) {\r\n      this.body = util.GetBody(this);\r\n    }\r\n    return this.body;\r\n  }\r\n\r\n  footer\r\n  get Footer() {\r\n    if (!this.footer) {\r\n      this.footer = util.GetFooter(this);\r\n    }\r\n    return this.footer;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport class Image {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Source: observable,\r\n      Alt: observable,\r\n      Width : observable,\r\n      Height: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId(){\r\n    if (!this.tempId){\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n\r\n  Source = undefined\r\n\r\n  Alt = undefined\r\n\r\n  Width = undefined\r\n\r\n  Height = undefined\r\n}","import { Image } from \"./Image\"\r\n\r\nexport const get = (source, alt, width, height) => {\r\n  var qI = new Image();\r\n\r\n  qI.Source = source;\r\n  qI.Alt = alt;\r\n  qI.Width = width;\r\n  qI.Height = height;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetTest = () => {\r\n  return get(\r\n    'https://raw.githubusercontent.com/bimtaiht/bimdev-source/master/Image/hello.png',\r\n    'test-image',\r\n    200, 200\r\n  )\r\n}","import { Component } from \"react\";\r\nimport React from 'react'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as imageUtil from './ImageUtil'\r\n\r\nclass ImageView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = imageUtil.GetTest();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var style = this.props.style ?\r\n      this.props.style : data.Style;\r\n\r\n    var className = this.props.className ?\r\n      this.props.className : data.ClassName\r\n\r\n    var onClick = this.props.onClick;\r\n    var onDoubleClick = this.props.onDoubleClick;\r\n    var onMouseEnter = this.props.onMouseEnter;\r\n    var onMouseLeave = this.props.onMouseLeave;\r\n\r\n    return (\r\n      <>\r\n        <img className={className} style={style}\r\n          src={data.Source} alt={data.Alt}\r\n          width={data.Width} height={data.Height} \r\n          onClick={onClick} \r\n          onDoubleClick={onDoubleClick}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(ImageView)","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as util from './HeaderUtil'\r\nimport * as vs from '../../view/ViewState'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport ImageView from '../../../../image/ImageView'\r\nimport * as imgUtil from '../../../../image/ImageUtil'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class Header {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Data\r\n  get MainMenu() {\r\n    return pmDataVM().MainMenu;\r\n  }\r\n\r\n  get LogoView() {\r\n    var img = imgUtil.get('https://bimdev.vn/wp-content/uploads/2020/01/logo.jpg')\r\n    return <ImageView className='header__logo' store={img} />\r\n  }\r\n}","import { message } from 'antd';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport * as util from './BodyUtil'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nexport class Body {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  // Data\r\n\r\n  \r\n  // View\r\n  get MainView() {\r\n    return util.GetMainView(this);\r\n  }\r\n}","import { PMData } from \"../model/main/single/model/PMData\"\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Validate\r\nexport const Validate = (targetData, commandData) => {\r\n  var validate = pmData().CommandDict.Current.GetTarget(targetData).Validate(commandData);\r\n  return validate;\r\n}\r\n\r\n// Copy\r\nexport const copyToClipboard = (content) => {\r\n  // Create a dummy input to copy the string array inside it\r\n  var dummy = document.createElement(\"input\");\r\n\r\n  // Add it to the document\r\n  document.body.appendChild(dummy);\r\n\r\n  // Set its ID\r\n  dummy.setAttribute(\"id\", \"dummy_id\");\r\n\r\n  // Output the array into it\r\n  document.getElementById(\"dummy_id\").value = content;\r\n\r\n  // Select it\r\n  dummy.select();\r\n\r\n  // Copy its contents\r\n  document.execCommand(\"copy\");\r\n\r\n  // Remove it as its not needed anymore\r\n  document.body.removeChild(dummy);\r\n}","import { PMDataVM } from \"../../single/form/PMDataVM\";\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport const home = 'home'\r\nexport const role = 'role'\r\nexport const checklist = 'checklist'\r\nexport const subject = 'subject'\r\n\r\nconst pmDataVM = () => PMDataVM.instance\r\n\r\nexport const Handle = (type, meta, type2) => {\r\n  var qI = pmDataVM();\r\n  qI.RouteData = [type ? type : home, type2];\r\n}","import { Body } from './Body';\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as comUtil from '../../../../../util/commandUtil'\r\n\r\nimport { convertToRaw, EditorState } from 'draft-js';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport * as vt from '../../view/ViewType'\r\nimport { message, Switch } from 'antd';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as vm from '../../view/ViewMode'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\nconst pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Body();\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n\r\n// Property\r\n// view\r\nexport const GetContentView = (q) => {\r\n  var qI = pmDataVM();\r\n\r\n  switch (qI.RouteData[0]) {\r\n    case vt.home:\r\n      return <div className='mt-4'>\r\n        {qI.ProjectDict.View}\r\n      </div>\r\n    case vt.checklist:\r\n      return qI.CheckListDict.View\r\n    case vt.role:\r\n      return <div>\r\n        <div>\r\n          {qI.RoleDict.View}\r\n        </div>\r\n\r\n        <div className='mt-4'>\r\n          {qI.UserDict.Admin.AdminUser_Dict.View}\r\n        </div>\r\n      </div>\r\n  }\r\n}\r\n\r\n// main\r\nexport const GetMainView = (q) => {\r\n  return !pmData().IsPublish ? <div className='m-10'>\r\n    {GetContentView(q)}\r\n  </div>\r\n    : GetContentView(q)\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as util from './FooterUtil'\r\n\r\nexport class Footer {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n}","import { Layout } from './Layout';\r\nimport * as headerUtil from '../header/HeaderUtil'\r\nimport * as bodyUtil from '../body/BodyUtil'\r\nimport * as footerUtil from '../footer/FooterUtil'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport { message } from 'antd';\r\n\r\nexport const pmDataVM = () => PMDataVM.Instance\r\nexport const pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = () => {\r\n  var qI = new Layout();\r\n\r\n  return qI;\r\n}\r\n\r\n\r\n// Property\r\nexport const GetHeader = (q) => {\r\n  return headerUtil.get(q)\r\n}\r\n\r\nexport const GetBody = (q) => {\r\n  return bodyUtil.get(q)\r\n}\r\n\r\nexport const GetFooter = (q) => {\r\n  return footerUtil.get(q)\r\n}","import { Header, Vi_Header } from './Header';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as vs from '../../view/ViewState'\r\n\r\nconst pmData = () => PMData.Instance\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Header();\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n","import { Footer } from './Footer';\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Footer();\r\n\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n\r\n// Property\r\n\r\n","export const _default = \"default\";\r\nexport const ready = 'ready'\r\nexport const edit = \"edit\";","export const text = 'text'\r\nexport const password = 'password'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as ts from './TextState'\r\n\r\nexport class TextVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      placeholder : observable,\r\n      State : observable,\r\n      ClassName : observable\r\n    })\r\n  }\r\n\r\n  GetContentFunc\r\n\r\n  content = undefined\r\n  get Content(){\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    if (this.onSetContent) {\r\n      this.onSetContent(v);\r\n    }\r\n\r\n    if (this.OnSetContent) {\r\n      this.OnSetContent(v);\r\n    }\r\n  }\r\n\r\n  placeholder = \"nội dung input\"\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  inputStyle\r\n\r\n  style\r\n  get Style() {\r\n    if (!this.style) {\r\n      this.style = this.inputStyle ? this.inputStyle : {};\r\n\r\n      if (this.wrapper) {\r\n        this.style.position = 'relative';\r\n      }\r\n    }\r\n    return this.style;\r\n  }\r\n\r\n  State = ts.text\r\n\r\n  ClassName = undefined\r\n}","import { TextVM } from \"./TextVM\"\r\n\r\nexport const get = (q, placeholder) => {\r\n  var qI = new TextVM();\r\n  qI.content = q;\r\n  qI.placeholder = placeholder;\r\n  return qI;\r\n}","import { Component } from \"react\";\r\nimport React from 'react'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport * as ts from '../text/TextState'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nclass NewInputView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.contentEditable = React.createRef();\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `Nội dung input`\r\n      this.state = textVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n\r\n    var data = this.state;\r\n    data.Ref = React.createRef();\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    var data = this.state;\r\n    data.Content = e.target.value;\r\n  };\r\n\r\n  OnPaste = (e) => {\r\n    e.preventDefault();\r\n    var text = genUtil.GetPlainText(e);\r\n\r\n    var data = this.state;\r\n    data.Content = text;\r\n  }\r\n\r\n  OnKeyDown = (e) => {\r\n    var data = this.state;\r\n    if (data.OnKeyDown){\r\n      data.OnKeyDown(e)\r\n      return;\r\n    }\r\n\r\n    // Ctrl + B\r\n    if (e.ctrlKey && e.which == 66) {\r\n      e.preventDefault();\r\n    }\r\n    // Ctrl + I\r\n    else if (e.ctrlKey && e.which == 73) {\r\n      e.preventDefault();\r\n    }\r\n    // Enter\r\n    else if (e.keyCode == 13) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var Content = data.Content;\r\n    var className = this.props.className ? this.props.className : ''\r\n    var style = this.props.style\r\n    var onFocus = this.props.onFocus ? \r\n      this.props.onFocus : data.OnFocus\r\n\r\n    return (\r\n      <>\r\n        {data.State === ts.text ?\r\n          <ContentEditable ref={data.Ref}\r\n            className={`ant-input ${className}`}\r\n            style={style}\r\n            innerRef={this.contentEditable}\r\n            placeholder={data.Placeholder}\r\n            style={style}\r\n            html={Content ? Content : ''}\r\n            onChange={this.handleChange}\r\n            onPaste={this.OnPaste}\r\n            onKeyDown={this.OnKeyDown} \r\n            onFocus={onFocus}/>\r\n          : ''}\r\n        {data.State === ts.password ?\r\n          <Input.Password value={Content} onChange={this.handleChange}\r\n            className={className}\r\n            style={style} /> : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(NewInputView)","import React, { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Input } from \"antd\";\r\nimport * as textVMUtil from '../text/TextVMUtil'\r\nimport * as ts from '../text/TextState'\r\n\r\nclass InputView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      var content = `Nội dung input`\r\n      this.state = textVMUtil.get(content);\r\n    } else {\r\n      this.state = store;\r\n    }\r\n\r\n    var data = this.state;\r\n    data.Ref = React.createRef();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    var { value } = e.target;\r\n\r\n    var data = this.state;\r\n\r\n    if (value !== '' && data.InputRegex) {\r\n      if (!data.InputRegex.test(value)) return;\r\n    }\r\n\r\n    this.state.Content = value;\r\n  }\r\n\r\n  OnKeyDown = (e) => {\r\n    var data = this.state;\r\n\r\n    if (data.OnKeyDown) {\r\n      data.OnKeyDown(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var { content, placeholder } = data;\r\n    var style = this.props.style\r\n    var className = this.props.className\r\n    var onFocus = this.props.onFocus ?\r\n      this.props.onFocus : data.OnFocus\r\n\r\n    return (\r\n      <>\r\n        {data.State === ts.text ?\r\n          <Input ref={data.Ref} style={style} className={className}\r\n            value={content} onChange={this.onChange}\r\n            onKeyDown={this.OnKeyDown}\r\n            onFocus={onFocus}\r\n            placeholder={placeholder} /> : ''}\r\n        {data.State === ts.password ?\r\n          <Input.Password ref={data.Ref} style={style} className={className}\r\n            value={content} onChange={this.onChange}\r\n            onFocus={onFocus}\r\n            onKeyDown={this.OnKeyDown} /> : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(InputView)","import * as util from './TextRenderItemUtil'\r\n\r\nexport class TextRenderItem {\r\n  render\r\n  get Render(){\r\n    if (!this.render){\r\n      this.render = util.GetRender(this);\r\n    }\r\n    return this.render;\r\n  }\r\n  set Render(v){\r\n    this.render = v;\r\n  }\r\n}","export const createMarkup = (data) => {\r\n  try {\r\n    return { __html: data };\r\n  }\r\n  catch {\r\n    data = \"Invalid html\";\r\n    return { __html: data };\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nclass AlignLeftView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      //this.state = new UserFormVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var viewBox = this.props.viewBox ?\r\n      this.props.viewBox : \"0 -5 469 469\"\r\n\r\n    return (\r\n      <>\r\n        <svg viewBox={viewBox} xmlns=\"http://www.w3.org/2000/svg\"\r\n        // height=\"469pt\" width=\"469pt\"\r\n        >\r\n          <path d=\"m325.332031 32.167969h-309.332031c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h309.332031c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\" /><path d=\"m453.332031 138.832031h-437.332031c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h437.332031c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\" /><path d=\"m325.332031 245.5h-309.332031c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h309.332031c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\" /><path d=\"m453.332031 352.167969h-437.332031c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h437.332031c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\" /><path d=\"m325.332031 458.832031h-309.332031c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h309.332031c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\" />\r\n        </svg>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(AlignLeftView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nclass AlignMiddleView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      //this.state = new UserFormVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var viewBox = this.props.viewBox ?\r\n      this.props.viewBox : \"0 0 469 469\"\r\n\r\n    return (\r\n      <>\r\n        <svg viewBox={viewBox}>\r\n          <path d=\"m384 42.667969h-298.667969c-11.773437 0-21.332031-9.558594-21.332031-21.335938 0-11.773437 9.558594-21.332031 21.332031-21.332031h298.667969c11.777344 0 21.332031 9.558594 21.332031 21.332031 0 11.777344-9.554687 21.335938-21.332031 21.335938zm0 0\" /><path d=\"m448 149.332031h-426.667969c-11.773437 0-21.332031-9.554687-21.332031-21.332031s9.558594-21.332031 21.332031-21.332031h426.667969c11.777344 0 21.332031 9.554687 21.332031 21.332031s-9.554687 21.332031-21.332031 21.332031zm0 0\" /><path d=\"m384 256h-298.667969c-11.773437 0-21.332031-9.558594-21.332031-21.332031 0-11.777344 9.558594-21.335938 21.332031-21.335938h298.667969c11.777344 0 21.332031 9.558594 21.332031 21.335938 0 11.773437-9.554687 21.332031-21.332031 21.332031zm0 0\" /><path d=\"m448 362.667969h-426.667969c-11.773437 0-21.332031-9.558594-21.332031-21.335938 0-11.773437 9.558594-21.332031 21.332031-21.332031h426.667969c11.777344 0 21.332031 9.558594 21.332031 21.332031 0 11.777344-9.554687 21.335938-21.332031 21.335938zm0 0\" /><path d=\"m384 469.332031h-298.667969c-11.773437 0-21.332031-9.554687-21.332031-21.332031s9.558594-21.332031 21.332031-21.332031h298.667969c11.777344 0 21.332031 9.554687 21.332031 21.332031s-9.554687 21.332031-21.332031 21.332031zm0 0\" />\r\n        </svg>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(AlignMiddleView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nclass AlignRightView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      //this.state = new UserFormVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var viewBox = this.props.viewBox ?\r\n      this.props.viewBox : \"0 0 512 512\"\r\n\r\n    return (\r\n      <>\r\n        <svg  viewBox={viewBox}>\r\n          <path d=\"M492,118H156c-11.046,0-20,8.954-20,20s8.954,20,20,20h336c11.046,0,20-8.954,20-20C512,126.954,503.046,118,492,118z\" />\r\n          <path d=\"M492,0H20C8.954,0,0,8.954,0,20s8.954,20,20,20h472c11.046,0,20-8.954,20-20S503.046,0,492,0z\" />\r\n          <path d=\"M492,472H20c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h472c11.046,0,20-8.954,20-20\r\n\t\t\tC512,480.954,503.046,472,492,472z\"/>\r\n          <path d=\"M492,354H156c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h336c11.046,0,20-8.954,20-20\r\n\t\t\tC512,362.954,503.046,354,492,354z\"/>\r\n          <path d=\"M492,236H20c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h472c11.046,0,20-8.954,20-20S503.046,236,492,236z\" />\r\n        </svg>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(AlignRightView);\r\n","export const header = 'header'\r\nexport const bold = 'bold'\r\nexport const italic = 'italic'\r\nexport const underline = 'underline'\r\nexport const strike = 'strike'\r\nexport const code_block = 'code-block'\r\nexport const blockquote = 'blockquote'\r\nexport const clean = 'clean'\r\nexport const align_left = 'align-left'\r\nexport const align_middle = 'align-middle'\r\nexport const align_right = 'align-right'\r\n\r\nexport const font_family = 'font-famiy'\r\nexport const font_size = 'font_size'\r\nexport const font_color = 'font-color'\r\n\r\nexport const _delete = 'delete'","import { makeObservable, observable, action } from 'mobx';\r\n\r\nexport default class FloatItemVM {\r\n  location\r\n\r\n  className\r\n  getClassName = () => {\r\n    if (!this.className){\r\n      this.className = `float ${this.location}`;\r\n    }\r\n    return this.className\r\n  }\r\n}","import FloatItemVM from \"./FloatItemVM\";\r\n\r\nexport const get = (loc) => {\r\n  var qI = new FloatItemVM();\r\n  qI.location = loc;\r\n  return qI;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport * as floatItemVMUtil from './FloatItemVMUtil'\r\n\r\nclass FloatItemView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = floatItemVMUtil.get('top right', 'Test')\r\n    }else{\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  getWrapperContent = () => {\r\n    var { wrapper } = this.state;\r\n    if (!wrapper) return '';\r\n    return wrapper;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <span className={data.getClassName()}>{this.getWrapperContent()}</span>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(FloatItemView);\r\n","import { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Select } from \"antd\";\r\nimport { SelectVM } from \"./SelectVM\";\r\nimport * as floatItemVMUtil from '../float/FloatItemVMUtil'\r\nimport FloatItemView from \"../float/FloatItemView\";\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport './Select.css'\r\n\r\nconst { Option } = Select;\r\n\r\nclass SelectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new SelectVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  onValueChange = (v) => {\r\n    var data = this.state;\r\n    data.SelectedIndex = v;\r\n  }\r\n\r\n  onDropdownVisibleChange = (v) => {\r\n    var data = this.state;\r\n    data.Open = v;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var className = this.props.className ? this.props.className : ''\r\n    var style = this.props.style ? this.props.style : { width: '100%' };\r\n    var { Placeholder, Items, SelectedIndex, InitialIndex } = data;\r\n\r\n    if (SelectedIndex === -1) {\r\n      SelectedIndex = InitialIndex;\r\n      data.InitialIndex = -1;\r\n    }\r\n\r\n    // debugger\r\n    var elems = Items ? Items.map((item, index) => {\r\n      var displayContent = data.TitleRender(item);\r\n\r\n      var id = undefined;\r\n      if (data.IdRender) {\r\n        id = data.IdRender(item)\r\n      } else {\r\n        if (item === undefined) {\r\n          id = genUtil.randomId();\r\n        } else if (typeof item === 'string' || !isNaN(item)) {\r\n          id = item;\r\n        } else {\r\n          id = item._id ? item._id : item.id;\r\n        }\r\n      }\r\n\r\n      return <Option key={id} value={index}>{displayContent}</Option>\r\n    }) : \"\";\r\n\r\n    var floatElem = ''\r\n    if (data.CanClear) {\r\n      var floatItemStore = floatItemVMUtil.get('right')\r\n      floatItemStore.wrapper = <Button size='small' type='primary'\r\n        onClick={data.Clear}>x</Button>\r\n\r\n      floatElem = <FloatItemView store={floatItemStore} />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div \r\n          className={`select__wrapper ${className}`}\r\n          style={data.DivStyle} >\r\n          {floatElem}\r\n          <Select\r\n            className='select__main'\r\n            style={style}\r\n            showSearch\r\n            placeholder={Placeholder}\r\n            optionFilterProp=\"children\"\r\n            onChange={this.onValueChange}\r\n            value={SelectedIndex}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n            open={data.CanOpen && data.Open}\r\n            onDropdownVisibleChange={this.onDropdownVisibleChange}\r\n            disabled={data.Disabled || data.IsDisabled}\r\n            onFocus={data.OnFocus}\r\n\r\n          >\r\n            {elems}\r\n          </Select>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(SelectView)","import { makeObservable, observable, action } from 'mobx';\r\nimport SelectView from './SelectView';\r\nimport * as util from './SelectVMUtil'\r\n\r\nexport class SelectVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      selectedIndex: observable,\r\n      selectedItem: observable,\r\n      CanClear: observable,\r\n      open: observable,\r\n      canOpen: observable,\r\n      isDisabled: observable,\r\n      disabled: observable\r\n    })\r\n  }\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      this.items = [];\r\n    }\r\n    return this.items;\r\n  }\r\n  set Items(v) {\r\n    this.items = v\r\n  }\r\n\r\n  initialItem = undefined\r\n  get InitialItem() {\r\n    return this.initialItem;\r\n  }\r\n  set InitialItem(v) {\r\n    this.IsSet_InitialItem = true;\r\n    this.initialItem = v;\r\n    this.InitialIndex = this.GetInitialIndex();\r\n    this.SelectedIndex = this.InitialIndex;\r\n  }\r\n\r\n  initialIndex\r\n  get InitialIndex() {\r\n    if (!this.initialIndex) {\r\n      this.initialIndex = this.GetInitialIndex();\r\n    }\r\n    return this.initialIndex;\r\n  }\r\n  set InitialIndex(v) {\r\n    this.initialIndex = v;\r\n  }\r\n\r\n  GetInitialIndex = () => {\r\n    var index = this.Items.indexOf(this.InitialItem);\r\n    return index !== -1 ? index : null;\r\n  }\r\n\r\n  selectedIndex = undefined\r\n  get SelectedIndex() {\r\n    return this.selectedIndex;\r\n  }\r\n  set SelectedIndex(v) {\r\n    this.selectedIndex = v;\r\n    this.SelectedItem = this.GetSelectedItem();\r\n  }\r\n\r\n  selectedItem = undefined\r\n  get SelectedItem() {\r\n    if (!this.selectedItem) {\r\n      this.selectedItem = this.GetSelectedItem();\r\n    }\r\n    return this.selectedItem;\r\n  }\r\n  set SelectedItem(v) {\r\n    this.selectedItem = v;\r\n\r\n    if (this.IsSet_InitialItem) {\r\n      this.IsSet_InitialItem = false\r\n    } else if (this.OnSelectedItemChanged) {\r\n      this.OnSelectedItemChanged(v);\r\n    }\r\n  }\r\n\r\n  SetValue = (v) => {\r\n    this.InitialItem = this.SelectedItem = v;\r\n  }\r\n\r\n  GetSelectedItem = () => {\r\n    var index = this.SelectedIndex;\r\n    if (index === -1) return undefined;\r\n    return this.Items[index];\r\n  }\r\n\r\n  placeholder\r\n  get Placeholder() {\r\n    if (!this.placeholder) {\r\n      this.placeholder = \"chọn đối tượng ...\";\r\n    }\r\n    return this.placeholder;\r\n  }\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  CanClear = false\r\n\r\n  Clear = () => {\r\n    this.SelectedIndex = null\r\n  }\r\n\r\n  get DivStyle() {\r\n    return this.CanClear ? {\r\n      position: 'relative',\r\n      padding: '0 22px 0 0'\r\n    } : {};\r\n  }\r\n\r\n  titleRender\r\n  get TitleRender() {\r\n    if (!this.titleRender) {\r\n      this.titleRender = util.GetTitleRender(this);\r\n    }\r\n    return this.titleRender;\r\n  }\r\n  set TitleRender(v) {\r\n    this.titleRender = v;\r\n  }\r\n\r\n  open = false\r\n  get Open() {\r\n    return this.open;\r\n  }\r\n  set Open(v) {\r\n    this.open = v;\r\n    if (this.OnSetOpen) {\r\n      this.OnSetOpen(v);\r\n    }\r\n  }\r\n\r\n  canOpen = true\r\n  get CanOpen() {\r\n    return this.canOpen;\r\n  } set CanOpen(v) {\r\n    this.canOpen = v;\r\n  }\r\n\r\n  isDisabled = false\r\n  get IsDisabled() {\r\n    return this.isDisabled;\r\n  } set IsDisabled(v) {\r\n    this.isDisabled = v;\r\n  }\r\n\r\n  // disabled\r\n  disabled = false\r\n  get Disabled() {\r\n    if (this.GetDisabled_Func) {\r\n      return this.GetDisabled_Func();\r\n    }\r\n    return this.disabled\r\n  } set Disabled(v) {\r\n    this.disabled = v;\r\n  }\r\n\r\n  IdRender\r\n\r\n  // View\r\n  get View() {\r\n    return <SelectView store={this} />\r\n  }\r\n}","import { SelectVM } from \"./SelectVM\";\r\n\r\nexport const get = (items, initialItem) => {\r\n  var qI = new SelectVM();\r\n  qI.Items = items;\r\n  qI.InitialItem = initialItem;\r\n  return qI;\r\n}\r\n\r\n// property\r\nexport const GetTitleRender = (q) => {\r\n  return (item) => item.DisplayContent ? item.DisplayContent : `${item}`;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nexport class ColorPicker {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      color: observable,\r\n    })\r\n  }\r\n\r\n  color = \"#000000\"\r\n  get Color() {\r\n    return this.color\r\n  } set Color(v) {\r\n    this.color = v;\r\n    if (this.OnSetColor) {\r\n      this.OnSetColor(v);\r\n    }\r\n  }\r\n\r\n  PickColor = (c) => {\r\n    this.Color = c.hex\r\n  }\r\n\r\n  get MainView() {\r\n    return <ChromePicker color={this.Color}\r\n      onChange={this.PickColor}\r\n    />\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { ColorPicker } from './ColorPicker';\r\nimport { Popover } from 'antd';\r\nimport './ColorPicker.css'\r\n\r\nclass ColorPickerView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new ColorPicker()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var className=this.props.className ? this.props.className  : ''\r\n\r\n    return (\r\n      <>\r\n        <Popover\r\n          content={data.MainView}\r\n          title=\"Pick text color\"\r\n          trigger='hover'\r\n          placement=\"bottomLeft\"\r\n        >\r\n          <div className={`color__demo ${className}`}\r\n            style={{ backgroundColor: data.Color }}\r\n          />\r\n        </Popover >\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(ColorPickerView);\r\n","export const manual = 'manual'\r\nexport const mouseEvent = 'mouseEvent'","export const mobx = 'mobx'\r\nexport const style = 'style'","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { EntDelete } from './EntDelete';\r\nimport { Button, Popover } from 'antd';\r\nimport './EntDelete.css'\r\nimport * as vt from './EntDelete_VisibleType'\r\nimport * as ut from './EntDelete_UseType'\r\n\r\nclass EntDeleteView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EntDelete()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    data.ClassName = data.ClassName ? data.ClassName :\r\n      (this.props.className ? this.props.className : '')\r\n    data.Style = data.Style ? data.Style : this.props.style\r\n\r\n    return (\r\n      <>\r\n        {data.UseType === ut.style || data.Is_Visible ?\r\n          <>\r\n            <div style={data.WrapperStyle}>\r\n              {/* Popover */}\r\n              {data.WrapperView}\r\n\r\n              {/* Addition Element */}\r\n              {data.AdditionElement}\r\n            </div>\r\n          </>\r\n          : (data.VisibleType === vt.hidden ?\r\n            <div className={data.BlankStyle} />\r\n            :\r\n            '')\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(EntDeleteView);\r\n","export const collapse = 'collapse'\r\nexport const hidden = 'hidden'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as tt from './EntDelete_ToggleType'\r\nimport * as vt from './EntDelete_VisibleType'\r\nimport * as ut from './EntDelete_UseType'\r\nimport * as util from './EntDeleteUtil'\r\nimport EntDeleteView from './EntDeleteView';\r\nimport { TextVM } from '../text/TextVM';\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport class EntDelete {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      is_Visible: observable,\r\n      is_Hover_Visible: observable,\r\n      VisibleType: observable,\r\n      UseType: observable,\r\n      ClassName: observable,\r\n      Style: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n  get id() {\r\n    if (!this._id) {\r\n      this._id = genUtil.newGUID();\r\n    } return this._id;\r\n  } set id(v) {\r\n    this._id = v;\r\n  }\r\n\r\n  is_Visible = undefined\r\n  get Is_Visible() {\r\n    if (!this.is_Visible) {\r\n      this.is_Visible = util.GetDefault_Is_Visible(this)\r\n    } return this.is_Visible\r\n  } set Is_Visible(v) {\r\n    this.is_Visible = v;\r\n  }\r\n\r\n  ToggleType = tt.manual\r\n\r\n  VisibleType = vt.collapse\r\n\r\n  is_Hover_Visible = undefined\r\n  get Is_Hover_Visible() {\r\n    return this.is_Hover_Visible\r\n  } set Is_Hover_Visible(v) {\r\n    this.is_Hover_Visible = v;\r\n\r\n    if (this.ToggleType === tt.mouseEvent) {\r\n      if (!v) {\r\n        this.Is_Visible = false\r\n      }\r\n    }\r\n\r\n    if (this.OnSet_Is_Hover_Visible) {\r\n      this.OnSet_Is_Hover_Visible(v);\r\n    }\r\n  }\r\n\r\n  Show_Hover = (e) => {\r\n    if (e) {\r\n      e.stopPropagation();\r\n    }\r\n\r\n    if (this.OnPre_ShowHover) {\r\n      this.OnPre_ShowHover();\r\n    }\r\n\r\n    this.Is_Hover_Visible = true;\r\n  }\r\n\r\n  Toggle_Hover = (v) => {\r\n    this.Is_Hover_Visible = v\r\n  }\r\n\r\n  // Run\r\n  IsRun_Cancel\r\n\r\n  PreRun = (e) => {\r\n    e.stopPropagation();\r\n\r\n    this.IsRun_Cancel = false\r\n    if (this.OnPreRun) {\r\n      this.OnPreRun()\r\n    }\r\n\r\n    if (!this.IsRun_Cancel) {\r\n      this.Run();\r\n    }\r\n  }\r\n\r\n  run\r\n  get Run() {\r\n    if (!this.run) {\r\n      this.run = util.GetDefault_Run(this)\r\n    } return this.run\r\n  } set Run(v) {\r\n    this.run = v;\r\n  }\r\n\r\n  PreCancel = (e) => {\r\n    e.stopPropagation();\r\n    this.Cancel();\r\n  }\r\n\r\n  cancel\r\n  get Cancel() {\r\n    if (!this.cancel) {\r\n      this.cancel = util.GetDefault_Cancel(this)\r\n    } return this.cancel\r\n  } set Cancel(v) {\r\n    this.cancel = v;\r\n  }\r\n\r\n  Show = () => {\r\n    this.Is_Visible = true\r\n  }\r\n\r\n  // Hide\r\n  Hide = () => {\r\n    this.IsRun_Cancel = false\r\n    if (this.OnPreHide) {\r\n      this.OnPreHide()\r\n    }\r\n\r\n    if (this.IsRun_Cancel) return\r\n\r\n    if (!this.Is_Hover_Visible) {\r\n      this.Is_Visible = false\r\n    }\r\n  }\r\n\r\n  // Style\r\n  ClassName = undefined\r\n\r\n  Style = undefined\r\n\r\n  AdditionElement = ''\r\n\r\n  BlankStyle = 'delete__blank'\r\n\r\n  Title = \"Xác nhận lệnh?\"\r\n\r\n  showHover_Button\r\n  get ShowHover_Button() {\r\n    return this.showHover_Button ? this.showHover_Button\r\n      : this.Retrieve_ShowHover_Button();\r\n  } set ShowHover_Button(v) {\r\n    this.showHover_Button = v;\r\n  }\r\n\r\n  retrieve_ShowHover_Button\r\n  get Retrieve_ShowHover_Button() {\r\n    if (!this.retrieve_ShowHover_Button) {\r\n      this.retrieve_ShowHover_Button =\r\n        util.GetDefault_Retrieve_ShowHover_Button(this)\r\n    } return this.retrieve_ShowHover_Button\r\n  } set Retrieve_ShowHover_Button(v) {\r\n    this.retrieve_ShowHover_Button = v;\r\n  }\r\n\r\n  get View() {\r\n    return <EntDeleteView key={this.id} store={this} />\r\n  }\r\n\r\n  // Modal\r\n  get WrapperView() {\r\n    return this.Retrieve_WrapperView();\r\n  }\r\n\r\n  retrieve_WrapperView\r\n  get Retrieve_WrapperView() {\r\n    if (!this.retrieve_WrapperView) {\r\n      this.retrieve_WrapperView = util.GetDefault_Retrieve_WrapperView(this)\r\n    } return this.retrieve_WrapperView\r\n  } set Retrieve_WrapperView(v) {\r\n    this.retrieve_WrapperView = v;\r\n  }\r\n\r\n  modal_ButtonView\r\n  get Modal_ButtonView() {\r\n    if (!this.modal_ButtonView) {\r\n      this.modal_ButtonView = util.GetDefault_Modal_ButtonView(this)\r\n    }\r\n    return this.modal_ButtonView\r\n  } set Modal_ButtonView(v) {\r\n    this.modal_ButtonView = v;\r\n  }\r\n\r\n  modal_InfoView\r\n  get Modal_InfoView() {\r\n    if (!this.modal_InfoView) {\r\n      this.modal_InfoView = util.GetDefault_Modal_InfoView(this)\r\n    }\r\n    return this.modal_InfoView\r\n  } set Modal_InfoView(v) {\r\n    this.modal_InfoView = v;\r\n  }\r\n\r\n  modal_ContentView\r\n  get Modal_ContentView() {\r\n    if (!this.modal_ContentView) {\r\n      this.modal_ContentView = util.GetDefault_Modal_ContentView(this)\r\n    } return this.modal_ContentView\r\n  } set Modal_ContentView(v) {\r\n    this.modal_ContentView = v;\r\n  }\r\n\r\n  // UseStyle\r\n  UseType = ut.mobx\r\n\r\n  get WrapperStyle() {\r\n    switch (this.UseType) {\r\n      case ut.mobx:\r\n        return undefined\r\n      case ut.style:\r\n        return this.Is_Visible ? undefined : { display: 'none' }\r\n    }\r\n  }\r\n}","import { Button, Popover } from 'antd'\r\nimport * as tt from './EntDelete_ToggleType'\r\n\r\n// Property\r\nexport const GetDefault_Is_Visible = (q) => {\r\n  return q.ToggleType === tt.manual ?\r\n    true : false\r\n}\r\n\r\nexport const GetDefault_Retrieve_ShowHover_Button = (q) => {\r\n  return () => <Button type='primary' size='small'\r\n    className={`btn_delete ${q.ClassName}`}\r\n    style={q.Style}\r\n    onClick={q.Show_Hover}\r\n  >x</Button>\r\n}\r\n\r\nexport const GetDefault_Run = (q) => {\r\n  return () => {\r\n    q.Is_Hover_Visible = false;\r\n    if (q.OnRun) {\r\n      q.OnRun();\r\n    }\r\n  }\r\n}\r\n\r\nexport const GetDefault_Cancel = (q) => {\r\n  return () => {\r\n    q.Is_Hover_Visible = false;\r\n    if (q.OnCancel) {\r\n      q.OnCancel();\r\n    }\r\n  }\r\n}\r\n\r\nexport const GetDefault_Retrieve_WrapperView = (q) => {\r\n  return () => <Popover\r\n    content={\r\n      <>\r\n        {q.Modal_ContentView}\r\n      </>\r\n    }\r\n    title={q.Title}\r\n    trigger=\"click\"\r\n    visible={q.Is_Hover_Visible}\r\n    onVisibleChange={q.Toggle_Hover}\r\n  >\r\n    {q.ShowHover_Button}\r\n  </Popover>\r\n}\r\n\r\nexport const GetDefault_Modal_ButtonView = (q) => {\r\n  return <div className='delete__btn-group'>\r\n    <Button type='primary' size='small'\r\n      onClick={q.PreRun}>ok</Button>\r\n    <Button type='text' size='small'\r\n      className='btn_blank'\r\n      onClick={q.PreCancel}>cancel</Button>\r\n  </div>\r\n}\r\n\r\nexport const GetDefault_Modal_InfoView = (q) => {\r\n  return ''\r\n}\r\n\r\nexport const GetDefault_Modal_ContentView = (q) => {\r\n  return <>\r\n    {q.Modal_InfoView}\r\n    {q.Modal_ButtonView}\r\n  </>\r\n}","import AlignLeftView from \"../../svg/AlignLeftView\";\r\nimport AlignMiddleView from \"../../svg/AlignMiddleView\";\r\nimport AlignRightView from \"../../svg/AlignRightView\";\r\nimport { QuillTool } from \"./QuillTool\"\r\nimport * as tt from './QuillToolType'\r\nimport * as selUtil from '../../select/SelectVMUtil'\r\nimport SelectView from '../../select/SelectView'\r\nimport * as colorPickerUtil from '../../color/ColorPickerUtil'\r\nimport { Popover } from \"antd\";\r\nimport ColorPickerView from \"../../color/ColorPickerView\";\r\nimport { EntDelete } from \"../../delete/EntDelete\";\r\nimport EntDeleteView from \"../../delete/EntDeleteView\";\r\n\r\n// Instance\r\nexport const get = (type, dict) => {\r\n  var qI = new QuillTool();\r\n\r\n  qI.Type = type;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Get_DefaultToolView = (q) => {\r\n  var toolClass = q.ToolClass;\r\n  switch (q.Type) {\r\n    case tt.header:\r\n      return <select className={toolClass} defaultValue={\"\"} onChange={e => e.persist()}>\r\n        <option value=\"1\" />\r\n        <option value=\"2\" />\r\n        <option value=\"\" />\r\n      </select>\r\n    case tt.font_family:\r\n    case tt.font_size:\r\n      return <SelectView className={toolClass} store={q.Data} />\r\n    case tt.font_color:\r\n      return <ColorPickerView className={toolClass} store={q.Data} />\r\n    case tt._delete:\r\n      return <EntDeleteView className={toolClass}\r\n        store={q.Data} style={{backgroundColor:'#ff4d4f'}} />\r\n    default:\r\n      return <button className={toolClass}>\r\n        {q.ContentView}\r\n      </button>\r\n  }\r\n}\r\n\r\nexport const Get_DefaultContentView = (q) => {\r\n  switch (q.Type) {\r\n    case tt.align_left:\r\n      return <AlignLeftView viewBox=\"0 -90 620 620\" />\r\n    case tt.align_middle:\r\n      return <AlignMiddleView viewBox=\"0 -100 620 620\" />\r\n    case tt.align_right:\r\n      return <AlignRightView viewBox=\"0 -100 670 670\" />\r\n    default:\r\n      return ''\r\n  }\r\n}\r\n\r\nexport const Get_DefaultData = (q) => {\r\n  var data\r\n\r\n  switch (q.Type) {\r\n    case tt.font_family:\r\n      {\r\n        var list = [\r\n          'UTM penumbra', \r\n          'Quicksand',\r\n          '-apple-system',\r\n          'BlinkMacSystemFont',\r\n          'Segoe UI',\r\n          'Roboto',\r\n          'Helvetica Neue',\r\n          'Arial',\r\n          'Noto Sans',\r\n          'sans-serif',\r\n          'Apple Color Emoji',\r\n          'Segoe UI Emoji',\r\n          'Segoe UI Symbol',\r\n          'Noto Color Emoji'\r\n        ]\r\n\r\n        var sel = selUtil.get(list, list[0]);\r\n        data = sel\r\n      }\r\n      break;\r\n    case tt.font_size:\r\n      {\r\n        var list = [8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72]\r\n        var sel = selUtil.get(list, 12);\r\n        data = sel\r\n      }\r\n      break;\r\n    case tt.font_color:\r\n      {\r\n        var color = \"#000000\"\r\n        // var color = \"#8E4545\"\r\n        data = colorPickerUtil.get(color);\r\n      }\r\n      break;\r\n    case tt._delete:\r\n      {\r\n        data = new EntDelete();\r\n        data.Is_Visible = true;\r\n      }\r\n      break\r\n  }\r\n  return data;\r\n}","import { ColorPicker } from \"./ColorPicker\"\r\n\r\nexport const get = (color) => {\r\n  var qI = new ColorPicker();\r\n\r\n  qI.Color = color;\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './QuillToolUtil'\r\n\r\nexport class QuillTool {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      data: observable,\r\n    })\r\n  }\r\n\r\n  Type\r\n\r\n  get ToolClass(){\r\n    return `ql-${this.Type}`\r\n  }\r\n\r\n  toolView\r\n  get ToolView(){\r\n    if (!this.toolView){\r\n      this.toolView = util.Get_DefaultToolView(this)\r\n    } return this.toolView\r\n  } set ToolView(v){\r\n    this.toolView = v;\r\n  }\r\n\r\n  contentView\r\n  get ContentView(){\r\n    if (!this.contentView){\r\n      this.contentView = util.Get_DefaultContentView(this)\r\n    } return this.contentView\r\n  } set ContentView(v){\r\n    this.contentView = v;\r\n  }\r\n\r\n  Handle\r\n\r\n  data = undefined\r\n  get Data(){\r\n    if (!this.data) {\r\n      this.data = util.Get_DefaultData(this)\r\n    } return this.data\r\n  } set Data(v){\r\n    this.data = v;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { QuillTool } from './QuillTool';\r\nimport './QuillTool.css'\r\n\r\nclass QuillToolView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new QuillTool()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        {data.ToolView}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(QuillToolView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport QuillToolView from './tool/QuillToolView';\r\nimport * as util from './QuillEditorUtil'\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\nexport class QuillEditor {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      tools: observable,\r\n      subTools: observable\r\n    })\r\n  }\r\n\r\n  _id\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = `q-${genUtil.randomId()}`;\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  content = ''\r\n  get Content() {\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n    if (this.OnSetContent) {\r\n      this.OnSetContent(v);\r\n    }\r\n  }\r\n\r\n  set InitialContent(v) {\r\n    this.content = v;\r\n  }\r\n\r\n  placeholder\r\n  get PlaceHolder() {\r\n    if (!this.placeholder) {\r\n      this.placeholder = 'văn bản soạn thảo ...';\r\n    }\r\n    return this.placeholder;\r\n  }\r\n  set PlaceHolder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  Focus = () => {\r\n    if (this.Ref) {\r\n      this.Ref.current.focus();\r\n    } else {\r\n      this.IsFocusInit = true\r\n    }\r\n  }\r\n\r\n  // Event\r\n  OnAltEnter\r\n  OnEmptyBackspace\r\n  OnTab\r\n\r\n  // Tools\r\n  IsHaveTool = true\r\n\r\n  tools = undefined\r\n  get Tools() {\r\n    if (!this.tools) {\r\n      this.tools = util.GetDefault_Tools(this)\r\n    }\r\n    return this.tools\r\n  } set Tools(v) {\r\n    this.tools = v;\r\n  }\r\n\r\n  subTools = undefined\r\n  get SubTools() {\r\n    if (!this.subTools) {\r\n      this.subTools = util.GetDefault_SubTools(this)\r\n    } return this.subTools\r\n  } set SubTools(v) {\r\n    this.subTools = v;\r\n  }\r\n\r\n  get FullTools() {\r\n    return this.Tools.concat(this.SubTools);\r\n  }\r\n\r\n  GetTool = (type) => {\r\n    var index = this.FullTools.findIndex(x => x.Type === type);\r\n    return index !== -1 ? this.FullTools[index] : undefined\r\n  }\r\n\r\n  get Tool_Container() {\r\n    return <div id={this.id} className='ql-snow wrapper'>\r\n      <div className='ql__tool__main'>\r\n        {this.Tools.map(x => {\r\n          return <QuillToolView key={x.Type} store={x} />\r\n        })}\r\n      </div>\r\n      <div className='ql__tool__sub'>\r\n        {this.SubTools.map(x => {\r\n          return <QuillToolView key={x.Type} store={x} />\r\n        })}\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  get Handles() {\r\n    var obj = {}\r\n    this.Tools.filter(x => x.Handle !== undefined).forEach(x => {\r\n      obj[x.Type] = x.Handle\r\n    })\r\n\r\n    return obj;\r\n  }\r\n}","import { QuillEditor } from \"./QuillEditor\"\r\nimport * as toolUtil from './tool/QuillToolUtil'\r\nimport * as tt from './tool/QuillToolType'\r\n\r\nexport const get = (content, placeholder) => {\r\n  var qI = new QuillEditor();\r\n  qI.InitialContent = content;\r\n  qI.PlaceHolder = placeholder;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDefault_Tools = (q) => {\r\n  return [\r\n    toolUtil.get(tt.header, q),\r\n    toolUtil.get(tt.bold, q),\r\n    toolUtil.get(tt.italic, q),\r\n    toolUtil.get(tt.underline, q),\r\n\r\n    toolUtil.get(tt.align_left,q),\r\n    toolUtil.get(tt.align_middle,q),\r\n    toolUtil.get(tt.align_right,q),\r\n\r\n    toolUtil.get(tt.code_block, q),\r\n    toolUtil.get(tt.blockquote, q),\r\n  ]\r\n}\r\n\r\nexport const GetDefault_SubTools = (q) => {\r\n  return [\r\n    \r\n  ]\r\n}","import React, { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { QuillEditor } from \"./QuillEditor\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport './QuillEditor.css'\r\nimport 'react-quill/dist/quill.snow.css'; // ES6\r\n\r\nclass QuillEditorView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new QuillEditor();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n\r\n    var data = this.state;\r\n    data.Ref = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n\r\n    if (data.IsFocusInit) {\r\n      data.Ref.current.focus();\r\n    }\r\n  }\r\n\r\n  OnChange = (content) => {\r\n    var data = this.state;\r\n    data.LastContent = data.Content;\r\n    data.Content = content;\r\n  }\r\n\r\n  OnKeyDown = (e) => {\r\n    var data = this.state;\r\n    if (data.OnKeyDown) {\r\n      data.OnKeyDown(e)\r\n\r\n      if (data.IsCancel) {\r\n        data.IsCancel = false\r\n        data.Content = data.LastContent\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Alt + Enter\r\n    if (e.altKey && e.keyCode == 13) {\r\n      if (data.OnAltEnter) {\r\n        e.preventDefault();\r\n        data.OnAltEnter();\r\n      }\r\n    }\r\n    // Backspace\r\n    else if (e.keyCode == 8 || e.charCode == 46) {\r\n      if ((!data.LastContent && data.Content.length === 0) ||\r\n        (data.LastContent === data.Content && data.Content === '<p><br></p>')) {\r\n        // đang bị 1 lỗi nhỏ khi nhập 1 chữ cái, sau đó backspace\r\n        if (data.OnEmptyBackspace) {\r\n          e.preventDefault();\r\n          data.OnEmptyBackspace();\r\n        }\r\n      }\r\n    }\r\n    // Tab\r\n    else if (e.keyCode == 9) {\r\n      if (data.OnTab) {\r\n        e.preventDefault();\r\n        data.OnTab();\r\n      }\r\n    }\r\n\r\n    data.LastContent = data.Content;\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    var modules = {\r\n      syntax: true,\r\n      toolbar: {\r\n        container: `#${data.id}`,\r\n        //id =\"toorbar\"는  그 위에 B I U S I V F P 이거 있는 곳이다. \r\n        handlers: data.Handles\r\n      },\r\n      clipboard: {\r\n        // toggle to add extra line breaks when pasting HTML:\r\n        matchVisual: false,\r\n      },\r\n    };\r\n\r\n    var formats = [\r\n      'header',\r\n      'bold', 'italic', 'underline', 'strike',\r\n      'image', 'video', 'file', 'link', \"code-block\", \"video\", \"blockquote\", \"clean\"\r\n    ];\r\n\r\n    data.OnKeyDown = data.OnKeyDown ?\r\n      data.OnKeyDown : this.props.onKeyDown\r\n    var className = this.props.className ? this.props.className : ''\r\n    var style = this.props.style\r\n    var onFocus = this.props.onFocus ?\r\n      this.props.onFocus : data.OnFocus\r\n\r\n    return (\r\n      <div className={`ql__wrapper ${className}`} style={style}>\r\n        {/* {container} */}\r\n        <div className={data.IsHaveTool ? '' : 'hidden'}>\r\n          {data.Tool_Container}\r\n        </div>\r\n\r\n        <ReactQuill ref={data.Ref}\r\n          className='ql__style'\r\n          // theme='snow'\r\n          modules={modules}\r\n          formats={formats}\r\n          onChange={this.OnChange}\r\n          value={data.Content}\r\n          placeholder={data.PlaceHolder}\r\n          onKeyDown={data.OnKeyDown}\r\n          onFocus={onFocus}\r\n        >\r\n        </ReactQuill>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(QuillEditorView)","import InputView from \"../input/InputView\";\r\nimport * as rs from './TextRenderState'\r\nimport { TextRenderItem } from \"./TextRenderItem\";\r\nimport { Button } from \"antd\";\r\n\r\nimport * as htmlUtil from '../../util/htmlUtil'\r\nimport QuillEditorView from \"../editor/QuillEditorView\";\r\n\r\nexport const get = (state, render) => {\r\n  var qI = new TextRenderItem();\r\n  qI.State = state;\r\n  qI.Render = render;\r\n  return qI;\r\n}\r\n\r\nexport const GetRender = (q) => {\r\n  switch (q.State) {\r\n    case rs._default:\r\n      return (content, context) => {\r\n        var className = context.ClassName;\r\n        var style = context.Style;\r\n        var onDoubleClick = context.OnDoubleClick\r\n        var onClick = context.OnClick\r\n\r\n        var storageType_css = `${context.StorageType}`\r\n\r\n        return <>\r\n          <div \r\n            className={`${className} input_wrapper view ${storageType_css}`} \r\n            style={style}\r\n            onDoubleClick={onDoubleClick}\r\n            onClick={onClick}>\r\n\r\n            {context.StorageType === 'text' ?\r\n              content :\r\n              <div dangerouslySetInnerHTML={htmlUtil.createMarkup(content)} />\r\n            }\r\n\r\n          </div>\r\n          {context.Is_Tool_Visible && context.Is_Edit_Visible ?\r\n            <Button type='primary' size='small'\r\n              className='left10 btn-warning' onClick={context.Edit}\r\n            >e</Button>\r\n            : ''}\r\n        </>\r\n      }\r\n    case 'ready':\r\n    case rs.edit:\r\n      return (content, context) => {\r\n        var className = context.ClassName;\r\n        var style = context.Style;\r\n        var onFocus = context.OnFocus\r\n\r\n        // onfocus\r\n        var r_onFocus = () => {\r\n          context.Edit();\r\n          if (onFocus) {\r\n            onFocus();\r\n          }\r\n        }\r\n\r\n        return <>\r\n          <div className={`input__wrapper edit ${className}`}>\r\n\r\n            {context.StorageType === 'text' ?\r\n              <InputView ref={context.Ref}\r\n                className='input__main'\r\n                style={style}\r\n                store={context}\r\n                ref={context.Ref}\r\n                onFocus={r_onFocus} />\r\n              :\r\n              <QuillEditorView store={context.Editor}\r\n                onFocus={r_onFocus} />\r\n            }\r\n\r\n            {context.Is_Tool_Visible && context.Is_OK_Visible ?\r\n              <Button type='primary' size='small'\r\n                onClick={context.EditOK}>ok</Button>\r\n              : ''}\r\n          </div>\r\n        </>\r\n      }\r\n    default:\r\n      return undefined;\r\n  }\r\n}","import * as renderUtil from './TextRenderItemUtil'\r\n\r\nexport default class TextRender_Dict {\r\n  Items = []\r\n\r\n  GetRender = (state) => {\r\n    var list = this.Items;\r\n    var index = list.findIndex(x => x.State === state);\r\n    if (index === -1){\r\n      var item = renderUtil.get(state);\r\n      list.push(item);\r\n      return item;\r\n    }\r\n    return list[index];\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from \"antd\";\r\nimport { EditableTextVM } from \"./EditableTextVM\";\r\nimport './Text.css'\r\n\r\nclass EditableTextView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new EditableTextVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n\r\n    var data = this.state;\r\n    data.Ref = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    data.ClassName = this.props.className ? this.props.className : ''\r\n    data.Style = this.props.style\r\n\r\n    data.OnFocus = data.OnFocus ?\r\n      data.OnFocus : this.props.onFocus\r\n\r\n    data.OnDoubleClick = data.OnDoubleClick ?\r\n      data.OnDoubleClick : this.props.onDoubleClick\r\n\r\n    data.OnClick = data.OnClick ?\r\n      data.OnClick : this.props.onClick\r\n\r\n    return (\r\n      <>\r\n        {data.Render()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default observer(EditableTextView)","import { makeObservable, observable, action } from 'mobx';\r\nimport NewInputView from '../input/NewInputView';\r\nimport TextRender_Dict from './TextRender_Dict';\r\nimport * as ts from './TextState'\r\nimport * as rs from './TextRenderState'\r\nimport * as util from './EditableTextVMUtil'\r\n\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport EditableTextView from './EditableTextView';\r\n\r\nexport class EditableTextVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      content: observable,\r\n      placeholder: observable,\r\n      State: observable,\r\n      IsEditing: observable,\r\n      renderState: observable,\r\n      Is_Tool_Visible: observable,\r\n      Is_Edit_Visible: observable,\r\n      Is_OK_Visible: observable,\r\n      CanChange_RenderState: observable\r\n    })\r\n  }\r\n\r\n  content = undefined\r\n  get Content() {\r\n    return this.content;\r\n  }\r\n  set Content(v) {\r\n    this.content = v;\r\n\r\n    if (this.onSetContent) {\r\n      this.onSetContent(v);\r\n    }\r\n  }\r\n\r\n  // Cách lưu trữ dạng text hay html\r\n  StorageType = 'text'\r\n\r\n  placeholder = \"nội dung input\"\r\n  set Placeholder(v) {\r\n    this.placeholder = v;\r\n  }\r\n\r\n  State = ts.text\r\n\r\n  IsEditing = false\r\n\r\n  // editor\r\n  editor\r\n  get Editor(){\r\n    if (!this.editor){\r\n      this.editor = util.GetEditor(this)\r\n    } return this.editor\r\n  }\r\n\r\n  titleFunc\r\n  get TitleFunc() {\r\n    if (!this.titleFunc) {\r\n      this.titleFunc = () => this.Content;\r\n    }\r\n    return this.titleFunc;\r\n  } set TitleFunc(v) {\r\n    this.titleFunc = v;\r\n  }\r\n\r\n  render_Dict\r\n  get Render_Dict() {\r\n    if (!this.render_Dict) {\r\n      this.render_Dict = new TextRender_Dict();\r\n    }\r\n    return this.render_Dict;\r\n  }\r\n  set Render_Dict(v) {\r\n    this.render_Dict = v;\r\n  }\r\n\r\n  OnSet_RenderState_Func_Dict = []\r\n\r\n  renderState = rs._default\r\n  get RenderState() {\r\n    return this.renderState;\r\n  } set RenderState(v) {\r\n    if (!this.CanChange_RenderState) {\r\n      return;\r\n    }\r\n\r\n    this.Old_RenderState = this.RenderState\r\n\r\n    this.renderState = v;\r\n    this.OnSet_RenderState_Func_Dict.forEach(x => x.Value());\r\n  }\r\n\r\n  CanChange_RenderState = true\r\n\r\n  Is_Tool_Visible = true\r\n  Is_Edit_Visible = true\r\n  Is_OK_Visible = true;\r\n\r\n  Ready = () => {\r\n    if (this.RenderState !== rs.edit){\r\n      this.RenderState = rs.ready\r\n    }\r\n  }\r\n\r\n  NotReady = () => {\r\n    if (this.RenderState !== rs.edit){\r\n      this.RenderState = rs._default\r\n    }\r\n  }\r\n\r\n  Edit = () =>this.RenderState = rs.edit\r\n\r\n  EditOK = () => this.RenderState = rs._default\r\n\r\n  Render = () => {\r\n    var render = this.Render_Dict.GetRender(this.RenderState);\r\n    return render.Render(this.Content, this);\r\n  }\r\n\r\n  OnSet_Ref_Func_Dict = []\r\n\r\n  ref\r\n  get Ref() {\r\n    return this.ref\r\n  } set Ref(v) {\r\n    this.ref = v;\r\n\r\n    genUtil.Handle(this.OnSet_Ref_Func_Dict,\r\n      (v) => this.OnSet_Ref_Func_Dict = v)\r\n  }\r\n\r\n  ref_Element\r\n  get Ref_Element() {\r\n    if (!this.ref_Element) {\r\n      var obj = this.Ref.current\r\n      if (obj && obj.getEl) {\r\n        obj = obj.getEl();\r\n      }\r\n\r\n      this.ref_Element = obj;\r\n    }\r\n    return this.ref_Element;\r\n  }\r\n\r\n  Focus = () => {\r\n    const setFocus = () => {\r\n      this.Ref_Element?.focus();\r\n    }\r\n\r\n    if (this.Ref) {\r\n      setFocus()\r\n    } else {\r\n      genUtil.Add_2(\r\n        this.OnSet_Ref_Func_Dict,\r\n        () => setFocus()\r\n      )\r\n    }\r\n  }\r\n\r\n  // View\r\n  get View() {\r\n    return <EditableTextView store={this} />\r\n  }\r\n}","import { EditableTextVM } from \"./EditableTextVM\"\r\nimport * as editorUtil from '../editor/QuillEditorUtil'\r\n\r\nexport const get = (content, canEdit = true, isToolVisible) => {\r\n  var qI = new EditableTextVM();\r\n  \r\n  qI.Content = content;\r\n  qI.CanChange_RenderState = canEdit;\r\n\r\n  if (isToolVisible === undefined){\r\n    isToolVisible = canEdit;\r\n  }\r\n\r\n  qI.Is_Tool_Visible = isToolVisible;\r\n\r\n  return qI;\r\n}\r\n\r\n// property\r\nexport const GetEditor = (q) => {\r\n  var qI = editorUtil.get(q.Content, q.Placeholder)\r\n\r\n  qI.OnSetContent = (v) => q.Content = v;\r\n  qI.OnKeyDown = q.OnKeyDown\r\n  qI.IsHaveTool = false\r\n\r\n  return qI;\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as rs from '../../../text/TextRenderState';\r\nimport * as editTextUtil from '../../../text/EditableTextVMUtil';\r\nimport EditableTextView from '../../../text/EditableTextView';\r\nimport * as genUtil from '../../../../util/generalUtil'\r\n\r\nexport class UserVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      renderState: observable,\r\n    })\r\n  }\r\n  \r\n  get id(){\r\n    return this.ModelItem.id\r\n  }\r\n\r\n  renderState = rs._default\r\n  get RenderState() {\r\n    return this.renderState\r\n  } set RenderState(v) {\r\n    this.renderState = v;\r\n    this.UsernameVM.RenderState = v;\r\n    // this.DescriptionVM.RenderState = v;\r\n\r\n    if (this.OnSet_RenderState){\r\n      this.OnSet_RenderState(v)\r\n    }\r\n\r\n    if (!this.IsSaveDatabase){\r\n      this.IsSaveDatabase = true\r\n    } else if (v === rs._default) {\r\n      this.SaveDatabase(false);\r\n    }\r\n  }\r\n\r\n  Edit = () => {\r\n    if (this.RenderState === rs._default) {\r\n      this.RenderState = rs.edit\r\n      this.Hide_Tool();\r\n    }\r\n  }\r\n\r\n  // UserName\r\n  get Username(){\r\n    return this.ModelItem.Username\r\n  } set Username(v){\r\n    this.ModelItem.Username = v;\r\n  }\r\n\r\n  usernameVM\r\n  get UsernameVM() {\r\n    if (!this.usernameVM) {\r\n      var obj = this.usernameVM = editTextUtil.get(this.Username, this.CanEdit);\r\n\r\n      obj.Is_Tool_Visible = false\r\n      // obj.OnKeyDown = (e) => {\r\n      //   var { key, value } = inputUtil.Get_Shortcut(e);\r\n      //   switch (key) {\r\n      //     case inputUtil.enter:\r\n      //       this.RenderState = rs._default\r\n      //       break;\r\n      //   }\r\n      // }\r\n\r\n      genUtil.Add(\r\n        obj.OnSet_RenderState_Func_Dict,\r\n        () => {\r\n          if (obj.RenderState === rs._default) {\r\n            this.Username = obj.Content;\r\n          }\r\n        },\r\n        false\r\n      )\r\n\r\n    }\r\n    return this.usernameVM;\r\n  }\r\n\r\n  get UsernameView() {\r\n    return <EditableTextView store={this.UsernameVM} />\r\n  }\r\n\r\n  // Name\r\n  get Name(){\r\n    return this.ModelItem.Name\r\n  } set Name(v){\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n   // Password\r\n   get Password(){\r\n    return this.ModelItem.Password\r\n  } set Password(v){\r\n    this.ModelItem.Password = v;\r\n  }\r\n\r\n  // Save\r\n  IsSaveDatabase = true\r\n\r\n  Save = (handle) => {\r\n    this.ModelItem.Save(handle);\r\n  }\r\n\r\n  SaveDatabase = (showMessage = true, handle) => {\r\n    this.ModelItem.SaveDatabase(showMessage, handle);\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Users\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  // command\r\n  get CommandDict(){\r\n    return this.ModelItem.CommandDict;\r\n  }\r\n}","import { UserVM } from \"./UserVM\"\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  if (!q) return undefined;\r\n  \r\n  var qI = new UserVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}","import * as util from './User_DictVMUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../util/generalUtil'\r\nimport * as userUtil from '../item/base/UserVMUtil'\r\n\r\nexport class User_DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      viewType: observable,\r\n      users: observable,\r\n      loginUser: observable\r\n    })\r\n  }\r\n\r\n  get Url() {\r\n    return this.ModelItem.Url\r\n  } set Url(v) {\r\n    this.ModelItem.Url = v;\r\n  }\r\n\r\n  // LoginUser\r\n  OnSet_LoginUser_Func = []\r\n\r\n  loginUser = undefined\r\n  get LoginUser() {\r\n    if (!this.loginUser) {\r\n      util.Handle_LoginUser(this)\r\n    } return this.loginUser;\r\n  } set LoginUser(v) {\r\n    var user = this.loginUser = v;\r\n    // Clear command\r\n    if (user) {\r\n      user.CommandDict.Clear();\r\n    }\r\n\r\n    this.ViewType = util.GetViewType(this)\r\n\r\n    if (this.IsSet_Model) {\r\n      this.ModelItem.LoginUser = v?.ModelItem;\r\n    } else {\r\n      this.IsSet_Model = true;\r\n    }\r\n\r\n    genUtil.Handle(this.OnSet_LoginUser_Func,\r\n      (v) => this.OnSet_LoginUser_Func = v)\r\n  }\r\n\r\n  get OnLogin(){\r\n    return this.LoginUser\r\n  }\r\n\r\n  // Users\r\n  OnSet_Users_Func = []\r\n\r\n  users = undefined\r\n  get Users() {\r\n    if (!this.users) {\r\n      util.Handle_Users(this)\r\n    } return this.users\r\n  } set Users(v) {\r\n    this.users = v;\r\n\r\n    genUtil.Handle(this.OnSet_Users_Func,\r\n      (v) => this.OnSet_Users_Func = v)\r\n  }\r\n\r\n  AddUser = () => {\r\n    var qI = userUtil.get(this.ModelItem.AddUser(), this);\r\n    this.Users.push(qI);\r\n    return qI;\r\n  }\r\n\r\n  // Admin\r\n  admin\r\n  get Admin() {\r\n    if (!this.admin) {\r\n      this.admin = util.GetAdmin(this)\r\n    } return this.admin;\r\n  }\r\n\r\n  // Login\r\n  login\r\n  get Login() {\r\n    if (!this.login) {\r\n      this.login = util.GetLogin(this)\r\n    } return this.login;\r\n  }\r\n\r\n  // NewPassword\r\n  newPassword\r\n  get NewPassword() {\r\n    if (!this.newPassword) {\r\n      this.newPassword = util.GetNewPassword(this)\r\n    } return this.newPassword;\r\n  }\r\n\r\n  Logout = () => {\r\n    this.LoginUser = undefined\r\n  }\r\n\r\n  // View\r\n  viewType = undefined;\r\n  get ViewType() {\r\n    if (!this.viewType) {\r\n      util.Handle_ViewType(this)\r\n    } return this.viewType\r\n  } set ViewType(v) {\r\n    this.viewType = v;\r\n  }\r\n\r\n  loginRender\r\n  get LoginRender() {\r\n    if (!this.loginRender) {\r\n      this.loginRender = util.GetDefault_LoginRender(this)\r\n    } return this.loginRender;\r\n  } set LoginRender(v) {\r\n    this.loginRender = v;\r\n  }\r\n\r\n  userRender\r\n  get UserRender() {\r\n    if (!this.userRender) {\r\n      this.userRender = util.GetDefault_UserRender(this)\r\n    } return this.userRender;\r\n  } set UserRender(v) {\r\n    this.userRender = v;\r\n  }\r\n\r\n  mainViewRender\r\n  get MainViewRender() {\r\n    if (!this.mainViewRender) {\r\n      this.mainViewRender = util.GetDefault_MainViewRender(this)\r\n    } return this.mainViewRender\r\n  } set MainViewRender(v) {\r\n    this.mainViewRender = v;\r\n  }\r\n\r\n  get MainView() {\r\n    return this.MainViewRender();\r\n  }\r\n\r\n  modalViewRender\r\n  get ModalViewRender() {\r\n    if (!this.modalViewRender) {\r\n      this.modalViewRender = util.GetDefault_ModalViewRender(this)\r\n    } return this.modalViewRender\r\n  } set ModalViewRender(v) {\r\n    this.modalViewRender = v;\r\n  }\r\n\r\n  get ModalView() {\r\n    return this.ModalViewRender();\r\n  }\r\n\r\n  viewRender\r\n  get ViewRender() {\r\n    if (!this.viewRender) {\r\n      this.viewRender = util.GetDefault_ViewRender(this)\r\n    } return this.viewRender\r\n  } set ViewRender(v) {\r\n    this.viewRender = v;\r\n  }\r\n\r\n  get View() {\r\n    return this.ViewRender();\r\n  }\r\n}","import { message } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../util/generalUtil'\r\nimport { TextVM } from '../../text/TextVM'\r\nimport * as util from './LoginUtil'\r\n\r\nexport class Login {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Is_Modal_Visible: observable\r\n    })\r\n  }\r\n\r\n  Username = ''\r\n\r\n  usernameVM\r\n  get UsernameVM(){\r\n    if (!this.usernameVM){\r\n      this.usernameVM = util.GetUsernameVM(this)\r\n    } return this.usernameVM;\r\n  }\r\n\r\n  Password\r\n\r\n  passwordVM\r\n  get PasswordVM(){\r\n    if (!this.passwordVM){\r\n      this.passwordVM = util.GetPasswordVM(this)\r\n    } return this.passwordVM;\r\n  }\r\n\r\n  get ApiData(){\r\n    return {\r\n      username : this.Username,\r\n      password: this.Password\r\n    }\r\n  }\r\n\r\n  Is_Modal_Visible = false\r\n\r\n  get ButtonView(){\r\n    return util.GetButtonView(this)\r\n  }\r\n\r\n  get MainView(){\r\n    return util.GetMainView(this)\r\n  }\r\n  \r\n  get ModalView(){\r\n    return util.GetModalView(this)\r\n  }\r\n\r\n  ModalOK = () => {\r\n    var username = this.Username;\r\n    var pw = this.Password;\r\n    if (!username || username.length === 0){\r\n      message.warn('Bạn phải nhập UserName!');\r\n      return;\r\n    }\r\n    if (!pw || pw.length === 0){\r\n      message.warn('Bạn phải nhập Password!');\r\n      return;\r\n    }\r\n\r\n    this.Validate();\r\n  }\r\n\r\n  Initial = () => {\r\n    this.UsernameVM.Content = ''\r\n    this.PasswordVM.Content = ''\r\n  }\r\n\r\n  Validate = () => {\r\n    util.Validate(this)\r\n  }\r\n}","import { TextVM } from \"../../text/TextVM\";\r\nimport * as ts from '../../text/TextState'\r\nimport { Login } from \"./Login\"\r\nimport InputView from \"../../input/InputView\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { Button, message } from 'antd';\r\nimport './Login.css'\r\nimport * as uUtil from '../item/base/UserUtil'\r\nimport * as uVMUtil from '../item/base/UserVMUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new Login();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetUsernameVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.Placeholder = 'tên user'\r\n  qI.Content = q.Username;\r\n  qI.onSetContent = (v) => q.Username = v;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetPasswordVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.State = ts.password\r\n  qI.Content = q.Password;\r\n  qI.onSetContent = (v) => q.Password = v;\r\n\r\n  return qI;\r\n}\r\n\r\n// View\r\nexport const GetButtonView = (q) => {\r\n  var click = () => {\r\n    q.Initial();\r\n    q.Is_Modal_Visible = true\r\n  }\r\n\r\n  return <Button type='primary' size='small'\r\n    onClick={click}>\r\n    Login\r\n  </Button>\r\n}\r\n\r\nexport const GetMainView = (q) => {\r\n  return <table className='login__table'>\r\n    <tbody>\r\n      <tr className='login__tr name'>\r\n        <th className='login__title'>\r\n          Username:\r\n        </th>\r\n        <td className='login__input'>\r\n          <InputView store={q.UsernameVM} />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th className='login__title'>\r\n          Password:\r\n        </th>\r\n        <td className='login__input'>\r\n          <InputView store={q.PasswordVM} />\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n}\r\n\r\nexport const GetModalView = (q) => {\r\n  const hideVisible = () => {\r\n    q.Is_Modal_Visible = false\r\n  }\r\n\r\n  return <Modal title=\"Đăng nhập\" visible={q.Is_Modal_Visible}\r\n    onCancel={hideVisible}\r\n    width={350}\r\n    footer={\r\n      <>\r\n        <Button type='primary' size='small'\r\n          onClick={q.ModalOK}>ok</Button>\r\n        <Button type='text' size='small'\r\n          onClick={hideVisible}>cancel</Button>\r\n      </>\r\n    }>\r\n    <div>\r\n      {q.MainView}\r\n    </div>\r\n  </Modal>\r\n}\r\n\r\n// Method\r\nexport const Validate = (q) => {\r\n  var dictVM = q.Dict;\r\n  var dict = dictVM.ModelItem;\r\n\r\n  const setObj = (data) => {\r\n    if (data.length !== 0) {\r\n      dictVM.LoginUser = uVMUtil.get(uUtil.GetFromDb(data[0], dict), dictVM);\r\n      q.Is_Modal_Visible = false;\r\n    } else {\r\n      message.warn('Thông tin đăng nhập không đúng!')\r\n    }\r\n  }\r\n\r\n  uUtil.GetData(dictVM.Url, q.ApiData, (data) => {\r\n    setObj(data)\r\n  });\r\n}","import { message } from 'antd';\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../util/generalUtil'\r\nimport { TextVM } from '../../text/TextVM'\r\nimport * as util from './NewPasswordUtil'\r\n\r\nexport class NewPassword {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      Is_Modal_Visible: observable\r\n    })\r\n  }\r\n\r\n  OldPassword\r\n\r\n  oldPasswordVM\r\n  get OldPasswordVM(){\r\n    if (!this.oldPasswordVM){\r\n      this.oldPasswordVM = util.GetOldPasswordVM(this)\r\n    } return this.oldPasswordVM;\r\n  }\r\n\r\n  NewPassword\r\n\r\n  newPasswordVM\r\n  get NewPasswordVM(){\r\n    if (!this.newPasswordVM){\r\n      this.newPasswordVM = util.GetNewPasswordVM(this)\r\n    } return this.newPasswordVM;\r\n  }\r\n\r\n  ReNewPassword\r\n\r\n  reNewPasswordVM\r\n  get ReNewPasswordVM(){\r\n    if (!this.reNewPasswordVM){\r\n      this.reNewPasswordVM = util.GetReNewPasswordVM(this)\r\n    } return this.reNewPasswordVM;\r\n  }\r\n\r\n  get ApiData(){\r\n    var obj = {\r\n      _id : this.User.ModelItem?._id,\r\n      oldpassword: this.OldPassword,\r\n      newpassword : this.NewPassword\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  get User(){\r\n    return this.Dict.LoginUser\r\n  }\r\n\r\n  Is_Modal_Visible = false\r\n\r\n  get ButtonView(){\r\n    return util.GetButtonView(this)\r\n  }\r\n\r\n  get MainView(){\r\n    return util.GetMainView(this)\r\n  }\r\n  \r\n  get ModalView(){\r\n    return util.GetModalView(this)\r\n  }\r\n\r\n  ModalOK = () => {\r\n    var opw = this.OldPassword;\r\n    var npw = this.NewPassword\r\n    var rnpw = this.ReNewPassword;\r\n    if (!opw || opw.length === 0){\r\n      message.warn('Bạn phải nhập Password cũ!');\r\n      return;\r\n    }\r\n    if (!npw || npw.length === 0){\r\n      message.warn('Bạn phải nhập Password mới!');\r\n      return;\r\n    }\r\n    if (opw === npw){\r\n      message.warn('Password mới bị trùng với password cũ!');\r\n      return;\r\n    }\r\n    if (rnpw !== npw){\r\n      message.warn('Thông tin nhập lại Password mới không đúng!');\r\n      return;\r\n    }\r\n\r\n    this.Validate();\r\n  }\r\n\r\n  OpenModal = () => {\r\n    this.Initial();\r\n    this.Is_Modal_Visible = true\r\n  }\r\n\r\n  Initial = () => {\r\n    this.OldPasswordVM.Content = ''\r\n    this.NewPasswordVM.Content = ''\r\n    this.ReNewPasswordVM.Content = ''\r\n  }\r\n\r\n  Validate = () => {\r\n    util.Validate(this)\r\n  }\r\n}","import { TextVM } from \"../../text/TextVM\";\r\nimport * as ts from '../../text/TextState'\r\nimport { NewPassword } from \"./NewPassword\"\r\nimport InputView from \"../../input/InputView\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { Button, message } from 'antd';\r\nimport './NewPassword.css'\r\nimport * as api from '../../../util/apiUtil'\r\n\r\n// Instance\r\nexport const get = (dict) => {\r\n  var qI = new NewPassword();\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetOldPasswordVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.State = ts.password\r\n  qI.Content = q.OldPassword;\r\n  qI.onSetContent = (v) => q.OldPassword = v;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetNewPasswordVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.State = ts.password\r\n  qI.Content = q.NewPassword;\r\n  qI.onSetContent = (v) => q.NewPassword = v;\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetReNewPasswordVM = (q) => {\r\n  var qI = new TextVM();\r\n\r\n  qI.State = ts.password\r\n  qI.Content = q.ReNewPassword;\r\n  qI.onSetContent = (v) => q.ReNewPassword = v;\r\n\r\n  return qI;\r\n}\r\n\r\n// View\r\nexport const GetButtonView = (q) => {\r\n  var click = () => {\r\n    q.OpenModal();\r\n  }\r\n\r\n  return <Button type='primary' size='small'\r\n    onClick={click}>\r\n    New Password\r\n  </Button>\r\n}\r\n\r\nexport const GetMainView = (q) => {\r\n  return <table className='newpassword__table'>\r\n    <tbody>\r\n      <tr className='newpassword__tr name'>\r\n        <th className='newpassword__title'>\r\n          Username:\r\n        </th>\r\n        <td className='newpassword__input'>\r\n          <b>\r\n            {q.User?.Username}\r\n          </b>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th className='newpassword__title'>\r\n          OldPassword:\r\n        </th>\r\n        <td className='newpassword__input'>\r\n          <InputView store={q.OldPasswordVM} />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th className='newpassword__title'>\r\n          NewPassword:\r\n        </th>\r\n        <td className='newpassword__input'>\r\n          <InputView store={q.NewPasswordVM} />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th className='login__title'>\r\n          Re-NewPassword:\r\n        </th>\r\n        <td className='login__input'>\r\n          <InputView store={q.ReNewPasswordVM} />\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n}\r\n\r\nexport const GetModalView = (q) => {\r\n  const hideVisible = () => {\r\n    q.Is_Modal_Visible = false\r\n  }\r\n\r\n  return <Modal title=\"Đổi mật khẩu\" visible={q.Is_Modal_Visible}\r\n    onCancel={hideVisible}\r\n    width={400}\r\n    footer={\r\n      <>\r\n        <Button type='primary' size='small'\r\n          onClick={q.ModalOK}>ok</Button>\r\n        <Button type='text' size='small'\r\n          onClick={hideVisible}>cancel</Button>\r\n      </>\r\n    }>\r\n    <div>\r\n      {q.MainView}\r\n    </div>\r\n  </Modal>\r\n}\r\n\r\n// Method\r\nexport const Validate = (q) => {\r\n  var dictVM = q.Dict;\r\n  var dict = dictVM.ModelItem;\r\n\r\n  const setObj = (data) => {\r\n    if (data === 'wrongpassword'){\r\n      message.warn('Password cũ không đúng!');\r\n    }else if (data.length !== 0) {\r\n      q.Is_Modal_Visible = false;\r\n      message.success('change password successfully!');\r\n      q.Dict.LoginUser = undefined\r\n    }\r\n  }\r\n\r\n  const apiFunc = () => api.put(`${dictVM.Url}/newpassword`, q.ApiData);\r\n  apiFunc().then(response => response.data)\r\n    .then(data => {\r\n      setObj(data)\r\n    })\r\n}","export const login = 'login'\r\nexport const user = 'user'","import { makeObservable, observable, action } from 'mobx';\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as util from './AdminVMUtil'\r\n\r\nexport class AdminVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      viewRender : observable\r\n    })\r\n  }\r\n\r\n  // Users\r\n  OnSet_Users_Func = []\r\n\r\n  get Users(){\r\n    return this.Dict.Users\r\n  }\r\n\r\n\r\n  // Dict\r\n  Dict\r\n\r\n  adminUser_Dict\r\n  get AdminUser_Dict(){\r\n    if (!this.adminUser_Dict){\r\n      this.adminUser_Dict = \r\n        util.GetAdminUser_Dict(this)\r\n    } return this.adminUser_Dict\r\n  }\r\n\r\n  // Item\r\n  userManager_Dict\r\n  get UserManager_Dict(){\r\n    if (!this.userManager_Dict){\r\n      this.userManager_Dict = util.GetUserManager_Dict(this)\r\n    } return this.userManager_Dict;\r\n  }\r\n\r\n  // View\r\n  viewRender = undefined\r\n  get ViewRender(){\r\n    if (!this.viewRender){\r\n      this.viewRender = util.GetDefault_ViewRender(this)\r\n    } return this.viewRender;\r\n  } set ViewRender(v){\r\n    this.viewRender = v;\r\n  }\r\n\r\n  get View(){\r\n    return this.ViewRender();\r\n  }\r\n}","import * as editTextUtil from '../model/text/EditableTextVMUtil'\r\nimport * as genUtil from './generalUtil'\r\n\r\nexport const alt = 'alt'\r\nexport const alt_enter = 'alt_enter'\r\n\r\nexport const ctrl = 'ctrl'\r\nexport const ctrl_b = 'ctrl_b'\r\nexport const ctrl_i = 'ctrl_i'\r\n\r\nexport const enter = 'enter'\r\nexport const tab = 'tab'\r\nexport const backspace = 'backspace'\r\nexport const del = 'del'\r\nexport const esc = 'esc'\r\n\r\nexport const Get_Shortcut = (e) => {\r\n  var key;\r\n  if (e.altKey && e.keyCode == 13) {\r\n    key = alt_enter\r\n  } else if (e.ctrlKey && e.which == 66) {\r\n    key = ctrl_b\r\n  } else if (e.ctrlKey && e.which == 73) {\r\n    key = ctrl_i\r\n  } else if (e.ctrlKey) {\r\n    key = ctrl\r\n  } else if (e.altKey) {\r\n    key = alt\r\n  } else if (e.keyCode == 13) {\r\n    key = enter\r\n  } else if (e.keyCode == 9) {\r\n    key = tab\r\n  } else if (e.keyCode == 8) {\r\n    key = backspace\r\n  } else if (e.keyCode == 46) {\r\n    key = del\r\n  } else if (e.keyCode == 27) {\r\n    key = esc\r\n  }\r\n\r\n  return {\r\n    key,\r\n    value: e.key\r\n  }\r\n}\r\n\r\n// Edit RenderState\r\nexport const Ready = (q, preFunc, postFunc) => {\r\n  var isValid = preFunc ? preFunc() : true;\r\n  if (!isValid) return;\r\n\r\n  if (q.RenderState !== 'edit') {\r\n    q.RenderState = 'ready';\r\n  }\r\n\r\n  if (postFunc) {\r\n    postFunc();\r\n  }\r\n}\r\n\r\nexport const NotReady = (q) => {\r\n  if (q.RenderState !== 'edit') {\r\n    q.RenderState = 'default'\r\n  }\r\n}\r\n\r\nexport const Edit = (q, preFunc, postFunc) => {\r\n  var isValid = preFunc ? preFunc() : true;\r\n  if (!isValid) return;\r\n\r\n  if (q.RenderState === 'default') {\r\n    q.RenderState = 'edit';\r\n\r\n    if (postFunc) {\r\n      postFunc();\r\n    }\r\n  }\r\n}\r\n\r\nexport const EditOK = (q, postFunc) => {\r\n  q.RenderState = 'default';\r\n\r\n  if (postFunc) {\r\n    postFunc();\r\n  }\r\n}\r\n\r\n// Get InputView\r\nexport const GetInput = (q, field, postOkFunc) => {\r\n  var obj = editTextUtil.get(q[field]);\r\n\r\n  const set_default = () =>\r\n    EditOK(obj);\r\n\r\n  obj.Is_Tool_Visible = false\r\n  obj.OnKeyDown = (e) => {\r\n    var { key, value } = Get_Shortcut(e);\r\n\r\n    switch (key) {\r\n      case enter:\r\n        if (!obj.StorageType || obj.StorageType === 'text') {\r\n          set_default();\r\n        }\r\n        break;\r\n      case alt_enter:\r\n        if (obj.StorageType === 'html') {\r\n          set_default();\r\n        }\r\n        break;\r\n      case esc:\r\n        obj.IsEscape = true;\r\n        set_default();\r\n        break;\r\n    }\r\n  }\r\n\r\n  genUtil.Add(\r\n    obj.OnSet_RenderState_Func_Dict,\r\n    () => {\r\n      if (obj.RenderState === 'default' && obj.Old_RenderState === 'edit') {\r\n        const okfunc = () => {\r\n          if (postOkFunc) {\r\n            postOkFunc();\r\n          }\r\n        }\r\n\r\n        if (obj.IsEscape) {\r\n          obj.Editor.Content = obj.Content = q[field]\r\n          obj.IsEscape = false\r\n\r\n          okfunc();\r\n          return;\r\n        }\r\n\r\n        if (obj.Content === q[field]) {\r\n          okfunc();\r\n          return;\r\n        }\r\n\r\n        q[field] = obj.Content;\r\n        okfunc();\r\n      }\r\n    },\r\n    false\r\n  )\r\n\r\n  return obj;\r\n}\r\n\r\n// Phương thức cũ đang sử dụng trong HtmlRenderVM\r\nexport const get = (inputs, name) => {\r\n  var index = inputs.findIndex(x => x.name === name);\r\n  if (index === -1) {\r\n    inputs.push(getDefaultInput(name));\r\n    index = inputs.length - 1;\r\n  }\r\n  return inputs[index];\r\n}\r\n\r\nexport const getDefaultInput = (name) => {\r\n  let value;\r\n  switch (name) {\r\n    case '0':\r\n      value = 0;\r\n      break;\r\n    case 'x':\r\n      value = 3;\r\n      break;\r\n    case 'class':\r\n      value = 'Person';\r\n      break;\r\n    case 'classDesc':\r\n      value = 'Kiểu dữ liệu mô phỏng ...';\r\n      break;\r\n    default:\r\n      value = 'undefined';\r\n      break;\r\n  }\r\n\r\n  return { name, value }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ItemVMUtil'\r\nimport * as inputUtil from '../../../../../util/inputUtil'\r\nimport EditableTextView from '../../../../text/EditableTextView';\r\nimport { message } from 'antd';\r\n\r\nexport class ItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      tempUsername: observable,\r\n      IsPasswordChanged: observable\r\n    })\r\n  }\r\n\r\n  User\r\n\r\n  // Username\r\n  get Username() {\r\n    return this.User.Username\r\n  } set Username(v) {\r\n    this.User.Username = v;\r\n  }\r\n\r\n  tempUsername = undefined\r\n  get TempUsername() {\r\n    if (!this.tempUsername) {\r\n      this.tempUsername = this.Username;\r\n    } return this.tempUsername\r\n  } set TempUsername(v) {\r\n    this.tempUsername = v;\r\n  }\r\n\r\n  usernameVM\r\n  get UsernameVM() {\r\n    if (!this.usernameVM) {\r\n      this.usernameVM = inputUtil.GetInput(this, 'TempUsername')\r\n    } return this.usernameVM\r\n  }\r\n\r\n  get UsernameView() {\r\n    return <EditableTextView\r\n      store={this.UsernameVM} />\r\n  }\r\n\r\n  // Password\r\n  get Password() {\r\n    return this.User.Password\r\n  } set Password(v) {\r\n    this.User.Password = v;\r\n  }\r\n\r\n  passwordVM\r\n  get PasswordVM() {\r\n    if (!this.passwordVM) {\r\n      var qI = this.passwordVM =\r\n        inputUtil.GetInput(this, 'TempPassword', () => {\r\n          this.Password = this.TempPassword;\r\n          this.TempPassword = qI.Content = ''\r\n          this.IsPasswordChanged = true;\r\n        })\r\n      qI.Placeholder = 'password ...'\r\n    } return this.passwordVM\r\n  }\r\n\r\n  get PasswordView() {\r\n    return <EditableTextView\r\n      store={this.PasswordVM} />\r\n  }\r\n\r\n  // Changed\r\n  get IsUsernameChanged() {\r\n    return this.Username !== this.TempUsername\r\n  }\r\n\r\n  IsPasswordChanged = false\r\n\r\n  get IsChanged() {\r\n    return this.IsUsernameChanged || this.IsPasswordChanged\r\n  }\r\n\r\n  // Row\r\n  get RowView() {\r\n    return util.GetRowView(this)\r\n  }\r\n\r\n  // Command\r\n  OK = () => {\r\n    this.Username = this.TempUsername\r\n    this.IsPasswordChanged = false\r\n\r\n    this.User.Save(() => {\r\n      message.success('save successfully!');\r\n    });\r\n  }\r\n\r\n  Cancel = () => {\r\n    this.UsernameVM.Content = this.TempUsername = this.Username\r\n    this.IsPasswordChanged = false\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  // Delete\r\n  deleteVM\r\n  get DeleteVM(){\r\n    if (!this.deleteVM){\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n\r\n    this.User.Delete();\r\n  }\r\n}","import { ItemVM } from \"./ItemVM\"\r\nimport * as inputUtil from '../../../../../util/inputUtil'\r\nimport { Button } from \"antd\";\r\nimport './Item.css'\r\nimport { EntDelete } from \"../../../../delete/EntDelete\";\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new ItemVM();\r\n\r\n  qI.User = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetRowView = (q) => {\r\n  return <tr key={q.User.id}>\r\n    <td\r\n      onMouseEnter={\r\n        () => inputUtil.Edit(q.UsernameVM)}\r\n      onMouseLeave={\r\n        () => inputUtil.EditOK(q.UsernameVM)}\r\n    >{q.UsernameView}</td>\r\n\r\n    <td\r\n      onMouseEnter={\r\n        () => inputUtil.Edit(q.PasswordVM)}\r\n      onMouseLeave={\r\n        () => inputUtil.EditOK(q.PasswordVM)}\r\n    >{q.PasswordView}</td>\r\n\r\n    <td>\r\n      <div className='f-jc'>\r\n        <div className='f'>\r\n          {q.IsPasswordChanged ?\r\n            <Button type='primary' size='small'\r\n              onClick={q.OK}>ok</Button>\r\n            : ''}\r\n          {q.IsUsernameChanged ?\r\n            <Button type='primary' className='btn-warning' size='small'\r\n              onClick={q.Cancel}>cancel</Button>\r\n            : ''}\r\n\r\n          {q.DeleteVM.View}\r\n        </div>\r\n      </div>\r\n\r\n    </td>\r\n  </tr >\r\n}\r\n\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = 'manual'\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport './Table.css'\r\nimport { DictVM } from '../dict/DictVM';\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table className='table table-bordered admin__um__table'>\r\n          <thead className='admin__um__thead bg-[#e9ecef]'>\r\n            <tr>\r\n              <th className='admin__um__table__username'>Username</th>\r\n              <th className='admin__um__table__password'>Password</th>\r\n              <th className='admin__um__table__command'></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className='admin__um__tbody'>\r\n            {data.Items?.map(x => x.RowView)}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import * as genUtil from '../../../../../util/generalUtil'\r\nimport { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DictVMUtil'\r\nimport * as itemUtil from '../item/ItemVMUtil'\r\nimport { Button, message } from 'antd';\r\nimport TableView from '../table/TableView';\r\nimport './Dict.css'\r\nimport { SaveFilled } from '@ant-design/icons';\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Items\r\n  OnSet_Items_Func =[]\r\n\r\n  items = undefined\r\n  get Items(){\r\n    if (!this.items){\r\n      util.Handle_Items(this)\r\n    }   return this.items;\r\n  } set Items(v){\r\n    this.items = v;\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = () => {\r\n    var qI = itemUtil.get(this.Dict.Dict.AddUser(), this);\r\n\r\n    this.Items.push(qI)\r\n    return qI;\r\n  }\r\n\r\n  // table\r\n  get TableView() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get MainView() {\r\n    return <div>\r\n      <div className='f-jc admin__um__title'>\r\n        <span>QUẢN LÝ NGƯỜI DÙNG</span>\r\n      </div>\r\n      <div className='f'>\r\n        <div className='admin__um__add'>\r\n          <Button type='primary' size='small'\r\n            className='btn-success'\r\n            onClick={this.AddItem}>+</Button>\r\n        </div>\r\n        <div className='es__main f1'>\r\n          <TableView store={this} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n}","import * as genUtil from '../../../../../util/generalUtil'\r\nimport { DictVM } from \"./DictVM\";\r\nimport './Dict.css'\r\nimport { Button } from 'antd';\r\nimport * as itemUtil from '../item/ItemVMUtil'\r\nimport * as editTextUtil from '../../../../text/EditableTextVMUtil';\r\nimport EditableTextView from '../../../../text/EditableTextView';\r\nimport * as rs from '../../../../text/TextRenderState';\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => itemUtil.get(x, q));\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.Dict.Dict\r\n  if (host.Users) {\r\n    setObj(host.Users)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Users_Func,\r\n    () => setObj(host.Users),\r\n    false\r\n  )\r\n}\r\n\r\n// export const GetDefault_ItemRender = (q) => {\r\n//   return (v) => <tr key={v.id} onDoubleClick={v.Edit}>\r\n//     <td>\r\n//       <div className='admin__um__username'>\r\n//         {v.UsernameView}\r\n//       </div>\r\n//     </td>\r\n//     <td>\r\n//       <div className='admin__um__password f-ac'>\r\n//         <div className='f1'>\r\n//           {v.PasswordView}\r\n//         </div>\r\n//         {v.ToolView_Render()}\r\n//       </div>\r\n//     </td>\r\n//   </tr>\r\n// }\r\n\r\n// export const GetGetItem_Func = (q) => {\r\n//   return (x) => {\r\n//     var qI = iUtil.get(x, q)\r\n\r\n//     var q1 = qI.PasswordVM = editTextUtil.get('', undefined);\r\n//     q1.Is_Tool_Visible = false\r\n//     qI.OnSet_RenderState = (v) => {\r\n//       q1.RenderState = v\r\n//     }\r\n\r\n//     genUtil.Add(\r\n//       q1.OnSet_RenderState_Func_Dict,\r\n//       () => {\r\n//         if (q1.RenderState === rs._default) {\r\n//           x.Password = q1.Content;\r\n//           q1.Content = ''\r\n//         }\r\n//       },\r\n//       false\r\n//     )\r\n//     qI.PasswordView = <EditableTextView store={q1} />\r\n\r\n//     const ok = () => {\r\n//       // qI.IsSaveDatabase = false\r\n//       qI.RenderState = rs._default\r\n//     }\r\n//     const cancel = () => {\r\n//       qI.UsernameVM.Content = qI.Username;\r\n//       qI.PasswordVM.Content = ''\r\n//       qI.IsSaveDatabase = false\r\n//       qI.RenderState = rs._default\r\n//     }\r\n\r\n//     qI.ToolView_Render = () => <div className='f'>\r\n//       {qI.RenderState === rs.edit ?\r\n//         <>\r\n//           <Button type='primary' size='small'\r\n//             onClick={ok}>ok</Button>\r\n//           <Button type='primary' size='small'\r\n//             onClick={cancel}>cancel</Button>\r\n//         </>\r\n//         : ''}\r\n//       <Button type='primary' size='small'\r\n//         className='btn-danger'\r\n//         onClick={qI.Delete}>x</Button>\r\n//     </div>\r\n\r\n//     return qI;\r\n//   }\r\n// }","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './ItemVMUtil'\r\nimport './Item.css'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class ItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      \r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // User\r\n  get userId(){\r\n    return this.ModelItem.userId;\r\n  } set userId(v){\r\n    this.ModelItem.userId = v\r\n  }\r\n\r\n  OnSet_User_Func = []\r\n\r\n  user\r\n  get User(){\r\n    if (!this.user){\r\n      util.Handle_User(this)\r\n    } return this.user\r\n  } set User(v){\r\n    this.user = v;\r\n    this.userId = v?._id\r\n\r\n    genUtil.Handle(this.OnSet_User_Func,\r\n      (v) => this.OnSet_User_Func = v)\r\n  }\r\n\r\n  user_Select\r\n  get User_Select() {\r\n    if (!this.user_Select) {\r\n      this.user_Select = util.GetUser_Select(this)\r\n    } return this.user_Select\r\n  }\r\n\r\n  // Save\r\n  Save = (handle) => {\r\n    this.ModelItem.Save(handle)\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n\r\n  // view\r\n  get RowView() {\r\n    return util.GetRowView(this)\r\n  }\r\n}","import { ItemVM } from './ItemVM'\r\nimport { EntDelete } from '../../../../delete/EntDelete';\r\nimport { SelectVM } from '../../../../select/SelectVM';\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new ItemVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = 'manual'\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\n// User\r\nexport const Handle_User = (q) => {\r\n  if (q.IsGet_User) return undefined;\r\n  q.IsGet_User = true;\r\n\r\n\r\n  const setObj = (data) => {\r\n    var list = data;\r\n\r\n    var _id = q.userId;\r\n    if (_id) {\r\n      q.User = genUtil.SingleFilter(list, (x) => x.id === _id);\r\n    } else {\r\n      q.User = undefined;\r\n    }\r\n\r\n    q.IsGet_User = false;\r\n  }\r\n\r\n  var host = q.ModelItem.Dict.Dict.Dict\r\n  if (host.Users) {\r\n    setObj(host.Users)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Users_Func,\r\n      () => setObj(host.Users)\r\n    )\r\n  }\r\n}\r\n\r\nexport const GetUser_Select = (q) => {\r\n  var qI = new SelectVM();\r\n\r\n  const setObj = (data) => {\r\n    var list = qI.Items = data;\r\n\r\n    const setObj2 = () => {\r\n      qI.InitialItem = q.User;\r\n    }\r\n\r\n    if (q.User) {\r\n      setObj2();\r\n    } else {\r\n      genUtil.Add_2(q.OnSet_User_Func,\r\n        setObj2)\r\n    }\r\n  }\r\n\r\n  var host = q.ModelItem.Dict.Dict.Dict\r\n  if (host.Users) {\r\n    setObj(host.Users)\r\n  } else {\r\n    genUtil.Add_2(\r\n      host.OnSet_Users_Func,\r\n      () => setObj(host.Users)\r\n    )\r\n  }\r\n\r\n  qI.Placeholder = 'chọn user...'\r\n  qI.TitleRender = (v) => v.Username\r\n  qI.OnSelectedItemChanged = (v) => {\r\n    q.User = v\r\n    q.Save()\r\n  };\r\n\r\n  return qI;\r\n}\r\n\r\n// view\r\nexport const GetRowView = (q) => {\r\n  return <tr key={q.id}>\r\n    <td>\r\n      <div className='w-40'>\r\n        {q.User_Select.View}\r\n      </div>\r\n    </td>\r\n    <td>\r\n      <div className='f-jc'>\r\n        <div className='f'>\r\n          {q.DeleteVM.View}\r\n        </div>\r\n      </div>\r\n    </td>\r\n  </tr>\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { DictVM } from '../dict/DictVM';\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table>\r\n          <tbody>\r\n            {data.Items?.map(x => x.RowView)}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DictVMUtil'\r\nimport * as itemUtil from '../item/ItemVMUtil'\r\nimport { Button, message } from 'antd';\r\nimport TableView from '../table/TableView';\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Items\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n  }\r\n\r\n  AddItem = () => {\r\n    var q = this.ModelItem.AddItem();\r\n    var qI = itemUtil.get(q, this);\r\n\r\n    this.Items.push(qI)\r\n    return qI;\r\n  }\r\n\r\n  // table\r\n  get TableView() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get View() {\r\n    return <div>\r\n      <div className='f-jc text-lg font-medium'>\r\n        <span>Admin</span>\r\n      </div>\r\n      <div className='f'>\r\n        <div className='admin__pgc__add'>\r\n          <Button type='primary' size='small'\r\n            className='btn-success'\r\n            onClick={this.AddItem}>+</Button>\r\n        </div>\r\n        <div className='es__main f1 ml-2'>\r\n          <TableView store={this} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n}","import { DictVM } from \"./DictVM\";\r\nimport * as iUtil from '../item/ItemVMUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x=> iUtil.get(x, q));\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Items_Func,\r\n    () => setObj(host.Items),\r\n    false\r\n  )\r\n}","import { AdminVM } from \"./AdminVM\";\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as um_dUtil from '../usermanager/dict/DictVMUtil'\r\nimport * as auDictUtil from '../adminuser/dict/DictVMUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new AdminVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDefault_ViewRender = (q) => {\r\n  return () => q.UserManager_Dict.MainView\r\n}\r\n\r\nexport const GetUserManager_Dict = (q) => {\r\n  return um_dUtil.get(undefined, q);\r\n}\r\n\r\nexport const GetAdminUser_Dict = (q) => {\r\n  return auDictUtil.get(q.ModelItem.AdminUser_Dict, q);\r\n}","import { User_DictVM } from \"./User_DictVM\";\r\nimport * as iUtil from '../item/base/UserVMUtil'\r\nimport * as loginUtil from '../login/LoginUtil'\r\nimport * as newpasswordUtil from '../newpassword/NewPasswordUtil'\r\nimport * as vt from './User_Dict_ViewType'\r\nimport './User_Dict.css'\r\nimport { Button, message } from 'antd';\r\nimport * as genUtil from '../../../util/generalUtil'\r\nimport * as adminUtil from '../admin/base/AdminVMUtil'\r\nimport * as userUtil from '../item/base/UserVMUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new User_DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_LoginUser = (q) => {\r\n  if (q.IsGet_LoginUser) return undefined;\r\n  q.IsGet_LoginUser = true;\r\n\r\n  const setObj = (data) => {\r\n    q.IsSet_Model = false\r\n    q.LoginUser = data ? iUtil.get(data, q) : undefined\r\n    q.IsGet_LoginUser = true;\r\n  }\r\n\r\n  var host = q.ModelItem;\r\n  genUtil.Add_2(host.OnSet_LoginUser_Func,\r\n    () => setObj(host.LoginUser))\r\n  var q1 = host.LoginUser;\r\n}\r\n\r\nexport const Handle_Users = (q) => {\r\n  if (q.IsGet_Users) return undefined\r\n  q.IsGet_Users = true;\r\n\r\n  var url = q.Url\r\n\r\n  const setObj = (data) => {\r\n    q.Users = data.map(x => userUtil.get(x, q));\r\n    q.IsGet_Users = false;\r\n  }\r\n\r\n  var host = q.ModelItem;\r\n  if (host.Users){\r\n    setObj(host.Users)\r\n  }else {\r\n    genUtil.Add_2(host.OnSet_Users_Func,\r\n      () => setObj(host.Users))\r\n  }\r\n}\r\n\r\nexport const GetAdmin = (q) => {\r\n  var qI = adminUtil.get(q.ModelItem.Admin, q);\r\n  return qI;\r\n}\r\n\r\nexport const GetLogin = (q) => {\r\n  return loginUtil.get(q);\r\n}\r\n\r\nexport const GetNewPassword = (q) => {\r\n  return newpasswordUtil.get(q)\r\n}\r\n\r\nexport const Handle_ViewType = (q) => {\r\n  if (q.IsGet_ViewType) return undefined;\r\n  q.IsGet_ViewType = true;\r\n\r\n  const setObj = () => {\r\n    q.ViewType = GetViewType(q)\r\n    q.IsGet_ViewType = false;\r\n  }\r\n\r\n  if (q.LoginUser) {\r\n    setObj();\r\n  } else {\r\n    genUtil.Add_2(\r\n      q.OnSet_LoginUser_Func,\r\n      setObj\r\n    )\r\n  }\r\n}\r\n\r\nexport const GetViewType = (q) => {\r\n  return q.LoginUser ? vt.user : vt.login\r\n}\r\n\r\nexport const GetDefault_LoginRender = (q) => {\r\n  return () => q.Login.ButtonView;\r\n}\r\n\r\nexport const GetDefault_UserRender = (q) => {\r\n  return () => <>\r\n    <div className='f-ac'>\r\n      <div className='ud__username'\r\n        onClick={q.NewPassword.OpenModal}>\r\n        <b>{q.LoginUser.Username}</b>\r\n      </div>\r\n      <Button type='primary' size='small'\r\n        className='btn-danger ud__logout'\r\n        onClick={q.Logout}>\r\n        x\r\n      </Button>\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport const GetDefault_MainViewRender = (q) => {\r\n  return () => {\r\n    switch (q.ViewType) {\r\n      case vt.login:\r\n        return q.LoginRender()\r\n      case vt.user:\r\n        return q.UserRender();\r\n      default:\r\n        return ''\r\n    }\r\n    // q.ViewType === vt.login ?\r\n    //   q.LoginRender() : q.UserRender();\r\n  }\r\n}\r\n\r\nexport const GetDefault_ModalViewRender = (q) => {\r\n  return () => <>\r\n    {q.Login.ModalView}\r\n    {q.NewPassword.ModalView}\r\n  </>\r\n}\r\n\r\nexport const GetDefault_ViewRender = (q) => {\r\n  return () => <div>\r\n    <div className='ud__main__wrapper'>\r\n      {q.MainView}\r\n    </div>\r\n    {q.ModalView}\r\n  </div>\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { DictVM } from '../dict/DictVM';\r\nimport './Table.css'\r\nimport * as commandType from '../../command/base/CommandType'\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table className='table table-bordered'>\r\n          <thead className='mt__thead'>\r\n            <tr>\r\n              <th className='role__table__name'/>\r\n\r\n              {commandType.List().map(x => {\r\n                return <td key={x} className='role__table__item'>\r\n                  {commandType.GetName(x)}\r\n                </td>\r\n              })}\r\n\r\n              <th className='role__table__command'></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.Items?.map(x => x.RowView)}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(TableView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport * as util from './ItemVMUtil'\r\nimport './Item.css'\r\nimport EditableTextView from '../../../../../text/EditableTextView';\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as inputUtil from '../../../../../../util/inputUtil'\r\n\r\nexport class ItemVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Name\r\n  get Name() {\r\n    return this.ModelItem.Name;\r\n  } set Name(v) {\r\n    this.ModelItem.Name = v;\r\n  }\r\n\r\n  nameVM\r\n  get NameVM() {\r\n    if (!this.nameVM) {\r\n      this.nameVM = inputUtil.GetInput(this, 'Name', () => this.Save());\r\n    }\r\n    return this.nameVM;\r\n  }\r\n\r\n  get NameView() {\r\n    return <EditableTextView className='mgs__cell__main'\r\n      store={this.NameVM} />\r\n  }\r\n\r\n   // command\r\n   commands\r\n   get Commands(){\r\n     if (!this.commands){\r\n       this.commands = util.GetCommands(this)\r\n     } return this.commands;\r\n   }\r\n \r\n\r\n  // row\r\n  get RowView(){\r\n    return util.GetRowView(this)\r\n  }\r\n\r\n  // save\r\n  Save = (handle) => {\r\n    this.ModelItem.Save(handle)\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport * as util from './CommandVMUtil'\r\nimport * as commandLevel from './CommandLevel'\r\n\r\nexport class CommandVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      level : observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n  \r\n  get Type(){\r\n    return this.ModelItem.Type\r\n  }\r\n\r\n  // level\r\n  level = undefined\r\n  get Level(){\r\n    if (!this.level){\r\n      this.level = this.ModelItem.Level\r\n    } return this.level\r\n  } set Level(v){\r\n    this.level = this.ModelItem.Level = v\r\n  }\r\n\r\n  UpLevel = () => {\r\n    util.UpLevel(this)\r\n\r\n    // save\r\n    this.Dict.Save();\r\n  }\r\n\r\n  // View\r\n  get View(){\r\n    return util.GetView(this)\r\n  }\r\n}","import { CommandVM } from './CommandVM'\r\nimport { Button, message } from 'antd';\r\nimport * as commandLevel from './CommandLevel'\r\nimport './Command.css'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new CommandVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetView = (q) => {\r\n  return <td className='text-center non-input' key={q.id}>\r\n    <div className='f-jc'>\r\n      <div onClick={q.UpLevel}\r\n        className={`role__command ${q.Level} f-jc`}\r\n      >\r\n        {q.Level}\r\n      </div>\r\n    </div>\r\n  </td>\r\n}\r\n\r\nexport const UpLevel = (q) => {\r\n  var list = commandLevel.List();\r\n  var index = list.indexOf(q.Level)\r\n\r\n  var n_index = index !== list.length - 1 ? index + 1 : 0\r\n  q.Level = list[n_index];\r\n}","import { ItemVM } from './ItemVM'\r\nimport { EntDelete } from '../../../../../delete/EntDelete';\r\nimport { Button, message } from 'antd';\r\n\r\nimport * as commandUtil from '../../command/base/CommandVMUtil'\r\n\r\nimport * as inputUtil from '../../../../../../util/inputUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new ItemVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = 'manual'\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\nexport const GetCommands = (q) => {\r\n  return q.ModelItem.Commands.map(x => commandUtil.get(x, q));\r\n}\r\n\r\n// view\r\nexport const GetRowView = (q) => {\r\n  return <tr key={q.id}>\r\n    <td\r\n      onMouseEnter={\r\n        () => inputUtil.Edit(q.NameVM)\r\n      }\r\n      onMouseLeave={\r\n        () => inputUtil.EditOK(q.NameVM)\r\n      }\r\n    >{q.NameView}</td>\r\n\r\n    {/* Command */}\r\n    {q.Commands.map(x => x.View)}\r\n\r\n    {/* Delete */}\r\n    <td className='non-input text-center'>\r\n      {q.DeleteVM.View}\r\n    </td>\r\n  </tr>\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './DictVMUtil'\r\nimport TableView from '../table/TableView';\r\nimport * as itemUtil from '../item/ItemVMUtil'\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport './Dict.css'\r\nimport { Button } from 'antd';\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = () => {\r\n    var q = this.ModelItem.AddItem();\r\n    var qI = itemUtil.get(q, this);\r\n\r\n    this.Items.push(qI)\r\n    return qI;\r\n  }\r\n\r\n  // table\r\n  get TableView() {\r\n    return <TableView store={this} />\r\n  }\r\n\r\n  get View() {\r\n    return <div className='mt__wrapper'>\r\n      <div className='f-jc text-lg font-medium mb-3'>\r\n        <span>Phân quyền</span>\r\n      </div>\r\n\r\n      <div className='f'>\r\n        <Button type='primary' size='small'\r\n          className='btn-success mt__add'\r\n          onClick={this.AddItem}>+</Button>\r\n\r\n        <div className='f1'>\r\n          <TableView store={this} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n}","import { DictVM } from \"./DictVM\";\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as itemUtil from '../item/ItemVMUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => itemUtil.get(x, q));\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Items_Func,\r\n    () => setObj(host.Items),\r\n    false\r\n  )\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { Button, message } from 'antd';\r\nimport * as util from './BaseVMUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\nexport class BaseVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // data\r\n  fields\r\n  get Fields() {\r\n    if (!this.fields) {\r\n      this.fields = util.GetFields(this)\r\n    } return this.fields\r\n  }\r\n\r\n  GetField = (name) => {\r\n    return genUtil.SingleFilter(this.Fields, x => x.Key === name);\r\n  }\r\n\r\n  // task\r\n  taskDict\r\n  get TaskDict(){\r\n    if (!this.taskDict){\r\n      this.taskDict = util.GetTaskDict(this)\r\n    } return this.taskDict\r\n  }\r\n\r\n  // css\r\n  get Css() {\r\n    return this === this.Dict.CurrentItem ? 'bg-[#52c41a90] text-white font-medium' : ''\r\n  }\r\n\r\n  // current\r\n  SetCurrent = () => {\r\n    var dict = this.Dict\r\n\r\n    if (dict.CurrentItem === this) {\r\n      dict.CurrentItem = undefined\r\n    } else {\r\n      dict.CurrentItem = this\r\n    }\r\n  }\r\n\r\n  // save\r\n  Save = (handle) => {\r\n    this.ModelItem.Save(handle);\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n\r\n  // validate\r\n  Validate = (level) => {\r\n    return this.Dict.Validate(level)\r\n  }\r\n\r\n  // view\r\n  get TitleView() {\r\n    return util.GetTitleView(this)\r\n  }\r\n\r\n  get ContentView(){\r\n    return util.GetContentView(this)\r\n  }\r\n}","export const name = 'name'\r\n\r\nexport const List = () => {\r\n  return [\r\n    name,\r\n  ]\r\n}\r\n\r\nexport const GetName = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case name:\r\n      r_name = 'Name';\r\n      break;\r\n  }\r\n\r\n  return r_name\r\n}\r\n\r\nexport const GetTitle = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case name:\r\n      r_name = 'Name';\r\n      break;\r\n  }\r\n\r\n  return r_name\r\n}\r\n\r\nexport const GetPlaceholder = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case name:\r\n      r_name = 'dự án';\r\n      break;\r\n  }\r\n\r\n  return r_name\r\n}","import * as util from './RefDictUtil'\r\n\r\nexport class RefDict {\r\n  Items = []\r\n\r\n  GetItem = (name) => {\r\n    return util.GetItem(this, name)\r\n  }\r\n\r\n  GetRef = (name) => {\r\n    return this.GetItem(name).value;\r\n  }\r\n\r\n  get Target(){\r\n    return this.GetRef('Target')\r\n  }\r\n}","import React from 'react';\r\nimport * as genUtil from '../../util/generalUtil'\r\n\r\n// method\r\nexport const GetItem = (q, name) => {\r\n  var list = q.Items;\r\n\r\n  var item = genUtil.SingleFilter(list, x => x.key === name)\r\n  if (!item){\r\n    item = {\r\n      key: name,\r\n      value : React.createRef()\r\n    }\r\n\r\n    list.push(item)\r\n  }\r\n\r\n  return item;\r\n}","import { RefDict } from '../model/ref/RefDict';\r\n\r\nexport const GetRefData = (q) => {\r\n  if (!q.Target_RefData) {\r\n    q.Target_RefData = new RefDict();\r\n  }\r\n\r\n  return q.Target_RefData\r\n}\r\n\r\nexport const GetRefItem = (q, refName) => {\r\n  if (!q.Target_RefData) {\r\n    q.Target_RefData = new RefDict();\r\n  }\r\n\r\n  return q.Target_RefData.GetItem(refName);\r\n}\r\n\r\nexport const CheckOutside = (e, ref) => {\r\n  try {\r\n    return ref && ref.current && !ref.current.contains(e.target)\r\n  } catch {\r\n    console.log(ref.current)\r\n    throw 500;\r\n  }\r\n}\r\n\r\nexport const ClickOutsite = (q, refName, handle) => {\r\n  var item = GetRefItem(q, refName);\r\n\r\n  if (!item.Events) {\r\n    item.Events = []\r\n  }\r\n\r\n  var ref = item.value;\r\n\r\n  item.Events.push({\r\n    key: 'mousedown',\r\n    func: (e) => {\r\n      if (CheckOutside(e, ref)) {\r\n        handle(e);\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const Export_RefData = (q, loadType) => {\r\n  if (q.Target_RefData) {\r\n    q.Target_RefData.Items.forEach(item => {\r\n      if (!item.Events) return;\r\n\r\n      item.Events.forEach(x => {\r\n        // mount\r\n        if (loadType === 'mount') {\r\n          document.addEventListener(x.key, x.func);\r\n        }\r\n\r\n        // unmount\r\n        if (loadType === 'unmount') {\r\n          document.removeEventListener(x.key, x.func);\r\n        }\r\n      })\r\n    })\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Field } from './Field';\r\n\r\nimport * as refUtil from '../../util/refUtil'\r\n\r\nclass FieldView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Field()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    refUtil.Export_RefData(this.state, 'mount');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    refUtil.Export_RefData(this.state, 'unmount');\r\n  }\r\n\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div ref={data.RefData.GetRef('Target')}>\r\n          {data.ValueVM.View}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(FieldView);\r\n","import * as util from './FieldUtil'\r\n\r\nimport * as inputUtil from '../../util/inputUtil'\r\nimport * as genUtil from '../../util/generalUtil'\r\nimport FieldView from './FieldView'\r\n\r\nexport class Field {\r\n  OnSet_id_Func_Dict = []\r\n  __id\r\n  get _id() {\r\n    return this.__id\r\n  } set _id(v) {\r\n    this.__id = v;\r\n    genUtil.Handle(this.OnSet_id_Func_Dict,\r\n      (v) => this.OnSet_id_Func_Dict = v)\r\n  }\r\n\r\n  tempId\r\n  get TempId() {\r\n    if (!this.tempId) {\r\n      this.tempId = genUtil.newGUID();\r\n    }\r\n    return this.tempId;\r\n  }\r\n\r\n  get id() {\r\n    return this._id ? this._id : this.TempId;\r\n  }\r\n\r\n  Key\r\n\r\n  get Key_id() {\r\n    return this.Key ? this.Key : this.id\r\n  }\r\n\r\n  // ref\r\n  refData\r\n  get RefData() {\r\n    if (!this.refData) {\r\n      this.refData = util.GetRefData(this)\r\n    } return this.refData\r\n  } set RefData(v) {\r\n    this.refData = v;\r\n  }\r\n\r\n  // dict\r\n  Dict\r\n\r\n  // value\r\n  valueGet\r\n  get ValueGet() {\r\n    if (!this.valueGet) {\r\n      this.valueGet = util.GetDefault_ValueGet(this)\r\n    } return this.valueGet\r\n  } set ValueGet(v) {\r\n    this.valueGet = v\r\n  }\r\n\r\n  valueSet\r\n  get ValueSet() {\r\n    if (!this.valueSet) {\r\n      this.valueSet = util.GetDefault_ValueSet(this)\r\n    } return this.valueSet\r\n  } set ValueSet(v) {\r\n    this.valueSet = v\r\n  }\r\n\r\n  ValueSet_OK\r\n\r\n  value\r\n  get Value() {\r\n    return this.ValueGet();\r\n  } set Value(v) {\r\n    if (this.RefineValue) {\r\n      if (!this.IsRefinedValue) {\r\n        this.IsRefinedValue = true\r\n        // v = this.RefineValue(v)\r\n        this.ValueVM.Content = this.RefineValue(v);\r\n        return;\r\n      } else {\r\n        this.IsRefinedValue = false\r\n      }\r\n    }\r\n\r\n    this.ValueSet(v);\r\n\r\n    if (this.OnSetValue) {\r\n      this.OnSetValue(v)\r\n    }\r\n  }\r\n\r\n  // value VM\r\n  ValueVM_Render\r\n\r\n  valueVM\r\n  get ValueVM() {\r\n    if (!this.valueVM) {\r\n      var obj = this.valueVM =\r\n        inputUtil.GetInput(this, 'Value', this.ValueSet_OK)\r\n      obj.InputRegex = this.InputRegex\r\n\r\n      if (this.ValueVM_Render) {\r\n        this.ValueVM_Render(obj);\r\n      }\r\n    } return this.valueVM;\r\n  }\r\n\r\n  // Regex\r\n  InputRegex\r\n\r\n  // edit\r\n  Ready = () => {\r\n    if (this.PreReady) {\r\n      if (!this.PreReady()) return;\r\n    }\r\n\r\n    inputUtil.Ready(this.ValueVM)\r\n  }\r\n\r\n  NotReady = () => {\r\n    if (this.PreNotReady) {\r\n      if (!this.PreNotReady()) return;\r\n    }\r\n\r\n    inputUtil.NotReady(this.ValueVM)\r\n  }\r\n\r\n  // edit\r\n  get OnEdit() {\r\n    return this.ValueVM.RenderState === 'edit'\r\n  }\r\n\r\n  Edit = () => {\r\n    if (this.PreEdit) {\r\n      if (!this.PreEdit()) return;\r\n    }\r\n\r\n    inputUtil.Edit(this.ValueVM)\r\n  }\r\n\r\n  EditOK = () => {\r\n    if (this.PreEditOK) {\r\n      if (!this.PreEditOK()) return;\r\n    }\r\n\r\n    inputUtil.EditOK(this.ValueVM)\r\n  }\r\n\r\n  // view\r\n  viewRender\r\n  get ViewRender() {\r\n    if (!this.viewRender) {\r\n      this.viewRender = util.GetDefault_ViewRender(this)\r\n    } return this.viewRender\r\n  } set ViewRender(v) {\r\n    this.viewRender = v;\r\n  }\r\n\r\n  get View() {\r\n    return this.ViewRender();\r\n  }\r\n\r\n  get WrapperView() {\r\n    return util.Get_WrapperView(this)\r\n  }\r\n}","import { Field } from \"./Field\";\r\nimport FieldView from \"./FieldView\";\r\n\r\nimport * as refUtil from '../../util/refUtil'\r\n\r\n// instance\r\nexport const get = (valueGet, valueSet, valueSet_OK, \r\n    storageType = 'text') => {\r\n  var qI = new Field();\r\n\r\n  qI.ValueGet = valueGet;\r\n  qI.ValueSet = valueSet;\r\n  qI.ValueSet_OK = valueSet_OK\r\n\r\n  qI.ValueVM.StorageType = storageType\r\n\r\n  return qI;\r\n}\r\n\r\n// property\r\n// ref\r\nexport const GetRefData = (q) => {\r\n  refUtil.ClickOutsite(q, 'Target', (e) => {\r\n    q.EditOK()\r\n  })\r\n\r\n  return q.Target_RefData;\r\n}\r\n\r\nexport const GetDefault_ValueGet = (q) => {\r\n  return q.value;\r\n}\r\n\r\nexport const GetDefault_ValueSet = (q, v) => {\r\n  return q.value = v;\r\n}\r\n\r\n// view\r\nexport const GetDefault_ViewRender = (q) => {\r\n  return () => <FieldView key={q.Key_id} store={q} />\r\n}\r\n\r\nexport const Get_WrapperView = (q) => {\r\n  return <div key={q.id}\r\n    onMouseEnter={q.Ready}\r\n    onMouseLeave={q.NotReady}\r\n    onDoubleClick={q.Edit}>\r\n      {q.View}\r\n  </div>\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { Button, message } from 'antd';\r\nimport * as util from './BaseVMUtil'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\nexport class BaseVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      is_ShowSub : observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // data\r\n  fields\r\n  get Fields() {\r\n    if (!this.fields) {\r\n      this.fields = util.GetFields(this)\r\n    } return this.fields\r\n  }\r\n\r\n  GetField = (name) => {\r\n    return genUtil.SingleFilter(this.Fields, x => x.Key === name);\r\n  }\r\n\r\n  // sub\r\n  subDict\r\n  get SubDict(){\r\n    if (!this.subDict){\r\n      this.subDict = util.GetSubDict(this)\r\n    } return this.subDict\r\n  }\r\n\r\n  //\r\n  is_ShowSub = undefined\r\n  get Is_ShowSub(){\r\n    if (this.is_ShowSub === undefined){\r\n      this.is_ShowSub = this.ModelItem.Is_ShowSub\r\n    } return this.is_ShowSub\r\n  } set Is_ShowSub(v){\r\n    this.is_ShowSub = v;\r\n    this.ModelItem.Is_ShowSub = v\r\n\r\n    this.Save();\r\n  }\r\n\r\n  // rank\r\n  get Rank() {\r\n    return util.GetRank(this)\r\n  }\r\n\r\n  // status\r\n  status\r\n  get Status(){\r\n    if (!this.status){\r\n      this.status = util.GetStatus(this)\r\n    } return this.status\r\n  }\r\n\r\n  // css\r\n  get Css() {\r\n    // return this === this.Dict.CurrentItem ? 'bg-[#52c41a90] text-white font-medium' : ''\r\n    return ''\r\n  }\r\n\r\n  // current\r\n  SetCurrent = () => {\r\n    var dict = this.Dict\r\n\r\n    if (dict.CurrentItem === this) {\r\n      dict.CurrentItem = undefined\r\n    } else {\r\n      dict.CurrentItem = this\r\n    }\r\n  }\r\n\r\n  // save\r\n  Save = (handle) => {\r\n    this.ModelItem.Save(handle);\r\n  }\r\n\r\n  // Index\r\n  get CurrentList() {\r\n    return this.Dict.Items\r\n  }\r\n\r\n  get Index() {\r\n    return this.CurrentList.indexOf(this)\r\n  }\r\n\r\n  Delete = () => {\r\n    this.CurrentList.splice(this.Index, 1)\r\n    this.ModelItem.Delete();\r\n  }\r\n\r\n  deleteVM\r\n  get DeleteVM() {\r\n    if (!this.deleteVM) {\r\n      this.deleteVM = util.GetDeleteVM(this)\r\n    } return this.deleteVM;\r\n  }\r\n\r\n  // validate\r\n  Validate = (level) => {\r\n    return this.Dict.Validate(level)\r\n  }\r\n\r\n  // view\r\n  get View() {\r\n    return util.GetView(this)\r\n  }\r\n\r\n  get Indent_View() {\r\n    return util.GetIndent_View(this)\r\n  }\r\n\r\n  get RowView(){\r\n    return util.GetRowView(this)\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { BaseVM } from './BaseVM';\r\n\r\nclass View extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new BaseVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n\r\n    return (\r\n      <>\r\n        {data.RowView}\r\n        {data.Is_ShowSub ? data.SubDict.View : undefined}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(View);\r\n","export const name = 'name'\r\n\r\nexport const List = () => {\r\n  return [\r\n    name,\r\n  ]\r\n}\r\n\r\nexport const GetName = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case name:\r\n      r_name = 'Name';\r\n      break;\r\n  }\r\n\r\n  return r_name\r\n}\r\n\r\nexport const GetTitle = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case name:\r\n      r_name = 'Name';\r\n      break;\r\n  }\r\n\r\n  return r_name\r\n}\r\n\r\nexport const GetPlaceholder = (param) => {\r\n  var r_name\r\n\r\n  switch (param) {\r\n    case name:\r\n      r_name = 'tên checklist';\r\n      break;\r\n  }\r\n\r\n  return r_name\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport * as util from './StatusVMUtil'\r\nimport * as ss from './StatusState'\r\nimport { message } from 'antd';\r\n\r\nexport class StatusVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      state: observable\r\n    })\r\n  }\r\n\r\n  // state\r\n  state = undefined\r\n  get State() {\r\n    if (!this.state) {\r\n      this.state = this.ModelItem.State\r\n    } return this.state\r\n  } set State(v) {\r\n    this.state = v\r\n    this.ModelItem.State = v\r\n  }\r\n\r\n  get FullState() {\r\n    var task = this.Dict\r\n    var list = task.SubDict.Items;\r\n    if (!list) return ss.draft;\r\n\r\n    var length = list.length\r\n\r\n    if (length === 0) return this.State\r\n\r\n    var doneItems = list.filter(x => x.Status.FullState === ss.done)\r\n    return length === doneItems.length ? ss.done : ss.draft\r\n  }\r\n\r\n  // add sub\r\n  AddSub = () => {\r\n    if (!(\r\n      // this.Validate('edit') &&\r\n      true)) return;\r\n\r\n    var task = this.Dict\r\n    var dict = task.SubDict\r\n    dict.AddItem();\r\n\r\n    task.Is_ShowSub = true;\r\n  }\r\n\r\n  // showsub\r\n  get ShowSub_Css() {\r\n    return `${this.Can_ShowSub_Css} ${this.Is_ShowSub_Css}`\r\n  }\r\n\r\n  get Can_ShowSub_Css() {\r\n    var list = this.Dict.SubDict.Items\r\n    return list && list.length !== 0 ? '' : 'invisible'\r\n  }\r\n\r\n  get Is_ShowSub_Css() {\r\n    return this.Dict.Is_ShowSub ? 'text-[#52c41a]' : 'text-[#faad14]';\r\n  }\r\n\r\n  ToggleSub = () => {\r\n    var dict = this.Dict;\r\n    dict.Is_ShowSub = !dict.Is_ShowSub\r\n  }\r\n\r\n  // done task\r\n  DoneTask_Message\r\n\r\n  get IsValid_DoneTask() {\r\n    var task = this.Dict;\r\n\r\n    var list = task.SubDict.Items;\r\n    if (!list) return false;\r\n\r\n    if (list.length !== 0) {\r\n      this.DoneTask_Message = 'Bạn phải duyệt các công việc con'\r\n      return false;\r\n    }\r\n\r\n    this.DoneTask_Message = undefined\r\n    return true;\r\n  }\r\n\r\n  get DoneTask_Css() {\r\n    return this.FullState === ss.done ?\r\n      'text-[#52c41a]' :\r\n      this.IsValid_DoneTask ? 'text-[#faad14]' : 'text-gray-500'\r\n  }\r\n\r\n  DoneTask = () => {\r\n    if (this.FullState === ss.done) return;\r\n\r\n    if (this.DoneTask_Message) {\r\n      message.warn(this.DoneTask_Message);\r\n      return\r\n    }\r\n\r\n    this.State = ss.done\r\n\r\n    var task = this.Dict\r\n    task.Save();\r\n  }\r\n\r\n  // validate\r\n  Validate = (level) => {\r\n    return this.Dict.Validate(level)\r\n  }\r\n\r\n  // view\r\n  get View() {\r\n    return util.GetView(this)\r\n  }\r\n}","import { PlusCircleOutlined, SolutionOutlined, CheckCircleOutlined } from '@ant-design/icons';\r\nimport { StatusVM } from \"./StatusVM\"\r\n\r\n// instance\r\nexport const get = (q, dict) => {\r\n  var qI = new StatusVM();\r\n\r\n  qI.ModelItem = q\r\n  qI.Dict = dict;\r\n\r\n  return qI;\r\n}\r\n\r\n// property\r\n// view\r\nexport const GetView = (q) => {\r\n  return <div className='flex'>\r\n    <div className='flex'>\r\n      <div className='cursor-pointer text-[#1890ff]'\r\n        onClick={q.AddSub}>\r\n        <PlusCircleOutlined />\r\n      </div>\r\n      <div className={`ml-2 cursor-pointer ${q.ShowSub_Css}`}\r\n        onClick={q.ToggleSub}>\r\n        <SolutionOutlined />\r\n      </div>\r\n\r\n      {q.Dict.DeleteVM.View}\r\n    </div>\r\n\r\n    <div className='flex ml-3'>\r\n      <div className={`cursor-pointer ${q.DoneTask_Css}`}\r\n        onClick={q.DoneTask}>\r\n        <CheckCircleOutlined />\r\n      </div>\r\n    </div>\r\n  </div>\r\n}","import { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { BaseVM } from './BaseVM'\r\nimport { EntDelete } from '../../../../../delete/EntDelete';\r\nimport View from './BaseView'\r\nimport * as f from '../field/Field'\r\nimport * as fieldUtil from '../../../../../field/FieldUtil'\r\nimport * as subDictUtil from '../dict/DictVMUtil'\r\n\r\nimport * as statusUtil from '../status/StatusVMUtil'\r\n\r\nimport * as inputUtil from '../../../../../../util/inputUtil'\r\nimport { PMDataVM } from '../../../../single/form/PMDataVM';\r\nimport { Switch } from 'antd';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new BaseVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\n// field\r\nexport const GetFields = (q) => {\r\n  var inputs = f.List();\r\n\r\n  var host = q.ModelItem;\r\n  var fields = []\r\n\r\n  inputs.forEach((x, i) => {\r\n    var fName = f.GetName(x);\r\n\r\n    var qI;\r\n    qI = fieldUtil.get(\r\n      () => host[fName],\r\n      (v) => {\r\n        host[fName] = v\r\n      },\r\n      q.Save,\r\n      'html'\r\n    )\r\n\r\n    // qI.PreReady = () => q.Validate('edit') && pmDataVM().ViewMode === 'edit'\r\n    // qI.PreEdit = () => q.Validate('edit')\r\n\r\n    qI.PreReady = () => pmDataVM().ViewMode === 'edit'\r\n\r\n    qI.Key = x;\r\n    fields.push(qI)\r\n  })\r\n\r\n  return fields;\r\n}\r\n\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = 'manual'\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.Retrieve_ShowHover_Button = () => {\r\n    return <div className={`ml-2 cursor-pointer text-[#ff4d4f]`}\r\n      onClick={qI.Show_Hover}>\r\n      <CloseCircleOutlined />\r\n    </div>\r\n  }\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\n// item\r\n\r\n// sub\r\nexport const GetSubDict = (q) => {\r\n  return subDictUtil.get(q.ModelItem.SubDict, q);\r\n}\r\n\r\n// rank\r\nexport const GetRank = (q) => {\r\n  var supRank = q.Dict.Dict.Rank\r\n  return supRank !== undefined ? supRank + 1 : 0\r\n}\r\n\r\n// status\r\nexport const GetStatus = (q) => {\r\n  return statusUtil.get(q.ModelItem.Status, q)\r\n}\r\n\r\n// view\r\nexport const GetView = (q) => {\r\n  return <View key={q.id} store={q} />\r\n}\r\n\r\nexport const GetIndent_View = (q) => {\r\n  var width = `${q.Rank * 17}px`\r\n\r\n  return <div style={{ width }} />\r\n}\r\n\r\nexport const GetRowView = (q) => {\r\n  return <tr>\r\n    <td className='non-input'>\r\n      {q.Rank === 0 ? q.Index + 1 : ''}\r\n    </td>\r\n    <td className='non-input'>{q.Status.View}</td>\r\n    <td>\r\n      <div className='flex'>\r\n        {q.Indent_View}\r\n        <div className={`flex-1 ${q.Status.FullState === 'done' ? 'text-[#52c41a]' : ''}`}>\r\n          {q.GetField(f.name).WrapperView}\r\n        </div>\r\n      </div>\r\n    </td>\r\n  </tr>\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport { DictVM } from './DictVM';\r\n\r\nclass View extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new DictVM();\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n\r\n    return (\r\n      <>\r\n        {data.IsSub ? data.SubView : data.TableView}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(View);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\nimport * as util from './DictVMUtil'\r\nimport * as itemUtil from '../base/BaseVMUtil'\r\nimport View from './DictView'\r\n\r\nimport * as commandType from '../../../user/command/base/CommandType'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\nimport * as commandUtil from '../../../../../../util/commandUtil'\r\nimport { Button } from 'antd';\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = () => {\r\n    var q = this.ModelItem.AddItem();\r\n    var qI = itemUtil.get(q, this);\r\n\r\n    this.Items.push(qI)\r\n    return qI;\r\n  }\r\n\r\n  // \r\n  get IsInDiscipline() {\r\n    return this.ModelItem.IsInDiscipline\r\n  }\r\n\r\n  // sub\r\n  get IsSub() {\r\n    return this.ModelItem.IsSub\r\n  }\r\n\r\n  // validate\r\n  Validate = (level) => {\r\n    return commandUtil.Validate(undefined, { type: commandType.content, level })\r\n  }\r\n\r\n  // view\r\n  // table\r\n  get ItemsView() {\r\n    return this.Items?.map(x => x.View)\r\n  }\r\n\r\n  get View() {\r\n    return <View key={this.id} store={this} />\r\n  }\r\n\r\n  get TableView() {\r\n    return <table className='table table-bordered table-fixed'>\r\n      <thead className='bg-[#e9ecef]'>\r\n        <tr>\r\n          <th className='w-8'></th>\r\n\r\n          {/* Status */}\r\n          <th className='w-28'></th>\r\n\r\n          <th className='w-full'>\r\n            <div className='flex'>\r\n              <div className='ml-4'>Task</div>\r\n              {\r\n                // this.Validate('edit') && \r\n                true ?\r\n                  <div className='ml-2 -mt-1 cursor-pointer text-[#1890ff]'\r\n                    onClick={this.AddItem}>\r\n                    <PlusCircleOutlined />\r\n                  </div>\r\n                  : ''}\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.ItemsView}\r\n      </tbody>\r\n    </table>\r\n  }\r\n\r\n  get SubView() {\r\n    return this.ItemsView\r\n  }\r\n}","import { DictVM } from \"./DictVM\";\r\nimport { SelectVM } from '../../../../../select/SelectVM';\r\nimport * as itemUtil from '../base/BaseVMUtil'\r\n\r\nimport * as genUtil from '../../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => itemUtil.get(x, q));\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Items_Func,\r\n    () => setObj(host.Items),\r\n    false\r\n  )\r\n}","import { BaseVM } from './BaseVM'\r\nimport { EntDelete } from '../../../../delete/EntDelete';\r\nimport * as f from '../field/Field'\r\nimport * as fieldUtil from '../../../../field/FieldUtil'\r\nimport * as taskDictUtil from '../../task/base/dict/DictVMUtil'\r\n\r\nimport * as inputUtil from '../../../../../util/inputUtil'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { Switch } from 'antd';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new BaseVM();\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict;\r\n  return qI;\r\n}\r\n\r\n// Property\r\n// field\r\nexport const GetFields = (q) => {\r\n  var inputs = f.List();\r\n\r\n  var host = q.ModelItem;\r\n  var fields = []\r\n\r\n  inputs.forEach((x, i) => {\r\n    var fName = f.GetName(x);\r\n\r\n    var qI;\r\n    qI = fieldUtil.get(\r\n      () => host[fName],\r\n      (v) => {\r\n        host[fName] = v\r\n      }, q.Save\r\n    )\r\n\r\n    // qI.PreReady = () => q.Validate('edit') && pmDataVM().ViewMode === 'edit'\r\n    // qI.PreEdit = () => q.Validate('edit')\r\n\r\n    qI.PreReady = () => pmDataVM().ViewMode === 'edit'\r\n\r\n    qI.Key = x;\r\n    fields.push(qI)\r\n  })\r\n\r\n  return fields;\r\n}\r\n\r\nexport const GetDeleteVM = (q) => {\r\n  var qI = new EntDelete();\r\n\r\n  qI.ToggleType = 'manual'\r\n  qI.Title = 'Xác nhận xóa?'\r\n\r\n  qI.OnRun = () => {\r\n    q.Delete();\r\n  }\r\n\r\n  return qI;\r\n}\r\n\r\n// checklist\r\nexport const GetTaskDict = (q) => {\r\n  return taskDictUtil.get(q.ModelItem.TaskDict, q)\r\n}\r\n\r\n\r\n// view\r\nexport const GetTitleView = (q) => {\r\n  return <div key={q.id} className={`flex items-center ${q.Css}`}>\r\n    <div className='w-6 my-2 h-5 cursor-pointer bg-[#52c41a90]'\r\n      onClick={q.SetCurrent}>\r\n    </div>\r\n\r\n    <div className='mx-1'>\r\n      {\r\n      // q.Validate('edit') && \r\n      (pmDataVM().ViewMode === 'edit' || q.GetField(f.name).OnEdit) ?\r\n        q.DeleteVM.View : ''}\r\n    </div>\r\n\r\n    <div className='flex-1 flex items-center'>\r\n      <div className='mx-2'>\r\n        {`${q.Index + 1}.`}\r\n      </div>\r\n\r\n      <div className='flex-1'>\r\n        {q.GetField(f.name).WrapperView}\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport const GetContentView = (q) => {\r\n  return <>\r\n    <div key={q.id}>\r\n      <div className=''>\r\n        {q.TaskDict.View}\r\n      </div>\r\n    </div>\r\n  </>\r\n}","import { makeObservable, observable, action } from 'mobx';\r\nimport { Button, message } from 'antd';\r\nimport * as util from './DictVMUtil'\r\nimport * as itemUtil from '../base/BaseVMUtil'\r\n\r\nimport * as commandType from '../../user/command/base/CommandType'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\nimport * as commandUtil from '../../../../../util/commandUtil'\r\n\r\nexport class DictVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      items: observable,\r\n      CurrentItem: observable\r\n    })\r\n  }\r\n\r\n  get id() {\r\n    return this.ModelItem.id;\r\n  }\r\n\r\n  // Item\r\n  OnSet_Items_Func = []\r\n\r\n  items = undefined\r\n  get Items() {\r\n    if (!this.items) {\r\n      util.Handle_Items(this)\r\n    } return this.items\r\n  } set Items(v) {\r\n    this.items = v;\r\n\r\n    genUtil.Handle(this.OnSet_Items_Func,\r\n      (v) => this.OnSet_Items_Func = v)\r\n  }\r\n\r\n  AddItem = () => {\r\n    var q = this.ModelItem.AddItem();\r\n    var qI = itemUtil.get(q, this);\r\n\r\n    this.Items.push(qI)\r\n    return qI;\r\n  }\r\n\r\n  CurrentItem = undefined\r\n\r\n  // validate\r\n  Validate = (level) => {\r\n    return commandUtil.Validate(undefined, { type: commandType.content, level })\r\n  }\r\n\r\n  // view\r\n  // table\r\n  get ItemsView() {\r\n    return this.Items?.map(x => x.TitleView)\r\n  }\r\n\r\n  get View() {\r\n    return <div className='flex'>\r\n      <div className='w-3/12 pr-7'>\r\n        <div className='mb-3'>\r\n          <span className='text-lg font-medium'>Dự án</span>\r\n        </div>\r\n\r\n        {/* Items */}\r\n        <div className='flex'>\r\n          {\r\n          // this.Validate('edit') && \r\n          true ?\r\n            <div className='mt-2 mr-2'>\r\n              <Button type='primary' size='small'\r\n                className='btn-success'\r\n                onClick={this.AddItem}>+</Button>\r\n            </div>\r\n            : ''}\r\n\r\n          <div className='flex-1'>\r\n            {this.ItemsView}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* CurrentItem */}\r\n      <div className='flex-1'>\r\n        {this.CurrentItem?.ContentView}\r\n      </div>\r\n    </div>\r\n  }\r\n}","import { DictVM } from \"./DictVM\";\r\nimport { SelectVM } from '../../../../select/SelectVM';\r\nimport * as itemUtil from '../base/BaseVMUtil'\r\n\r\nimport * as genUtil from '../../../../../util/generalUtil'\r\n\r\n// Instance\r\nexport const get = (q, dict) => {\r\n  var qI = new DictVM();\r\n\r\n  qI.ModelItem = q;\r\n  qI.Dict = dict\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\nexport const Handle_Items = (q) => {\r\n  if (q.IsGet_Items) return undefined;\r\n  q.IsGet_Items = true;\r\n\r\n  const setObj = (data) => {\r\n    q.Items = data.map(x => itemUtil.get(x, q));\r\n    q.IsGet_Items = false;\r\n  }\r\n\r\n  var host = q.ModelItem\r\n  if (host.Items) {\r\n    setObj(host.Items)\r\n  }\r\n\r\n  genUtil.Add_2(\r\n    host.OnSet_Items_Func,\r\n    () => setObj(host.Items),\r\n    false\r\n  )\r\n}","import * as api from '../../../../util/apiUtil'\r\nimport { PMData } from '../model/PMData';\r\nimport { PMDataVM } from './PMDataVM';\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport * as layoutUtil from '../../entity/layout/layout/LayoutUtil'\r\n\r\n// user\r\nimport * as userDictUtil from '../../../user/dict/User_DictVMUtil'\r\n\r\n// role\r\nimport * as roleDictUtil from '../../entity/user/role/dict/DictVMUtil'\r\n\r\n// project\r\nimport * as projectDictUtil from '../../entity/project/dict/DictVMUtil'\r\n\r\n// task\r\nimport * as taskDictUtil from '../../entity/task/base/dict/DictVMUtil'\r\n\r\nexport const pmData = () => PMData.Instance;\r\n\r\n// Instance\r\nexport const get = () => {\r\n  var qI = new PMDataVM();\r\n\r\n  return qI;\r\n}\r\n\r\n// Property\r\n// layout\r\nexport const GetLayout = (q) => {\r\n  return layoutUtil.get()\r\n}\r\n// user\r\nexport const GetUserDict = (data) => {\r\n  var qI = userDictUtil.get(pmData().UserDict, data);\r\n\r\n  qI.ViewRender = () => <div className='ud__wrapper'>\r\n    <div className='ud__dec f'>\r\n      <div className='f1' />\r\n      <div>\r\n        <div className='ud__main__wrapper'>\r\n          {qI.MainView}\r\n        </div>\r\n        {qI.ModalView}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  return qI;\r\n}\r\n\r\n// role\r\nexport const GetRoleDict = (data) => {\r\n  return roleDictUtil.get(pmData().RoleDict, data);\r\n}\r\n\r\n// project\r\nexport const GetProjectDict = (q) => {\r\n  return projectDictUtil.get(pmData().ProjectDict, q)\r\n}\r\n\r\n// task\r\nexport const GetTaskDict = (q) => {\r\n  return taskDictUtil.get(pmData().TaskDict, q);\r\n}","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Switch } from 'antd';\r\nimport './Header.css'\r\nimport { Header } from './Header';\r\nimport { Link } from 'react-router-dom';\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport { PMData } from '../../../single/model/PMData';\r\nimport * as vm from '../../view/ViewMode'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\nconst pmData = () => PMData.Instance\r\n\r\nclass HeaderView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Header()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n    var qI = pmDataVM();\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          {/* UserDict */}\r\n          {/* {pmDataVM().UserDict.View} */}\r\n\r\n          <div className='ml-8'>\r\n            <Switch checkedChildren=\"view\" unCheckedChildren=\"edit\"\r\n              checked={qI.ViewMode === vm.view}\r\n              onChange={(v) => {\r\n                qI.ViewMode = v ? vm.view : vm.edit\r\n              }} />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(HeaderView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Pagination } from 'antd';\r\nimport './Body.css'\r\nimport { Body } from './Body';\r\n\r\nclass BodyView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Body()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='body__wrapper'>\r\n          {data.MainView}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(BodyView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button } from 'antd';\r\nimport './Footer.css'\r\nimport { Footer } from './Footer';\r\n\r\nclass FooterView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Footer()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='footer__wrapper'>\r\n          Footer\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(FooterView);\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, message, Switch } from 'antd';\r\nimport './Layout.css'\r\nimport { Layout, Vi_Comp } from './Layout';\r\nimport HeaderView from '../header/HeaderView';\r\nimport BodyView from '../body/BodyView';\r\nimport FooterView from '../footer/FooterView';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as vs from '../../view/ViewState'\r\nimport { PMDataVM } from '../../../single/form/PMDataVM';\r\nimport * as vt from '../../view/ViewType'\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nclass LayoutView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var { store } = this.props;\r\n    if (!store) {\r\n      this.state = new Layout()\r\n    } else {\r\n      this.state = store;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = this.state;\r\n    const { type, meta, type2 } = this.props.match.params;\r\n    vt.Handle(type, meta, type2);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    var data = this.state;\r\n    const { type, meta, type2 } = this.props.match.params;\r\n    vt.Handle(type, meta, type2);\r\n  }\r\n\r\n  render() {\r\n    var data = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='layout__wrapper'>\r\n          {/* Header */}\r\n          <HeaderView store={data.Header} />\r\n\r\n          {/* Body */}\r\n          <BodyView store={data.Body} />\r\n\r\n          {/* Footer */}\r\n          {/* <FooterView store={data.Footer} /> */}\r\n\r\n          <div className='h-36' />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(observer(LayoutView));\r\n","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Button, Col, Row } from 'antd';\r\nimport { PMDataVM } from './PMDataVM';\r\n// import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\nimport LayoutView from '../../entity/layout/layout/LayoutView';\r\nimport './PMData.css'\r\n\r\nclass PMDataView extends Component {\r\n  render() {\r\n    var data = this.data;\r\n\r\n    return (\r\n      <>\r\n        <Route path='/:type?/:meta?/:type2?' exact component={LayoutView} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(PMDataView);\r\n","import { makeObservable, observable, action } from 'mobx';\r\nimport { PMData } from '../model/PMData';\r\nimport * as util from './PMDataVMUtil'\r\nimport * as genUtil from '../../../../util/generalUtil'\r\nimport { Route, BrowserRouter, HashRouter, Switch } from 'react-router-dom';\r\nimport LayoutView from '../../entity/layout/layout/LayoutView';\r\nimport PMDataView from './PMDataView';\r\nimport * as vt from '../../entity/view/ViewType'\r\nimport * as vm from '../../entity/view/ViewMode'\r\n\r\nexport class PMDataVM {\r\n  constructor() {\r\n    makeObservable(this, {\r\n      isAdmin: observable,\r\n      routeData : observable,\r\n      viewMode : observable\r\n    })\r\n  }\r\n\r\n  static instance\r\n  static get Instance() {\r\n    if (!this.instance) {\r\n      this.instance = util.get();\r\n    }\r\n    return this.instance;\r\n  } static set Instance(v) {\r\n    this.instance = v\r\n  }\r\n\r\n  get pmData() {\r\n    return PMData.Instance;\r\n  }\r\n\r\n  // route\r\n  routeData = undefined\r\n  get RouteData(){\r\n    if (!this.routeData){\r\n      this.routeData = [ 'home' ]\r\n    } return this.routeData\r\n  } set RouteData(v){\r\n    this.routeData = v;\r\n  }\r\n\r\n  // Layout\r\n  layout\r\n  get Layout() {\r\n    if (!this.layout) {\r\n      this.layout = util.GetLayout(this)\r\n    }\r\n    return this.layout\r\n  }\r\n\r\n  OnSet_IsAdmin_Func_Dict = []\r\n\r\n  // User\r\n  isAdmin = undefined\r\n  get IsAdmin() {\r\n    return this.isAdmin\r\n  } set IsAdmin(v) {\r\n    this.isAdmin = v;\r\n\r\n    genUtil.Handle(this.OnSet_IsAdmin_Func_Dict,\r\n      (v) => this.OnSet_IsAdmin_Func_Dict = v)\r\n  }\r\n\r\n  // Data\r\n // UserDict\r\n userDict\r\n get UserDict() {\r\n   if (!this.userDict) {\r\n     this.userDict = util.GetUserDict(this)\r\n   } return this.userDict;\r\n }\r\n\r\n // role\r\n roleDict\r\n get RoleDict(){\r\n   if (!this.roleDict){\r\n     this.roleDict = util.GetRoleDict(this)\r\n   } return this.roleDict\r\n }\r\n\r\n  // discipline\r\n  projectDict\r\n  get ProjectDict(){\r\n    if (!this.projectDict){\r\n      this.projectDict = util.GetProjectDict(this)\r\n    } return this.projectDict\r\n  }\r\n\r\n  // task\r\n  taskDict\r\n  get TaskDict(){\r\n    if (!this.taskDict){\r\n      this.taskDict = util.GetTaskDict(this)\r\n    } return this.taskDict\r\n  }\r\n\r\n  // View\r\n  viewMode = undefined\r\n  get ViewMode(){\r\n    if (this.viewMode === undefined){\r\n      this.viewMode = this.pmData.ViewMode\r\n    } return this.viewMode\r\n  } set ViewMode(v){\r\n    this.viewMode = v\r\n    this.pmData.ViewMode = v\r\n  }\r\n\r\n  get MainView() {\r\n    return <PMDataView store={this}/>\r\n  }\r\n\r\n  get WrapperView() {\r\n    return this.pmData.IsDeploy ?\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          {this.MainView}\r\n        </Switch>\r\n      </HashRouter>\r\n      :\r\n      <BrowserRouter>\r\n        <Switch>\r\n          {this.MainView}\r\n        </Switch>\r\n      </BrowserRouter>\r\n  }\r\n\r\n  UnAuthorized_View =\r\n    <span className='text-[#ff4d4f] font-medium text-sm'>Bạn không có quyền truy cập View hiện tại!</span>\r\n}","import './App.css';\r\nimport \"antd/dist/antd.css\";\r\nimport { Component } from 'react';\r\n\r\nimport { PMDataVM } from './model/main/single/form/PMDataVM';\r\n\r\nconst pmDataVM = () => PMDataVM.Instance\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {pmDataVM().WrapperView}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}